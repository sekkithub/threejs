@charset "UTF-8";

/* =======================
   Settings/Colors
   ======================= */

/* =======================
   Setting/Transitions
   ======================= */

/* =======================
   Settings/Measurements
   ======================= */

/* =======================
   The Black Tie Font is commercial software. Please do not distribute.
   ======================= */

@font-face {
  font-family: 'Black Tie';
  src: url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/solid/BlackTie-Solid-webfont.svg?v=1.0.0#black_tiesolid") format("svg");
  font-weight: 900;
  font-style: normal;
}

@font-face {
  font-family: 'Black Tie';
  src: url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/bold/BlackTie-Bold-webfont.svg?v=1.0.0#black_tiebold") format("svg");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Black Tie';
  src: url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/regular/BlackTie-Regular-webfont.svg?v=1.0.0#black_tieregular") format("svg");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: 'Black Tie';
  src: url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/light/BlackTie-Light-webfont.svg?v=1.0.0#black_tielight") format("svg");
  font-weight: 200;
  font-style: normal;
}

@font-face {
  font-family: 'Font Awesome Brands';
  src: url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.eot?v=1.0.0");
  src: url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.eot?#iefix&v=1.0.0") format("embedded-opentype"), url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.woff2?v=1.0.0") format("woff2"), url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.woff?v=1.0.0") format("woff"), url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.ttf?v=1.0.0") format("truetype"), url("/fonts/black-tie/fonts/brands/FontAwesomeBrands-Regular-webfont.svg?v=1.0.0#font_awesome_brandsregular") format("svg");
  font-weight: normal;
  font-style: normal;
}

.bts,
.btb,
.btr,
.btl,
.fab {
  display: inline-block;
  font: normal normal normal 14px/1 "Black Tie";
  font-size: inherit;
  vertical-align: -14.28571429%;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-transform: translate(0, 0);
          transform: translate(0, 0);
}

.bts {
  font-weight: 900;
}

.btb {
  font-weight: 700;
}

.btl {
  font-weight: 200;
}

.fab {
  font-family: "Font Awesome Brands";
}

/* makes the font 25% smaller relative to the icon container */

.bt-sm {
  font-size: .7em;
  vertical-align: baseline;
}

/* makes the font 33% larger relative to the icon container */

.bt-lg {
  font-size: 1.33333333em;
  line-height: 0.75em;
}

.bt-2x {
  font-size: 2em;
}

.bt-3x {
  font-size: 3em;
}

.bt-4x {
  font-size: 4em;
}

.bt-5x {
  font-size: 5em;
}

.bt-lg,
.bt-2x,
.bt-3x,
.bt-4x,
.bt-5x {
  vertical-align: -30%;
}

.bt-fw {
  width: 1.28571429em;
  text-align: center;
}

.bt-ul {
  padding-left: 0;
  margin-left: 2.14285714em;
  list-style-type: none;
}

.bt-ul > li {
  position: relative;
}

.bt-li {
  position: absolute;
  left: -2.14285714em;
  width: 2.14285714em;
  top: 0.14285714em;
  text-align: center;
}

.bt-li.bt-lg {
  left: -2em;
}

.bt-border {
  padding: .2em;
  border: solid 0.08em #eeeeee;
  border-radius: .1em;
}

.pull-right {
  float: right;
}

.pull-left {
  float: left;
}

.bts.pull-left,
.btb.pull-left,
.btr.pull-left,
.btl.pull-left,
.fab.pull-left {
  margin-right: .3em;
}

.bts.pull-right,
.btb.pull-right,
.btr.pull-right,
.btl.pull-right,
.fab.pull-right {
  margin-left: .3em;
}

.bt-spin {
  -webkit-animation: bt-spin 2s infinite linear;
  animation: bt-spin 2s infinite linear;
}

.bt-pulse {
  -webkit-animation: bt-spin 1s infinite steps(8);
  animation: bt-spin 1s infinite steps(8);
}

@-webkit-keyframes bt-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}

@keyframes bt-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}

.bt-rotate-90 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
  -webkit-transform: rotate(90deg);
  transform: rotate(90deg);
}

.bt-rotate-180 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
  -webkit-transform: rotate(180deg);
  transform: rotate(180deg);
}

.bt-rotate-270 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
  -webkit-transform: rotate(270deg);
  transform: rotate(270deg);
}

.bt-flip-horizontal {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);
  -webkit-transform: scale(-1, 1);
  transform: scale(-1, 1);
}

.bt-flip-vertical {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
  -webkit-transform: scale(1, -1);
  transform: scale(1, -1);
}

:root .bt-rotate-90,
:root .bt-rotate-180,
:root .bt-rotate-270,
:root .bt-flip-horizontal,
:root .bt-flip-vertical {
  -webkit-filter: none;
          filter: none;
}

.bt-stack {
  position: relative;
  display: inline-block;
  width: 1.28571429em;
  height: 1em;
  line-height: 1em;
  vertical-align: baseline;
}

.bt-stack-sm {
  position: absolute;
  top: 0;
  left: 0;
  line-height: inherit;
  font-size: .5em;
}

.bt-stack-1x,
.bt-stack-sm {
  display: inline-block;
  width: 100%;
  text-align: center;
}

.bt-inverse {
  color: #ffffff;
}

/* Black Tie uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */

.bt-bars:before {
  content: "\F000";
}

.bt-envelope:before {
  content: "\F001";
}

.bt-search:before {
  content: "\F002";
}

.bt-search-plus:before {
  content: "\F003";
}

.bt-search-minus:before {
  content: "\F004";
}

.bt-phone:before {
  content: "\F005";
}

.bt-comment:before {
  content: "\F007";
}

.bt-commenting:before {
  content: "\F008";
}

.bt-comments:before {
  content: "\F009";
}

.bt-rss:before {
  content: "\F00A";
}

.bt-times:before {
  content: "\F00C";
}

.bt-times-circle:before {
  content: "\F00D";
}

.bt-clock:before {
  content: "\F00E";
}

.bt-star:before {
  content: "\F010";
}

.bt-star-half:before {
  content: "\F011";
}

.bt-check:before {
  content: "\F012";
}

.bt-check-circle:before {
  content: "\F013";
}

.bt-check-square:before {
  content: "\F014";
}

.bt-th:before {
  content: "\F015";
}

.bt-th-large:before {
  content: "\F016";
}

.bt-heart:before {
  content: "\F017";
}

.bt-heart-half:before {
  content: "\F018";
}

.bt-calendar:before {
  content: "\F019";
}

.bt-shopping-cart:before {
  content: "\F01A";
}

.bt-plus:before {
  content: "\F01B";
}

.bt-plus-circle:before {
  content: "\F01C";
}

.bt-plus-square:before {
  content: "\F01D";
}

.bt-pen:before {
  content: "\F01E";
}

.bt-minus:before {
  content: "\F021";
}

.bt-minus-circle:before {
  content: "\F022";
}

.bt-minus-square:before {
  content: "\F023";
}

.bt-pencil:before {
  content: "\F024";
}

.bt-edit:before {
  content: "\F025";
}

.bt-thumbs-up:before {
  content: "\F026";
}

.bt-thumbs-down:before {
  content: "\F027";
}

.bt-gear:before {
  content: "\F028";
}

.bt-trash:before {
  content: "\F029";
}

.bt-file:before {
  content: "\F02A";
}

.bt-info-circle:before {
  content: "\F02B";
}

.bt-label:before {
  content: "\F02C";
}

.bt-rocket:before {
  content: "\F02D";
}

.bt-book:before {
  content: "\F02E";
}

.bt-book-open:before {
  content: "\F02F";
}

.bt-notebook:before {
  content: "\F030";
}

.bt-camera:before {
  content: "\F031";
}

.bt-folder:before {
  content: "\F032";
}

.bt-quote-left:before {
  content: "\F036";
}

.bt-quote-right:before {
  content: "\F037";
}

.bt-eye:before {
  content: "\F038";
}

.bt-lock:before {
  content: "\F039";
}

.bt-lock-open:before {
  content: "\F03A";
}

.bt-gift:before {
  content: "\F03B";
}

.bt-spinner-clock:before {
  content: "\F03C";
}

.bt-spinner:before {
  content: "\F03D";
}

.bt-wrench:before {
  content: "\F03E";
}

.bt-cloud:before {
  content: "\F040";
}

.bt-cloud-upload:before {
  content: "\F041";
}

.bt-cloud-download:before {
  content: "\F042";
}

.bt-sync:before {
  content: "\F043";
}

.bt-question-circle:before {
  content: "\F044";
}

.bt-share:before {
  content: "\F045";
}

.bt-briefcase:before {
  content: "\F046";
}

.bt-money:before {
  content: "\F047";
}

.bt-megaphone:before {
  content: "\F048";
}

.bt-sign-in:before {
  content: "\F049";
}

.bt-sign-out:before {
  content: "\F04A";
}

.bt-film:before {
  content: "\F04B";
}

.bt-trophy:before {
  content: "\F04C";
}

.bt-code:before {
  content: "\F04D";
}

.bt-light-bulb:before {
  content: "\F04E";
}

.bt-print:before {
  content: "\F050";
}

.bt-fax:before {
  content: "\F051";
}

.bt-video:before {
  content: "\F052";
}

.bt-signal:before {
  content: "\F053";
}

.bt-sitemap:before {
  content: "\F054";
}

.bt-upload:before {
  content: "\F055";
}

.bt-download:before {
  content: "\F056";
}

.bt-key:before {
  content: "\F057";
}

.bt-mug:before {
  content: "\F058";
}

.bt-bookmark:before {
  content: "\F059";
}

.bt-flag:before {
  content: "\F05A";
}

.bt-external-link:before {
  content: "\F05B";
}

.bt-smile:before {
  content: "\F05C";
}

.bt-frown:before {
  content: "\F05D";
}

.bt-meh:before {
  content: "\F05E";
}

.bt-magic:before {
  content: "\F060";
}

.bt-bolt:before {
  content: "\F061";
}

.bt-exclamation-triangle:before {
  content: "\F062";
}

.bt-exclamation-circle:before {
  content: "\F063";
}

.bt-flask:before {
  content: "\F064";
}

.bt-music:before {
  content: "\F065";
}

.bt-push-pin:before {
  content: "\F066";
}

.bt-shield:before {
  content: "\F067";
}

.bt-sort:before {
  content: "\F068";
}

.bt-reply:before {
  content: "\F069";
}

.bt-forward:before {
  content: "\F06A";
}

.bt-reply-all:before {
  content: "\F06B";
}

.bt-forward-all:before {
  content: "\F06C";
}

.bt-bell:before {
  content: "\F06D";
}

.bt-bell-off:before {
  content: "\F06E";
}

.bt-ban:before {
  content: "\F070";
}

.bt-database:before {
  content: "\F071";
}

.bt-hard-drive:before {
  content: "\F072";
}

.bt-merge:before {
  content: "\F073";
}

.bt-fork:before {
  content: "\F074";
}

.bt-wifi:before {
  content: "\F075";
}

.bt-paper-plane:before {
  content: "\F076";
}

.bt-inbox:before {
  content: "\F077";
}

.bt-fire:before {
  content: "\F078";
}

.bt-play:before {
  content: "\F079";
}

.bt-pause:before {
  content: "\F07A";
}

.bt-stop:before {
  content: "\F08B";
}

.bt-play-circle:before {
  content: "\F07B";
}

.bt-next:before {
  content: "\F07C";
}

.bt-previous:before {
  content: "\F07D";
}

.bt-repeat:before {
  content: "\F07E";
}

.bt-fast-forward:before {
  content: "\F080";
}

.bt-fast-reverse:before {
  content: "\F081";
}

.bt-volume:before {
  content: "\F082";
}

.bt-volume-off:before {
  content: "\F083";
}

.bt-volume-up:before {
  content: "\F084";
}

.bt-volume-down:before {
  content: "\F085";
}

.bt-maximize:before {
  content: "\F086";
}

.bt-minimize:before {
  content: "\F087";
}

.bt-closed-captions:before {
  content: "\F088";
}

.bt-shuffle:before {
  content: "\F089";
}

.bt-triangle:before {
  content: "\F08A";
}

.bt-square:before {
  content: "\F08B";
}

.bt-circle:before {
  content: "\F08C";
}

.bt-hexagon:before {
  content: "\F08D";
}

.bt-octagon:before {
  content: "\F08E";
}

.bt-angle-up:before {
  content: "\F090";
}

.bt-angle-down:before {
  content: "\F091";
}

.bt-angle-left:before {
  content: "\F092";
}

.bt-angle-right:before {
  content: "\F093";
}

.bt-angles-up:before {
  content: "\F094";
}

.bt-angles-down:before {
  content: "\F095";
}

.bt-angles-left:before {
  content: "\F096";
}

.bt-angles-right:before {
  content: "\F097";
}

.bt-arrow-up:before {
  content: "\F098";
}

.bt-arrow-down:before {
  content: "\F099";
}

.bt-arrow-left:before {
  content: "\F09A";
}

.bt-arrow-right:before {
  content: "\F09B";
}

.bt-bar-chart:before {
  content: "\F09C";
}

.bt-pie-chart:before {
  content: "\F09D";
}

.bt-circle-arrow-up:before {
  content: "\F0A0";
}

.bt-circle-arrow-down:before {
  content: "\F0A1";
}

.bt-circle-arrow-left:before {
  content: "\F0A2";
}

.bt-circle-arrow-right:before {
  content: "\F0A3";
}

.bt-caret-up:before {
  content: "\F0A4";
}

.bt-caret-down:before {
  content: "\F0A5";
}

.bt-caret-left:before {
  content: "\F0A6";
}

.bt-caret-right:before {
  content: "\F0A7";
}

.bt-long-arrow-up:before {
  content: "\F0A8";
}

.bt-long-arrow-down:before {
  content: "\F0A9";
}

.bt-long-arrow-left:before {
  content: "\F0AA";
}

.bt-long-arrow-right:before {
  content: "\F0AB";
}

.bt-Bold:before {
  content: "\F0AC";
}

.bt-italic:before {
  content: "\F0AD";
}

.bt-underline:before {
  content: "\F0AE";
}

.bt-link:before {
  content: "\F0B0";
}

.bt-paper-clip:before {
  content: "\F0B1";
}

.bt-align-left:before {
  content: "\F0B2";
}

.bt-align-center:before {
  content: "\F0B3";
}

.bt-align-right:before {
  content: "\F0B4";
}

.bt-align-justify:before {
  content: "\F0B5";
}

.bt-cut:before {
  content: "\F0B6";
}

.bt-copy:before {
  content: "\F0B7";
}

.bt-paste:before {
  content: "\F0B8";
}

.bt-photo:before {
  content: "\F0B9";
}

.bt-table:before {
  content: "\F0BA";
}

.bt-ulist:before {
  content: "\F0BB";
}

.bt-olist:before {
  content: "\F0BC";
}

.bt-indent:before {
  content: "\F0BD";
}

.bt-outdent:before {
  content: "\F0BE";
}

.bt-undo:before {
  content: "\F0C0";
}

.bt-redo:before {
  content: "\F0C1";
}

.bt-sup:before {
  content: "\F0C2";
}

.bt-sub:before {
  content: "\F0C3";
}

.bt-text-size:before {
  content: "\F0C4";
}

.bt-text-color:before {
  content: "\F0C5";
}

.bt-remove-formatting:before {
  content: "\F0C6";
}

.bt-blockquote:before {
  content: "\F036";
}

.bt-globe:before {
  content: "\F0C7";
}

.bt-map:before {
  content: "\F0C8";
}

.bt-map-arrow:before {
  content: "\F0C9";
}

.bt-map-marker:before {
  content: "\F0CA";
}

.bt-map-pin:before {
  content: "\F0CB";
}

.bt-home:before {
  content: "\F0CC";
}

.bt-building:before {
  content: "\F0CD";
}

.bt-industry:before {
  content: "\F0CE";
}

.bt-desktop:before {
  content: "\F0D0";
}

.bt-laptop:before {
  content: "\F0D1";
}

.bt-tablet:before {
  content: "\F0D2";
}

.bt-mobile:before {
  content: "\F0D3";
}

.bt-tv:before {
  content: "\F0D4";
}

.bt-radio-checked:before {
  content: "\F0D5";
}

.bt-radio-unchecked:before {
  content: "\F08C";
}

.bt-checkbox-checked:before {
  content: "\F014";
}

.bt-checkbox-unchecked:before {
  content: "\F08B";
}

.bt-checkbox-intermediate:before {
  content: "\F023";
}

.bt-user:before {
  content: "\F0D6";
}

.bt-user-male:before {
  content: "\F0D6";
}

.bt-user-female:before {
  content: "\F0D7";
}

.bt-crown:before {
  content: "\F0D8";
}

.bt-credit-card:before {
  content: "\F0D9";
}

.bt-strikethrough:before {
  content: "\F0DA";
}

.bt-eject:before {
  content: "\F0DB";
}

.bt-ellipsis-h:before {
  content: "\F0DC";
}

.bt-ellipsis-v:before {
  content: "\F0DD";
}

.fab-facebook:before {
  content: "\F000";
}

.fab-facebook-alt:before {
  content: "\F001";
}

.fab-twitter:before {
  content: "\F002";
}

.fab-linkedin:before {
  content: "\F003";
}

.fab-linkedin-alt:before {
  content: "\F004";
}

.fab-instagram:before {
  content: "\F005";
}

.fab-github:before {
  content: "\F006";
}

.fab-github-alt:before {
  content: "\F007";
}

.fab-googleplus:before {
  content: "\F008";
}

.fab-googleplus-alt:before {
  content: "\F009";
}

.fab-pinterest:before {
  content: "\F00A";
}

.fab-pinterest-alt:before {
  content: "\F00B";
}

.fab-tumblr:before {
  content: "\F00C";
}

.fab-tumblr-alt:before {
  content: "\F00D";
}

.fab-bitcoin:before {
  content: "\F010";
}

.fab-bitcoin-alt:before {
  content: "\F011";
}

.fab-dropbox:before {
  content: "\F012";
}

.fab-stackexchange:before {
  content: "\F013";
}

.fab-stackoverflow:before {
  content: "\F014";
}

.fab-flickr:before {
  content: "\F015";
}

.fab-flickr-alt:before {
  content: "\F016";
}

.fab-bitbucket:before {
  content: "\F017";
}

.fab-html5:before {
  content: "\F018";
}

.fab-css3:before {
  content: "\F019";
}

.fab-apple:before {
  content: "\F01A";
}

.fab-windows:before {
  content: "\F01B";
}

.fab-android:before {
  content: "\F01C";
}

.fab-linux:before {
  content: "\F01D";
}

.fab-dribbble:before {
  content: "\F01E";
}

.fab-youtube:before {
  content: "\F021";
}

.fab-skype:before {
  content: "\F022";
}

.fab-foursquare:before {
  content: "\F023";
}

.fab-trello:before {
  content: "\F024";
}

.fab-maxcdn:before {
  content: "\F025";
}

.fab-gittip:before,
.fab-gratipay:before {
  content: "\F026";
}

.fab-vimeo:before {
  content: "\F027";
}

.fab-vimeo-alt:before {
  content: "\F028";
}

.fab-slack:before {
  content: "\F029";
}

.fab-wordpress:before {
  content: "\F02A";
}

.fab-wordpress-alt:before {
  content: "\F02B";
}

.fab-openid:before {
  content: "\F02C";
}

.fab-yahoo:before {
  content: "\F02D";
}

.fab-yahoo-alt:before {
  content: "\F02E";
}

.fab-reddit:before {
  content: "\F02F";
}

.fab-google:before {
  content: "\F030";
}

.fab-google-alt:before {
  content: "\F031";
}

.fab-stumbleupon:before {
  content: "\F032";
}

.fab-stumbleupon-alt:before {
  content: "\F033";
}

.fab-delicious:before {
  content: "\F034";
}

.fab-digg:before {
  content: "\F035";
}

.fab-piedpiper:before {
  content: "\F036";
}

.fab-piedpiper-alt:before {
  content: "\F037";
}

.fab-drupal:before {
  content: "\F038";
}

.fab-joomla:before {
  content: "\F039";
}

.fab-behance:before {
  content: "\F03A";
}

.fab-steam:before {
  content: "\F03B";
}

.fab-steam-alt:before {
  content: "\F03C";
}

.fab-spotify:before {
  content: "\F03D";
}

.fab-deviantart:before {
  content: "\F03E";
}

.fab-soundcloud:before {
  content: "\F040";
}

.fab-vine:before {
  content: "\F041";
}

.fab-codepen:before {
  content: "\F042";
}

.fab-jsfiddle:before {
  content: "\F043";
}

.fab-rebel:before {
  content: "\F044";
}

.fab-empire:before {
  content: "\F045";
}

.fab-git:before {
  content: "\F046";
}

.fab-hackernews:before {
  content: "\F047";
}

.fab-hackernews-alt:before {
  content: "\F048";
}

.fab-slideshare:before {
  content: "\F049";
}

.fab-twitch:before {
  content: "\F04A";
}

.fab-yelp:before {
  content: "\F04B";
}

.fab-paypal:before {
  content: "\F04C";
}

.fab-google-wallet:before {
  content: "\F04D";
}

.fab-angellist:before {
  content: "\F04E";
}

.fab-cc-visa:before {
  content: "\F050";
}

.fab-cc-mastercard:before {
  content: "\F051";
}

.fab-cc-discover:before {
  content: "\F052";
}

.fab-cc-amex:before {
  content: "\F053";
}

.fab-cc-paypal:before {
  content: "\F054";
}

.fab-cc-stripe:before {
  content: "\F055";
}

.fab-lastfm:before {
  content: "\F056";
}

.fab-whatsapp:before {
  content: "\F057";
}

.fab-medium:before {
  content: "\F058";
}

.fab-meanpath:before {
  content: "\F059";
}

.fab-meanpath-alt:before {
  content: "\F05A";
}

.fab-pagelines:before {
  content: "\F05B";
}

.fab-ioxhost:before {
  content: "\F060";
}

.fab-buysellads:before {
  content: "\F061";
}

.fab-buysellads-alt:before {
  content: "\F062";
}

.fab-connectdevelop:before {
  content: "\F063";
}

.fab-dashcube:before {
  content: "\F064";
}

.fab-forumbee:before {
  content: "\F065";
}

.fab-leanpub:before {
  content: "\F066";
}

.fab-sellsy:before {
  content: "\F067";
}

.fab-shirtsinbulk:before {
  content: "\F068";
}

.fab-simplybuilt:before {
  content: "\F069";
}

.fab-skyatlas:before {
  content: "\F06A";
}

.fab-viacoin:before {
  content: "\F06B";
}

.fab-codiepie:before {
  content: "\F06C";
}

.fab-queue:before {
  content: "\F06D";
}

.fab-queue-alt:before {
  content: "\F06E";
}

.fab-fonticons:before {
  content: "\F070";
}

.fab-fonticons-alt:before {
  content: "\F071";
}

.fab-blacktie:before {
  content: "\F072";
}

.fab-blacktie-alt:before {
  content: "\F073";
}

.fab-xing:before {
  content: "\F090";
}

.fab-vk:before {
  content: "\F091";
}

.fab-weibo:before {
  content: "\F092";
}

.fab-renren:before {
  content: "\F093";
}

.fab-tencent-weibo:before {
  content: "\F094";
}

.fab-qq:before {
  content: "\F095";
}

.fab-wechat:before,
.fab-weixin:before {
  content: "\F096";
}

@-webkit-keyframes plyr-progress {
  to {
    background-position: 25px 0;
  }
}

@keyframes plyr-progress {
  to {
    background-position: 25px 0;
  }
}

.plyr {
  position: relative;
  max-width: 100%;
  min-width: 200px;
  font-family: Avenir, "Avenir Next", "Helvetica Neue", "Segoe UI", Helvetica, Arial, sans-serif;
  direction: ltr;
}

.plyr,
.plyr *,
.plyr *::after,
.plyr *::before {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.plyr a,
.plyr button,
.plyr input,
.plyr label {
  -ms-touch-action: manipulation;
      touch-action: manipulation;
}

.plyr:focus {
  outline: 0;
}

.plyr video,
.plyr audio {
  width: 100%;
  height: auto;
  vertical-align: middle;
  border-radius: inherit;
}

.plyr input[type='range'] {
  display: block;
  height: 20px;
  width: 100%;
  margin: 0;
  padding: 0;
  vertical-align: middle;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  border: none;
  background: transparent;
}

.plyr input[type='range']::-webkit-slider-runnable-track {
  height: 8px;
  background: transparent;
  border: 0;
  border-radius: 4px;
  -webkit-user-select: none;
          user-select: none;
}

.plyr input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -4px;
  position: relative;
  height: 16px;
  width: 16px;
  background: #fff;
  border: 2px solid transparent;
  border-radius: 100%;
  -webkit-transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease, -webkit-transform .2s ease;
  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.15);
          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.15);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.plyr input[type='range']::-moz-range-track {
  height: 8px;
  background: transparent;
  border: 0;
  border-radius: 4px;
  -moz-user-select: none;
       user-select: none;
}

.plyr input[type='range']::-moz-range-thumb {
  position: relative;
  height: 16px;
  width: 16px;
  background: #fff;
  border: 2px solid transparent;
  border-radius: 100%;
  -webkit-transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease, -webkit-transform .2s ease;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.15);
  box-sizing: border-box;
}

.plyr input[type='range']::-ms-track {
  height: 8px;
  background: transparent;
  border: 0;
  color: transparent;
}

.plyr input[type='range']::-ms-fill-upper {
  height: 8px;
  background: transparent;
  border: 0;
  border-radius: 4px;
  -ms-user-select: none;
      user-select: none;
}

.plyr input[type='range']::-ms-fill-lower {
  height: 8px;
  background: transparent;
  border: 0;
  border-radius: 4px;
  -ms-user-select: none;
      user-select: none;
  background: #3498db;
}

.plyr input[type='range']::-ms-thumb {
  position: relative;
  height: 16px;
  width: 16px;
  background: #fff;
  border: 2px solid transparent;
  border-radius: 100%;
  -webkit-transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, -webkit-transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease;
  transition: background .2s ease, border .2s ease, transform .2s ease, -webkit-transform .2s ease;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.15);
  box-sizing: border-box;
  margin-top: 0;
}

.plyr input[type='range']::-ms-tooltip {
  display: none;
}

.plyr input[type='range']:focus {
  outline: 0;
}

.plyr input[type='range']::-moz-focus-outer {
  border: 0;
}

.plyr input[type='range'].tab-focus:focus {
  outline-offset: 3px;
}

.plyr input[type='range']:active::-webkit-slider-thumb {
  background: #3498db;
  border-color: #fff;
  -webkit-transform: scale(1.25);
          transform: scale(1.25);
}

.plyr input[type='range']:active::-moz-range-thumb {
  background: #3498db;
  border-color: #fff;
  transform: scale(1.25);
}

.plyr input[type='range']:active::-ms-thumb {
  background: #3498db;
  border-color: #fff;
  transform: scale(1.25);
}

.plyr--video input[type='range'].tab-focus:focus {
  outline: 1px dotted rgba(255, 255, 255, 0.5);
}

.plyr--audio input[type='range'].tab-focus:focus {
  outline: 1px dotted rgba(86, 93, 100, 0.5);
}

.plyr__sr-only {
  clip: rect(1px, 1px, 1px, 1px);
  overflow: hidden;
  position: absolute !important;
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
}

.plyr__video-wrapper {
  position: relative;
  background: #000;
  border-radius: inherit;
}

.plyr__video-embed {
  padding-bottom: 56.25%;
  /* 16:9 */
  height: 0;
  border-radius: inherit;
  overflow: hidden;
  z-index: 0;
}

.plyr__video-embed iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.plyr__video-embed > div {
  position: relative;
  padding-bottom: 200%;
  -webkit-transform: translateY(-35.95%);
          transform: translateY(-35.95%);
}

.plyr .plyr__video-embed iframe {
  pointer-events: none;
}

.plyr video::-webkit-media-text-track-container {
  display: none;
}

.plyr__captions {
  display: none;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 20px;
  -webkit-transform: translateY(-60px);
          transform: translateY(-60px);
  -webkit-transition: -webkit-transform .3s ease;
  transition: -webkit-transform .3s ease;
  transition: transform .3s ease;
  transition: transform .3s ease, -webkit-transform .3s ease;
  color: #fff;
  font-size: 16px;
  text-align: center;
  font-weight: 400;
}

.plyr__captions span {
  border-radius: 2px;
  padding: 3px 10px;
  background: rgba(0, 0, 0, 0.7);
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
  line-height: 150%;
}

.plyr__captions span:empty {
  display: none;
}

@media (min-width: 768px) {
  .plyr__captions {
    font-size: 24px;
  }
}

.plyr--captions-active .plyr__captions {
  display: block;
}

.plyr--hide-controls .plyr__captions {
  -webkit-transform: translateY(-20px);
          transform: translateY(-20px);
}

@media (min-width: 1024px) {
  .plyr--fullscreen-active .plyr__captions {
    font-size: 32px;
  }
}

.plyr ::-webkit-media-controls {
  display: none;
}

.plyr__controls {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  line-height: 1;
  text-align: center;
}

.plyr__controls > button,
.plyr__controls .plyr__progress,
.plyr__controls .plyr__time {
  margin-left: 5px;
}

.plyr__controls > button:first-child,
.plyr__controls .plyr__progress:first-child,
.plyr__controls .plyr__time:first-child {
  margin-left: 0;
}

.plyr__controls .plyr__volume {
  margin-left: 5px;
}

.plyr__controls [data-plyr="pause"] {
  margin-left: 0;
}

.plyr__controls button {
  position: relative;
  display: inline-block;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  overflow: visible;
  vertical-align: middle;
  padding: 7px;
  border: 0;
  background: transparent;
  border-radius: 3px;
  cursor: pointer;
  -webkit-transition: background .3s ease, color .3s ease, opacity .3s ease;
  transition: background .3s ease, color .3s ease, opacity .3s ease;
  color: inherit;
}

.plyr__controls button svg {
  width: 18px;
  height: 18px;
  display: block;
  fill: currentColor;
}

.plyr__controls button:focus {
  outline: 0;
}

.plyr__controls .icon--exit-fullscreen,
.plyr__controls .icon--muted,
.plyr__controls .icon--captions-on {
  display: none;
}

@media (min-width: 480px) {
  .plyr__controls > button,
  .plyr__controls .plyr__progress,
  .plyr__controls .plyr__time {
    margin-left: 10px;
  }
}

.plyr--hide-controls .plyr__controls {
  opacity: 0;
  pointer-events: none;
}

.plyr--video .plyr__controls {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 50px 10px 10px;
  background: -webkit-gradient(linear, left top, left bottom, from(transparent), to(rgba(0, 0, 0, 0.5)));
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.5));
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
  color: #fff;
  -webkit-transition: opacity .3s ease;
  transition: opacity .3s ease;
}

.plyr--video .plyr__controls button.tab-focus:focus,
.plyr--video .plyr__controls button:hover {
  background: #3498db;
  color: #fff;
}

.plyr--audio .plyr__controls {
  padding: 10px;
  border-radius: inherit;
  background: #fff;
  border: 1px solid #dbe3e8;
  color: #565D64;
}

.plyr--audio .plyr__controls button.tab-focus:focus,
.plyr--audio .plyr__controls button:hover {
  background: #3498db;
  color: #fff;
}

.plyr__play-large {
  display: none;
  position: absolute;
  z-index: 1;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  padding: 10px;
  background: #3498db;
  border: 4px solid currentColor;
  border-radius: 100%;
  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15);
          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15);
  color: #fff;
  -webkit-transition: all .3s ease;
  transition: all .3s ease;
}

.plyr__play-large svg {
  position: relative;
  left: 2px;
  width: 20px;
  height: 20px;
  display: block;
  fill: currentColor;
}

.plyr__play-large:focus {
  outline: 1px dotted rgba(255, 255, 255, 0.5);
}

.plyr .plyr__play-large {
  display: inline-block;
}

.plyr--audio .plyr__play-large {
  display: none;
}

.plyr--playing .plyr__play-large {
  opacity: 0;
  visibility: hidden;
}

.plyr__controls [data-plyr='pause'],
.plyr--playing .plyr__controls [data-plyr='play'] {
  display: none;
}

.plyr--playing .plyr__controls [data-plyr='pause'] {
  display: inline-block;
}

.plyr--fullscreen-active .icon--exit-fullscreen,
.plyr--muted .plyr__controls .icon--muted,
.plyr--captions-active .plyr__controls .icon--captions-on {
  display: block;
}

.plyr--fullscreen-active .icon--exit-fullscreen + svg,
.plyr--muted .plyr__controls .icon--muted + svg,
.plyr--captions-active .plyr__controls .icon--captions-on + svg {
  display: none;
}

.plyr [data-plyr='captions'],
.plyr [data-plyr='fullscreen'] {
  display: none;
}

.plyr--captions-enabled [data-plyr='captions'],
.plyr--fullscreen-enabled [data-plyr='fullscreen'] {
  display: inline-block;
}

.plyr__tooltip {
  position: absolute;
  z-index: 2;
  bottom: 100%;
  margin-bottom: 10px;
  padding: 5px 7.5px;
  pointer-events: none;
  opacity: 0;
  background: rgba(0, 0, 0, 0.7);
  border-radius: 3px;
  color: #fff;
  font-size: 14px;
  line-height: 1.3;
  -webkit-transform: translate(-50%, 10px) scale(0.8);
          transform: translate(-50%, 10px) scale(0.8);
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
  -webkit-transition: opacity .2s .1s ease, -webkit-transform .2s .1s ease;
  transition: opacity .2s .1s ease, -webkit-transform .2s .1s ease;
  transition: transform .2s .1s ease, opacity .2s .1s ease;
  transition: transform .2s .1s ease, opacity .2s .1s ease, -webkit-transform .2s .1s ease;
}

.plyr__tooltip::before {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  bottom: -4px;
  border-right: 4px solid transparent;
  border-top: 4px solid rgba(0, 0, 0, 0.7);
  border-left: 4px solid transparent;
  z-index: 2;
}

.plyr button:hover .plyr__tooltip,
.plyr button.tab-focus:focus .plyr__tooltip,
.plyr__tooltip--visible {
  opacity: 1;
  -webkit-transform: translate(-50%, 0) scale(1);
          transform: translate(-50%, 0) scale(1);
}

.plyr button:hover .plyr__tooltip {
  z-index: 3;
}

.plyr__controls button:first-child .plyr__tooltip {
  left: 0;
  -webkit-transform: translate(0, 10px) scale(0.8);
          transform: translate(0, 10px) scale(0.8);
  -webkit-transform-origin: 0 100%;
          transform-origin: 0 100%;
}

.plyr__controls button:first-child .plyr__tooltip::before {
  left: 16px;
}

.plyr__controls button:last-child .plyr__tooltip {
  right: 0;
  -webkit-transform: translate(0, 10px) scale(0.8);
          transform: translate(0, 10px) scale(0.8);
  -webkit-transform-origin: 100% 100%;
          transform-origin: 100% 100%;
}

.plyr__controls button:last-child .plyr__tooltip::before {
  left: auto;
  right: 16px;
  -webkit-transform: translateX(50%);
          transform: translateX(50%);
}

.plyr__controls button:first-child:hover .plyr__tooltip,
.plyr__controls button:first-child.tab-focus:focus .plyr__tooltip,
.plyr__controls button:first-child .plyr__tooltip--visible,
.plyr__controls button:last-child:hover .plyr__tooltip,
.plyr__controls button:last-child.tab-focus:focus .plyr__tooltip,
.plyr__controls button:last-child .plyr__tooltip--visible {
  -webkit-transform: translate(0, 0) scale(1);
          transform: translate(0, 0) scale(1);
}

.plyr__progress {
  display: none;
  position: relative;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.plyr__progress input[type="range"] {
  position: relative;
  z-index: 2;
}

.plyr__progress input[type="range"]::-webkit-slider-runnable-track {
  background: transparent;
}

.plyr__progress input[type="range"]::-moz-range-track {
  background: transparent;
}

.plyr__progress input[type="range"]::-ms-fill-upper {
  background: transparent;
}

.plyr__progress .plyr__tooltip {
  left: 0;
}

.plyr .plyr__progress {
  display: inline-block;
}

.plyr__progress--buffer,
.plyr__progress--played,
.plyr__volume--display {
  position: absolute;
  left: 0;
  top: 50%;
  width: 100%;
  height: 8px;
  margin: -4px 0 0;
  padding: 0;
  vertical-align: top;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  border-radius: 100px;
}

.plyr__progress--buffer::-webkit-progress-bar,
.plyr__progress--played::-webkit-progress-bar,
.plyr__volume--display::-webkit-progress-bar {
  background: transparent;
}

.plyr__progress--buffer::-webkit-progress-value,
.plyr__progress--played::-webkit-progress-value,
.plyr__volume--display::-webkit-progress-value {
  background: currentColor;
  border-radius: 100px;
  min-width: 8px;
}

.plyr__progress--buffer::-moz-progress-bar,
.plyr__progress--played::-moz-progress-bar,
.plyr__volume--display::-moz-progress-bar {
  background: currentColor;
  border-radius: 100px;
  min-width: 8px;
}

.plyr__progress--buffer::-ms-fill,
.plyr__progress--played::-ms-fill,
.plyr__volume--display::-ms-fill {
  border-radius: 100px;
}

.plyr__progress--played,
.plyr__volume--display {
  z-index: 1;
  color: #3498db;
  background: transparent;
  -webkit-transition: none;
  transition: none;
}

.plyr__progress--played::-webkit-progress-value,
.plyr__volume--display::-webkit-progress-value {
  min-width: 8px;
  max-width: 99%;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  -webkit-transition: none;
  transition: none;
}

.plyr__progress--played::-moz-progress-bar,
.plyr__volume--display::-moz-progress-bar {
  min-width: 8px;
  max-width: 99%;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  -webkit-transition: none;
  transition: none;
}

.plyr__progress--played::-ms-fill,
.plyr__volume--display::-ms-fill {
  display: none;
}

.plyr__progress--buffer::-webkit-progress-value {
  -webkit-transition: width .2s ease;
  transition: width .2s ease;
}

.plyr__progress--buffer::-moz-progress-bar {
  -webkit-transition: width .2s ease;
  transition: width .2s ease;
}

.plyr__progress--buffer::-ms-fill {
  -webkit-transition: width .2s ease;
  transition: width .2s ease;
}

.plyr--video .plyr__progress--buffer,
.plyr--video .plyr__volume--display {
  background: rgba(255, 255, 255, 0.25);
}

.plyr--video .plyr__progress--buffer {
  color: rgba(255, 255, 255, 0.25);
}

.plyr--audio .plyr__progress--buffer,
.plyr--audio .plyr__volume--display {
  background: rgba(198, 214, 219, 0.67);
}

.plyr--audio .plyr__progress--buffer {
  color: rgba(198, 214, 219, 0.67);
}

.plyr--loading .plyr__progress--buffer {
  -webkit-animation: plyr-progress 1s linear infinite;
          animation: plyr-progress 1s linear infinite;
  background-size: 25px 25px;
  background-repeat: repeat-x;
  background-image: linear-gradient(-45deg, rgba(0, 0, 0, 0.15) 25%, transparent 25%, transparent 50%, rgba(0, 0, 0, 0.15) 50%, rgba(0, 0, 0, 0.15) 75%, transparent 75%, transparent);
  color: transparent;
}

.plyr--video.plyr--loading .plyr__progress--buffer {
  background-color: rgba(255, 255, 255, 0.25);
}

.plyr--audio.plyr--loading .plyr__progress--buffer {
  background-color: rgba(198, 214, 219, 0.67);
}

.plyr__time {
  display: inline-block;
  vertical-align: middle;
  font-size: 14px;
}

.plyr__time + .plyr__time {
  display: none;
}

@media (min-width: 768px) {
  .plyr__time + .plyr__time {
    display: inline-block;
  }
}

.plyr__time + .plyr__time::before {
  content: '\2044';
  margin-right: 10px;
}

.plyr__volume {
  display: none;
}

.plyr .plyr__volume {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  position: relative;
}

.plyr .plyr__volume input[type="range"] {
  position: relative;
  z-index: 2;
}

@media (min-width: 480px) {
  .plyr .plyr__volume {
    display: block;
    max-width: 60px;
  }
}

@media (min-width: 768px) {
  .plyr .plyr__volume {
    max-width: 100px;
  }
}

.plyr--is-ios .plyr__volume,
.plyr--is-ios [data-plyr='mute'] {
  display: none !important;
}

.plyr--fullscreen-active {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
  z-index: 10000000;
  background: #000;
  border-radius: 0 !important;
}

.plyr--fullscreen-active video {
  height: 100%;
}

.plyr--fullscreen-active .plyr__video-wrapper {
  height: 100%;
  width: 100%;
}

.plyr--fullscreen-active .plyr__video-embed {
  overflow: visible;
}

.plyr--fullscreen-active .plyr__controls {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}

.plyr--fullscreen-active.plyr--vimeo .plyr__video-wrapper {
  height: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

/* =======================
   Tools/Fonts
   ======================= */

/* =======================
   Tools/Aliases
   ======================= */

/* =======================
   Tools/Mixins
   ======================= */

/* =======================
   Tools/Color
   ======================= */

/* =======================
   Tools/Button
   ======================= */

/* ==========================================================================
   #BOX-SIZING
   ========================================================================== */

/**
 * More sensible default box-sizing:
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 */

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */

figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */

details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */

template {
  display: none;
}

/* Hidden
   ========================================================================== */

/**
 * Add the correct display in IE 10-.
 */

[hidden] {
  display: none;
}

/* ==========================================================================
   #RESET
   ========================================================================== */

/**
 * A very simple reset that sits on top of Normalize.css.
 */

body,
h1,
h2,
h3,
h4,
h5,
h6,
blockquote,
p,
pre,
dl,
dd,
ol,
ul,
figure,
hr,
fieldset,
legend {
  margin: 0;
  padding: 0;
}

/**
 * Remove trailing margins from nested lists.
 */

li > ol,
li > ul {
  margin-bottom: 0;
}

/**
 * Remove default table spacing.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/**
 * 1. Reset Chrome and Firefox behaviour which sets a `min-width: min-content;`
 *    on fieldsets.
 */

fieldset {
  min-width: 0;
  /* [1] */
  border: 0;
}

/* ==========================================================================
   #SHARED
   ========================================================================== */

/**
 * Shared declarations for certain elements.
 */

/**
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */

/* stylelint-disable selector-list-comma-newline-after */

address,
h1,
h2,
h3,
h4,
h5,
h6,
blockquote,
p,
pre,
dl,
ol,
ul,
figure,
hr,
table,
fieldset {
  margin-bottom: 24px;
}

/**
 * Consistent indentation for lists.
 */

dd,
ol,
ul {
  margin-left: 24px;
}

/* stylelint-enable selector-list-comma-newline-after */

/* ==========================================================================
   #PAGE
   ========================================================================== */

/**
 * Simple page-level setup.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 */

html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
}

/* =======================
   Elements/Page
   ======================= */

html,
body {
  font-family: 'Helvetica', sans-serif;
}

html {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
}

body:after {
  display: none;
  content: 'mobile';
}

@media (min-width: 46.25em) {
  body:after {
    content: 'tablet';
  }
}

@media (min-width: 61.25em) {
  body:after {
    content: 'desktop';
  }
}

@media (min-width: 81.25em) {
  body:after {
    content: 'desktop';
  }
}

/* ==========================================================================
   #IMAGES
   ========================================================================== */

/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */

img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */
}

/**
 * 1. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */

img[width],
img[height] {
  /* [1] */
  max-width: none;
}

/* ==========================================================================
   #TABLES
   ========================================================================== */

/**
 * 1. Ensure tables fill up as much space as possible.
 */

table {
  width: 100%;
  /* [1] */
}

/* =======================
   Elements/Links
   ======================= */

a {
  color: inherit;
  text-decoration: underline;
}

a:hover {
  text-decoration: none;
}

/* ==========================================================================
   #WRAPPER
   ========================================================================== */

/**
 * Page-level constraining and wrapping elements.
 */

/* stylelint-disable */

/* stylelint-enable */

.o-wrapper {
  padding-right: 24px;
  padding-left: 24px;
  margin-right: auto;
  margin-left: auto;
  max-width: 1200px;
}

.o-wrapper:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

/* Size variants.
   ========================================================================== */

.o-wrapper--tiny {
  padding-right: 6px;
  padding-left: 6px;
}

.o-wrapper--small {
  padding-right: 12px;
  padding-left: 12px;
}

.o-wrapper--large {
  padding-right: 48px;
  padding-left: 48px;
}

.o-wrapper--huge {
  padding-right: 96px;
  padding-left: 96px;
}

/* =======================
   Objects/Wrapper
   ======================= */

.o-wrapper {
  max-width: none;
  padding-left: 24px;
  padding-right: 24px;
}

@media (min-width: 46.25em) {
  .o-wrapper--large {
    padding-right: 48px;
    padding-left: 48px;
  }
}

@media (min-width: 46.25em) {
  .o-wrapper--huge {
    padding-right: 48px;
    padding-left: 48px;
  }
}

@media (min-width: 61.25em) {
  .o-wrapper--huge {
    padding-right: 96px;
    padding-left: 96px;
  }
}

@media (max-width: 46.24em) {
  .o-wrapper--flush-mobile {
    padding-right: 0;
    padding-left: 0;
  }
}

/* ==========================================================================
   #LAYOUT
   ========================================================================== */

/**
 * Grid-like layout system.
 *
 * The layout object provides us with a column-style layout system. This file
 * contains the basic structural elements, but classes should be complemented
 * with width utilities, for example:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-1/2">
 *     </div>
 *     <div class="o-layout__item  u-1/2">
 *     </div>
 *   </div>
 *
 * The above will create a two-column structure in which each column will
 * fluidly fill half of the width of the parent. We can have more complex
 * systems:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-1/1  u-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-1/2  u-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-1/2  u-1/3@medium">
 *     </div>
 *   </div>
 *
 * The above will create a system in which the first item will be 100% width
 * until we enter our medium breakpoint, when it will become 33.333% width. The
 * second and third items will be 50% of their parent, until they also become
 * 33.333% width at the medium breakpoint.
 *
 * We can also manipulate entire layout systems by adding a series of modifiers
 * to the `.o-layout` block. For example:
 *
 *   <div class="o-layout  o-layout--reverse">
 *
 * This will reverse the displayed order of the system so that it runs in the
 * opposite order to our source, effectively flipping the system over.
 *
 *   <div class="o-layout  o-layout--[right|center]">
 *
 * This will cause the system to fill up from either the centre or the right
 * hand side. Default behaviour is to fill up the layout system from the left.
 *
 * There are plenty more options available to us: explore them below.
 */

/* Default/mandatory classes.
   ========================================================================== */

/**
 * 1. Allows us to use the layout object on any type of element.
 * 2. We need to defensively reset any box-model properties.
 * 3. Use the negative margin trick for multi-row grids:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */

.o-layout {
  display: block;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  list-style: none;
  /* [1] */
  margin-left: -24px;
  /* [3] */
  font-size: 0;
}

/**
   * 1. Required in order to combine fluid widths with fixed gutters.
   * 2. Allows us to manipulate grids vertically, with text-level properties,
   *    etc.
   * 3. Default item alignment is with the tops of each other, like most
   *    traditional grid/layout systems.
   * 4. By default, all layout items are full-width (mobile first).
   * 5. Gutters provided by left padding:
   *    http://csswizardry.com/2011/08/building-better-grid-systems/
   * 6. Fallback for old IEs not supporting `rem` values.
   */

.o-layout__item {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* [1] */
  display: inline-block;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  padding-left: 24px;
  /* [5] */
  font-size: 16px;
  /* [6] */
  font-size: 1rem;
}

/* Gutter size modifiers.
   ========================================================================== */

.o-layout--flush {
  margin-left: 0;
}

.o-layout--flush > .o-layout__item {
  padding-left: 0;
}

.o-layout--tiny {
  margin-left: -6px;
}

.o-layout--tiny > .o-layout__item {
  padding-left: 6px;
}

.o-layout--small {
  margin-left: -12px;
}

.o-layout--small > .o-layout__item {
  padding-left: 12px;
}

.o-layout--large {
  margin-left: -48px;
}

.o-layout--large > .o-layout__item {
  padding-left: 48px;
}

.o-layout--huge {
  margin-left: -96px;
}

.o-layout--huge > .o-layout__item {
  padding-left: 96px;
}

/* Vertical alignment modifiers.
   ========================================================================== */

/**
 * Align all grid items to the middles of each other.
 */

.o-layout--middle > .o-layout__item {
  vertical-align: middle;
}

/**
 * Align all grid items to the bottoms of each other.
 */

.o-layout--bottom > .o-layout__item {
  vertical-align: bottom;
}

/**
 * Stretch all grid items of each row to have an equal-height.
 * Please be aware that this modifier class doesn't take any effect in IE9 and
 * below and other older browsers due to the lack of `display: flex` support.
 */

.o-layout--stretch {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.o-layout--stretch > .o-layout__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/* Fill order modifiers.
   ========================================================================== */

/**
 * Fill up the layout system from the centre.
 */

.o-layout--center {
  text-align: center;
}

.o-layout--center > .o-layout__item {
  text-align: left;
}

/**
 * Fill up the layout system from the right-hand side.
 */

.o-layout--right {
  text-align: right;
}

.o-layout--right > .o-layout__item {
  text-align: left;
}

/**
 * Fill up the layout system from the left-hand side. This will likely only be
 * needed when using in conjunction with `.o-layout--reverse`.
 */

.o-layout--left {
  text-align: left;
}

.o-layout--left > .o-layout__item {
  text-align: left;
}

/**
 * Reverse the rendered order of the grid system.
 */

.o-layout--reverse {
  direction: rtl;
}

.o-layout--reverse > .o-layout__item {
  direction: ltr;
}

/* Auto-widths modifier.
   ========================================================================== */

/**
 * Cause layout items to take up a non-explicit amount of width.
 */

.o-layout--auto > .o-layout__item {
  width: auto;
}

/* =======================
   Objects/Wrapper
   ======================= */

.o-layout--equal-height {
  display: block;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.o-layout--equal-height .o-layout__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.o-layout--middle .o-layout--equal-height {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.o-layout--bottom .o-layout--equal-height {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

.o-layout--right .o-layout--equal-height {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.o-layout--center .o-layout--equal-height {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/* ==========================================================================
   #MEDIA
   ========================================================================== */

/**
 * Place any image- and text-like content side-by-side, as per:
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */

.o-media {
  display: block;
}

.o-media:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

.o-media__img {
  float: left;
  margin-right: 24px;
}

.o-media__img > img {
  display: block;
}

.o-media__body {
  overflow: hidden;
  display: block;
}

.o-media__body,
.o-media__body > :last-child {
  margin-bottom: 0;
}

/* Size variants.
   ========================================================================== */

/**
 * Modify the amount of space between our image and our text. We also have
 * reversible options for all available sizes.
 */

/* Gutterless media objects.
  ========================================================================== */

.o-media--flush > .o-media__img {
  margin-right: 0;
  margin-left: 0;
}

.o-media--tiny > .o-media__img {
  margin-right: 6px;
}

.o-media--tiny.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 6px;
}

.o-media--small > .o-media__img {
  margin-right: 12px;
}

.o-media--small.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 12px;
}

.o-media--large > .o-media__img {
  margin-right: 48px;
}

.o-media--large.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 48px;
}

.o-media--huge > .o-media__img {
  margin-right: 96px;
}

.o-media--huge.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 96px;
}

/* Reversed media objects.
   ========================================================================== */

.o-media--reverse > .o-media__img {
  float: right;
  margin-right: 0;
  margin-left: 24px;
}

/* ==========================================================================
   #FLAG
   ========================================================================== */

/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image.
 *
 * http://csswizardry.com/2013/05/the-flag-object/
 *
 * 1. Allows us to control vertical alignments.
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 * 3. Reset inherited `border-spacing` declarations.
 */

.o-flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */
  border-spacing: 0;
  /* [3] */
}

/**
   * Items within a flag object. There should only ever be one of each.
   *
   * 1. Default to aligning content to their middles.
   */

.o-flag__img,
.o-flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */
}

/**
   * Flag images have a space between them and the body of the object.
   *
   * 1. Force `.flag__img` to take up as little space as possible:
   *    https://pixelsvsbytes.com/2012/02/this-css-layout-grid-is-no-holy-grail/
   */

.o-flag__img {
  width: 1px;
  /* [1] */
  padding-right: 24px;
  /**
     * 1. Fixes problem with images disappearing.
     */
}

.o-flag__img > img {
  max-width: none;
  /* [1] */
}

/**
   * The container for the main content of the flag object.
   *
   * 1. Forces the `.flag__body` to take up all remaining space.
   */

.o-flag__body {
  width: auto;
  /* [1] */
}

.o-flag__body,
.o-flag__body > :last-child {
  margin-bottom: 0;
}

/* Size variants.
   ========================================================================== */

.o-flag--flush > .o-flag__img {
  padding-right: 0;
  padding-left: 0;
}

.o-flag--tiny > .o-flag__img {
  padding-right: 6px;
}

.o-flag--tiny.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 6px;
}

.o-flag--small > .o-flag__img {
  padding-right: 12px;
}

.o-flag--small.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 12px;
}

.o-flag--large > .o-flag__img {
  padding-right: 48px;
}

.o-flag--large.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 48px;
}

.o-flag--huge > .o-flag__img {
  padding-right: 96px;
}

.o-flag--huge.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 96px;
}

/* Reversed flag.
   ========================================================================== */

/**
 * 1. Swap the rendered direction of the object…
 * 2. …and reset it.
 * 3. Reassign margins to the correct sides.
 */

.o-flag--reverse {
  direction: rtl;
  /* [1] */
}

.o-flag--reverse > .o-flag__img,
.o-flag--reverse > .o-flag__body {
  direction: ltr;
  /* [2] */
}

.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  /* [3] */
  padding-left: 24px;
  /* [3] */
}

/* Alignment variants.
   ========================================================================== */

/**
 * Vertically align the image- and body-content differently. Defaults to middle.
 */

.o-flag--top > .o-flag__img,
.o-flag--top > .o-flag__body {
  vertical-align: top;
}

.o-flag--bottom > .o-flag__img,
.o-flag--bottom > .o-flag__body {
  vertical-align: bottom;
}

/* ==========================================================================
   #LIST-BARE
   ========================================================================== */

/**
 * Strip list-like appearance from lists by removing their bullets, and any
 * indentation.
 *
 * Note: Declaring the item-class might not be necessary everywhere but
 * is for example in <dl> lists for the <dd> childs.
 */

.o-list-bare {
  list-style: none;
  margin-left: 0;
}

.o-list-bare__item {
  margin-left: 0;
}

/* ==========================================================================
   #LIST-INLINE
   ========================================================================== */

/**
 * The list-inline object simply displays a list of items in one line.
 */

.o-list-inline {
  margin-left: 0;
  list-style: none;
}

.o-list-inline__item {
  display: inline-block;
}

/* ==========================================================================
   #BLOCK
   ========================================================================== */

/**
 * Stacked image-with-text object. A simple abstraction to cover a very commonly
 * occurring design pattern.
 */

.o-block {
  display: block;
  text-align: center;
}

.o-block__img {
  margin-bottom: 24px;
  /* Size variants.
       ====================================================================== */
}

.o-block--flush > .o-block__img {
  margin-bottom: 0;
}

.o-block--tiny > .o-block__img {
  margin-bottom: 6px;
}

.o-block--small > .o-block__img {
  margin-bottom: 12px;
}

.o-block--large > .o-block__img {
  margin-bottom: 48px;
}

.o-block--huge > .o-block__img {
  margin-bottom: 96px;
}

.o-block__body {
  display: block;
}

/* Alignment variants.
   ========================================================================== */

.o-block--right {
  text-align: right;
}

.o-block--left {
  text-align: left;
}

/* =======================
   Objects/Heading
   ======================= */

/* =======================
   Components/Buttons
   ======================= */

.c-button__button {
  background-color: #000000;
  border: 3px solid #000000;
  cursor: pointer;
  max-width: 100%;
  outline: none;
  padding: 12px 48px;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-transition: all .2s;
  transition: all .2s;
  width: 100%;
}

@media (min-width: 46.25em) {
  .c-button__button {
    max-width: 480px;
  }
}

@media (min-width: 61.25em) {
  .c-button__button {
    max-width: 100%;
    width: inherit;
  }
}

.c-button__button:hover {
  background-color: #ffffff;
}

.c-button__button:hover .c-button__text,
.c-button__button:hover .c-button__angle-right {
  color: #000000;
}

.c-button__text,
.c-button__angle-right {
  color: #ffffff;
  -webkit-transition: all .2s;
  transition: all .2s;
}

.c-button__text {
  display: inline-block;
  text-align: center;
  text-transform: uppercase;
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71428571;
}

.c-button__angle-right {
  margin-left: 12px;
  position: absolute;
  right: 18px;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71428571;
}

/* ==========================================================================
   #CLEARFIX
   ========================================================================== */

/**
 * Attach our clearfix mixin to a utility class.
 */

.u-clearfix:after {
  content: "" !important;
  display: block !important;
  clear: both !important;
}

/* ==========================================================================
   #WIDTHS
   ========================================================================== */

/**
 * inuitcss generates a series of utility classes that give a fluid width to
 * whichever element they’re applied, e.g.:
 *
 *   <img src="" alt="" class="u-1/2" />
 *
 * These classes are most commonly used in conjunction with our layout system,
 * e.g.:
 *
 *   <div class="o-layout__item  u-1/2">
 *
 * By default, inuitcss will also generate responsive variants of each of these
 * classes by using your Sass MQ configuration, e.g.:
 *
 *   <div class="o-layout__item  u-1/1  u-1/2@tablet  u-1/3@desktop">
 *
 * Optionally, inuitcss can generate offset classes which can push and pull
 * elements left and right by a specified amount, e.g.:
 *
 *   <div class="o-layout__item  u-2/3  u-pull-1/3">
 *
 * This is useful for making very granular changes to the rendered order of
 * items in a layout.
 *
 * N.B. This option is turned off by default.
 */

/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes take a fraction-like format (e.g. `.u-2/3`). Use these in
 * your markup:
 *
 * <div class="u-7/12">
 *
 * The following will generate widths helper classes based on the fractions
 * defined in the `$inuit-fractions` list.
 */

.u-1\/1 {
  width: 100% !important;
}

.u-1\/2 {
  width: 50% !important;
}

.u-2\/2 {
  width: 100% !important;
}

.u-1\/3 {
  width: 33.33333333% !important;
}

.u-2\/3 {
  width: 66.66666667% !important;
}

.u-3\/3 {
  width: 100% !important;
}

.u-1\/4 {
  width: 25% !important;
}

.u-2\/4 {
  width: 50% !important;
}

.u-3\/4 {
  width: 75% !important;
}

.u-4\/4 {
  width: 100% !important;
}

.u-1\/5 {
  width: 20% !important;
}

.u-2\/5 {
  width: 40% !important;
}

.u-3\/5 {
  width: 60% !important;
}

.u-4\/5 {
  width: 80% !important;
}

.u-5\/5 {
  width: 100% !important;
}

/**
 * If we’re using Sass-MQ, automatically generate grid system(s) for each of our
 * defined breakpoints, and give them a Responsive Suffix, e.g.:
 *
 * <div class="u-3/12@mobile">
 */

@media (min-width: 20em) {
  .u-1\/1\@mobile {
    width: 100% !important;
  }

  .u-1\/2\@mobile {
    width: 50% !important;
  }

  .u-2\/2\@mobile {
    width: 100% !important;
  }

  .u-1\/3\@mobile {
    width: 33.33333333% !important;
  }

  .u-2\/3\@mobile {
    width: 66.66666667% !important;
  }

  .u-3\/3\@mobile {
    width: 100% !important;
  }

  .u-1\/4\@mobile {
    width: 25% !important;
  }

  .u-2\/4\@mobile {
    width: 50% !important;
  }

  .u-3\/4\@mobile {
    width: 75% !important;
  }

  .u-4\/4\@mobile {
    width: 100% !important;
  }

  .u-1\/5\@mobile {
    width: 20% !important;
  }

  .u-2\/5\@mobile {
    width: 40% !important;
  }

  .u-3\/5\@mobile {
    width: 60% !important;
  }

  .u-4\/5\@mobile {
    width: 80% !important;
  }

  .u-5\/5\@mobile {
    width: 100% !important;
  }
}

@media (min-width: 46.25em) {
  .u-1\/1\@tablet {
    width: 100% !important;
  }

  .u-1\/2\@tablet {
    width: 50% !important;
  }

  .u-2\/2\@tablet {
    width: 100% !important;
  }

  .u-1\/3\@tablet {
    width: 33.33333333% !important;
  }

  .u-2\/3\@tablet {
    width: 66.66666667% !important;
  }

  .u-3\/3\@tablet {
    width: 100% !important;
  }

  .u-1\/4\@tablet {
    width: 25% !important;
  }

  .u-2\/4\@tablet {
    width: 50% !important;
  }

  .u-3\/4\@tablet {
    width: 75% !important;
  }

  .u-4\/4\@tablet {
    width: 100% !important;
  }

  .u-1\/5\@tablet {
    width: 20% !important;
  }

  .u-2\/5\@tablet {
    width: 40% !important;
  }

  .u-3\/5\@tablet {
    width: 60% !important;
  }

  .u-4\/5\@tablet {
    width: 80% !important;
  }

  .u-5\/5\@tablet {
    width: 100% !important;
  }
}

@media (min-width: 61.25em) {
  .u-1\/1\@desktop {
    width: 100% !important;
  }

  .u-1\/2\@desktop {
    width: 50% !important;
  }

  .u-2\/2\@desktop {
    width: 100% !important;
  }

  .u-1\/3\@desktop {
    width: 33.33333333% !important;
  }

  .u-2\/3\@desktop {
    width: 66.66666667% !important;
  }

  .u-3\/3\@desktop {
    width: 100% !important;
  }

  .u-1\/4\@desktop {
    width: 25% !important;
  }

  .u-2\/4\@desktop {
    width: 50% !important;
  }

  .u-3\/4\@desktop {
    width: 75% !important;
  }

  .u-4\/4\@desktop {
    width: 100% !important;
  }

  .u-1\/5\@desktop {
    width: 20% !important;
  }

  .u-2\/5\@desktop {
    width: 40% !important;
  }

  .u-3\/5\@desktop {
    width: 60% !important;
  }

  .u-4\/5\@desktop {
    width: 80% !important;
  }

  .u-5\/5\@desktop {
    width: 100% !important;
  }
}

@media (min-width: 81.25em) {
  .u-1\/1\@wide {
    width: 100% !important;
  }

  .u-1\/2\@wide {
    width: 50% !important;
  }

  .u-2\/2\@wide {
    width: 100% !important;
  }

  .u-1\/3\@wide {
    width: 33.33333333% !important;
  }

  .u-2\/3\@wide {
    width: 66.66666667% !important;
  }

  .u-3\/3\@wide {
    width: 100% !important;
  }

  .u-1\/4\@wide {
    width: 25% !important;
  }

  .u-2\/4\@wide {
    width: 50% !important;
  }

  .u-3\/4\@wide {
    width: 75% !important;
  }

  .u-4\/4\@wide {
    width: 100% !important;
  }

  .u-1\/5\@wide {
    width: 20% !important;
  }

  .u-2\/5\@wide {
    width: 40% !important;
  }

  .u-3\/5\@wide {
    width: 60% !important;
  }

  .u-4\/5\@wide {
    width: 80% !important;
  }

  .u-5\/5\@wide {
    width: 100% !important;
  }
}

@media (min-width: 100em) {
  .u-1\/1\@u-wide {
    width: 100% !important;
  }

  .u-1\/2\@u-wide {
    width: 50% !important;
  }

  .u-2\/2\@u-wide {
    width: 100% !important;
  }

  .u-1\/3\@u-wide {
    width: 33.33333333% !important;
  }

  .u-2\/3\@u-wide {
    width: 66.66666667% !important;
  }

  .u-3\/3\@u-wide {
    width: 100% !important;
  }

  .u-1\/4\@u-wide {
    width: 25% !important;
  }

  .u-2\/4\@u-wide {
    width: 50% !important;
  }

  .u-3\/4\@u-wide {
    width: 75% !important;
  }

  .u-4\/4\@u-wide {
    width: 100% !important;
  }

  .u-1\/5\@u-wide {
    width: 20% !important;
  }

  .u-2\/5\@u-wide {
    width: 40% !important;
  }

  .u-3\/5\@u-wide {
    width: 60% !important;
  }

  .u-4\/5\@u-wide {
    width: 80% !important;
  }

  .u-5\/5\@u-wide {
    width: 100% !important;
  }
}

/* ==========================================================================
   #SPACINGS
   ========================================================================== */

/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .u-margin-top {}
 *   .u-padding-left-large {}
 *   .u-margin-right-small {}
 *   .u-padding {}
 *   .u-padding-right-none {}
 *   .u-padding-horizontal {}
 *   .u-padding-vertical-small {}
 */

/* stylelint-disable string-quotes */

.u-padding {
  padding: 24px !important;
}

.u-padding-tiny {
  padding: 6px !important;
}

.u-padding-small {
  padding: 12px !important;
}

.u-padding-large {
  padding: 48px !important;
}

.u-padding-huge {
  padding: 96px !important;
}

.u-padding-none {
  padding: 0 !important;
}

.u-padding-top {
  padding-top: 24px !important;
}

.u-padding-top-tiny {
  padding-top: 6px !important;
}

.u-padding-top-small {
  padding-top: 12px !important;
}

.u-padding-top-large {
  padding-top: 48px !important;
}

.u-padding-top-huge {
  padding-top: 96px !important;
}

.u-padding-top-none {
  padding-top: 0 !important;
}

.u-padding-right {
  padding-right: 24px !important;
}

.u-padding-right-tiny {
  padding-right: 6px !important;
}

.u-padding-right-small {
  padding-right: 12px !important;
}

.u-padding-right-large {
  padding-right: 48px !important;
}

.u-padding-right-huge {
  padding-right: 96px !important;
}

.u-padding-right-none {
  padding-right: 0 !important;
}

.u-padding-bottom {
  padding-bottom: 24px !important;
}

.u-padding-bottom-tiny {
  padding-bottom: 6px !important;
}

.u-padding-bottom-small {
  padding-bottom: 12px !important;
}

.u-padding-bottom-large {
  padding-bottom: 48px !important;
}

.u-padding-bottom-huge {
  padding-bottom: 96px !important;
}

.u-padding-bottom-none {
  padding-bottom: 0 !important;
}

.u-padding-left {
  padding-left: 24px !important;
}

.u-padding-left-tiny {
  padding-left: 6px !important;
}

.u-padding-left-small {
  padding-left: 12px !important;
}

.u-padding-left-large {
  padding-left: 48px !important;
}

.u-padding-left-huge {
  padding-left: 96px !important;
}

.u-padding-left-none {
  padding-left: 0 !important;
}

.u-padding-horizontal {
  padding-left: 24px !important;
  padding-right: 24px !important;
}

.u-padding-horizontal-tiny {
  padding-left: 6px !important;
  padding-right: 6px !important;
}

.u-padding-horizontal-small {
  padding-left: 12px !important;
  padding-right: 12px !important;
}

.u-padding-horizontal-large {
  padding-left: 48px !important;
  padding-right: 48px !important;
}

.u-padding-horizontal-huge {
  padding-left: 96px !important;
  padding-right: 96px !important;
}

.u-padding-horizontal-none {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.u-padding-vertical {
  padding-top: 24px !important;
  padding-bottom: 24px !important;
}

.u-padding-vertical-tiny {
  padding-top: 6px !important;
  padding-bottom: 6px !important;
}

.u-padding-vertical-small {
  padding-top: 12px !important;
  padding-bottom: 12px !important;
}

.u-padding-vertical-large {
  padding-top: 48px !important;
  padding-bottom: 48px !important;
}

.u-padding-vertical-huge {
  padding-top: 96px !important;
  padding-bottom: 96px !important;
}

.u-padding-vertical-none {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.u-margin {
  margin: 24px !important;
}

.u-margin-tiny {
  margin: 6px !important;
}

.u-margin-small {
  margin: 12px !important;
}

.u-margin-large {
  margin: 48px !important;
}

.u-margin-huge {
  margin: 96px !important;
}

.u-margin-none {
  margin: 0 !important;
}

.u-margin-top {
  margin-top: 24px !important;
}

.u-margin-top-tiny {
  margin-top: 6px !important;
}

.u-margin-top-small {
  margin-top: 12px !important;
}

.u-margin-top-large {
  margin-top: 48px !important;
}

.u-margin-top-huge {
  margin-top: 96px !important;
}

.u-margin-top-none {
  margin-top: 0 !important;
}

.u-margin-right {
  margin-right: 24px !important;
}

.u-margin-right-tiny {
  margin-right: 6px !important;
}

.u-margin-right-small {
  margin-right: 12px !important;
}

.u-margin-right-large {
  margin-right: 48px !important;
}

.u-margin-right-huge {
  margin-right: 96px !important;
}

.u-margin-right-none {
  margin-right: 0 !important;
}

.u-margin-bottom {
  margin-bottom: 24px !important;
}

.u-margin-bottom-tiny {
  margin-bottom: 6px !important;
}

.u-margin-bottom-small {
  margin-bottom: 12px !important;
}

.u-margin-bottom-large {
  margin-bottom: 48px !important;
}

.u-margin-bottom-huge {
  margin-bottom: 96px !important;
}

.u-margin-bottom-none {
  margin-bottom: 0 !important;
}

.u-margin-left {
  margin-left: 24px !important;
}

.u-margin-left-tiny {
  margin-left: 6px !important;
}

.u-margin-left-small {
  margin-left: 12px !important;
}

.u-margin-left-large {
  margin-left: 48px !important;
}

.u-margin-left-huge {
  margin-left: 96px !important;
}

.u-margin-left-none {
  margin-left: 0 !important;
}

.u-margin-horizontal {
  margin-left: 24px !important;
  margin-right: 24px !important;
}

.u-margin-horizontal-tiny {
  margin-left: 6px !important;
  margin-right: 6px !important;
}

.u-margin-horizontal-small {
  margin-left: 12px !important;
  margin-right: 12px !important;
}

.u-margin-horizontal-large {
  margin-left: 48px !important;
  margin-right: 48px !important;
}

.u-margin-horizontal-huge {
  margin-left: 96px !important;
  margin-right: 96px !important;
}

.u-margin-horizontal-none {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

.u-margin-vertical {
  margin-top: 24px !important;
  margin-bottom: 24px !important;
}

.u-margin-vertical-tiny {
  margin-top: 6px !important;
  margin-bottom: 6px !important;
}

.u-margin-vertical-small {
  margin-top: 12px !important;
  margin-bottom: 12px !important;
}

.u-margin-vertical-large {
  margin-top: 48px !important;
  margin-bottom: 48px !important;
}

.u-margin-vertical-huge {
  margin-top: 96px !important;
  margin-bottom: 96px !important;
}

.u-margin-vertical-none {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

/* stylelint-enable string-quotes */

/* ==========================================================================
   #RESPONSIVE-SPACINGS
   ========================================================================== */

/**
 * Utility classes enhancing the normal spacing classes by adding responsiveness
 * to them. By default this brings us the following classes:
 *
 *   .u-margin-bottom-none@mobile {}
 *   .u-margin-bottom-none@tablet {}
 *   .u-margin-bottom-none@desktop {}
 *   .u-margin-bottom-none@wide {}
 *
 * But we can affect the classes that get generated by altering the appropriate
 * Sass maps below.
 */

/* stylelint-disable max-nesting-depth */

@media (min-width: 20em) {
  .u-margin-bottom-none\@mobile {
    margin-bottom: 0 !important;
  }
}

@media (min-width: 46.25em) {
  .u-margin-bottom-none\@tablet {
    margin-bottom: 0 !important;
  }
}

@media (min-width: 61.25em) {
  .u-margin-bottom-none\@desktop {
    margin-bottom: 0 !important;
  }
}

@media (min-width: 81.25em) {
  .u-margin-bottom-none\@wide {
    margin-bottom: 0 !important;
  }
}

@media (min-width: 100em) {
  .u-margin-bottom-none\@u-wide {
    margin-bottom: 0 !important;
  }
}

/* stylelint-enable max-nesting-depth */

/* ==========================================================================
   #PRINT
   ========================================================================== */

/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/5.3.0/dist/doc/css.md#print-styles
 * https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css#L205-L282
 */

@media print {
  /**
   * 1. Black prints faster: http://www.sanbeiji.com/archives/953
   */

  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important;
    /* [1] */
    -webkit-box-shadow: none !important;
            box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  /**
   * Don't show links that are fragment identifiers, or use the `javascript:`
   * pseudo protocol.
   */

  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /**
   * Printing Tables: http://css-discuss.incutio.com/wiki/Printing_Tables
   */

  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

/* ==========================================================================
   #HIDE
   ========================================================================== */

/**
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
          clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important;
}

/**
 * Hide visually and from screen readers.
 */

.u-hidden {
  display: none !important;
}

/* =======================
   Utilities/Hide Responsive
   ======================= */

@media (min-width: 20em) {
  .u-hidden\@mobile {
    display: none !important;
  }

  .u-shown\@mobile {
    display: inherit !important;
  }

  .u-display-block.u-shown\@mobile {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@mobile {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@mobile {
    display: inline !important;
  }
}

@media (min-width: 46.25em) {
  .u-hidden\@tablet {
    display: none !important;
  }

  .u-shown\@tablet {
    display: inherit !important;
  }

  .u-display-block.u-shown\@tablet {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@tablet {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@tablet {
    display: inline !important;
  }
}

@media (min-width: 61.25em) {
  .u-hidden\@desktop {
    display: none !important;
  }

  .u-shown\@desktop {
    display: inherit !important;
  }

  .u-display-block.u-shown\@desktop {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@desktop {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@desktop {
    display: inline !important;
  }
}

@media (min-width: 81.25em) {
  .u-hidden\@wide {
    display: none !important;
  }

  .u-shown\@wide {
    display: inherit !important;
  }

  .u-display-block.u-shown\@wide {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@wide {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@wide {
    display: inline !important;
  }
}

@media (min-width: 100em) {
  .u-hidden\@u-wide {
    display: none !important;
  }

  .u-shown\@u-wide {
    display: inherit !important;
  }

  .u-display-block.u-shown\@u-wide {
    display: block !important;
  }

  .u-display-inline-block.u-shown\@u-wide {
    display: inline-block !important;
  }

  .u-display-inline.u-shown\@u-wide {
    display: inline !important;
  }
}

/* =======================
   Utilities/Constrain
   ======================= */

.u-constrain--huge {
  max-width: 1400px;
}

.u-constrain--large {
  max-width: 1280px;
}

.u-constrain {
  max-width: 1024px;
}

.u-constrain--small {
  max-width: 768px;
}

.u-constrain--tiny {
  max-width: 600px;
}

/* =======================
   Utilities/Flex
   ======================= */

.u-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.u-flex--center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.u-flex--right {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.u-flex--center-middle {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.u-flex--bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

/* =======================
   Shame
   ======================= */


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL21haW4uc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3NldHRpbmdzLmNvbG9ycy5zY3NzIiwid2VicGFjazovLy8uL21haW4uc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3NldHRpbmdzLnRyYW5zaXRpb25zLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL19zZXR0aW5ncy5tZWFzdXJlbWVudHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvbGlicy9ibGFjay10aWUuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9wbHlyL3NyYy9zY3NzL3BseXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9wbHlyL3NyYy9zY3NzL21peGlucy5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fdG9vbHMuZm9udHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3Rvb2xzLmFsaWFzZXMuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3Rvb2xzLm1peGlucy5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fdG9vbHMuY29sb3Iuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3Rvb2xzLmJ1dHRvbi5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL2dlbmVyaWMvX2dlbmVyaWMuYm94LXNpemluZy5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL2dlbmVyaWMvX2dlbmVyaWMubm9ybWFsaXplLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3MvZ2VuZXJpYy9fZ2VuZXJpYy5yZXNldC5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL2dlbmVyaWMvX2dlbmVyaWMuc2hhcmVkLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3MvZWxlbWVudHMvX2VsZW1lbnRzLnBhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX2VsZW1lbnRzLnBhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9zYXNzLW1xL19tcS5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL2VsZW1lbnRzL19lbGVtZW50cy5pbWFnZXMuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy9lbGVtZW50cy9fZWxlbWVudHMudGFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL19lbGVtZW50cy5saW5rcy5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL29iamVjdHMvX29iamVjdHMud3JhcHBlci5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL3Rvb2xzL190b29scy5jbGVhcmZpeC5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fb2JqZWN0cy53cmFwcGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3Mvb2JqZWN0cy9fb2JqZWN0cy5sYXlvdXQuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX29iamVjdHMubGF5b3V0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3Mvb2JqZWN0cy9fb2JqZWN0cy5tZWRpYS5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL29iamVjdHMvX29iamVjdHMuZmxhZy5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL29iamVjdHMvX29iamVjdHMubGlzdC1iYXJlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3Mvb2JqZWN0cy9fb2JqZWN0cy5saXN0LWlubGluZS5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL29iamVjdHMvX29iamVjdHMuYmxvY2suc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX29iamVjdHMuaGVhZGluZy5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fY29tcG9uZW50cy5idXR0b24uc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy90b29scy9fdG9vbHMuZm9udC1zaXplLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3MvdXRpbGl0aWVzL191dGlsaXRpZXMuY2xlYXJmaXguc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy91dGlsaXRpZXMvX3V0aWxpdGllcy53aWR0aHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy91dGlsaXRpZXMvX3V0aWxpdGllcy5zcGFjaW5ncy5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL3V0aWxpdGllcy9fdXRpbGl0aWVzLnJlc3BvbnNpdmUtc3BhY2luZ3Muc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy91dGlsaXRpZXMvX3V0aWxpdGllcy5wcmludC5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL3V0aWxpdGllcy9fdXRpbGl0aWVzLmhpZGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy90b29scy9fdG9vbHMuaGlkZGVuLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL191dGlsaXRpZXMuaGlkZS1yZXNwb25zaXZlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL191dGlsaXRpZXMuY29uc3RyYWluLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL191dGlsaXRpZXMuZmxleC5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fc2hhbWUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQTs7NkJDSTZCOztBQ0o3Qjs7NkJEUTZCOztBRVI3Qjs7NkJGWTZCOztBR1o3Qjs7NkJIZ0I2Qjs7QUdiN0I7RUFDSTtFQUNBO0VBQ0E7RUFLQTtFQUNBO0NIWUg7O0FHVkQ7RUFDSTtFQUNBO0VBQ0E7RUFLQTtFQUNBO0NIU0g7O0FHUEQ7RUFDSTtFQUNBO0VBQ0E7RUFLQTtFQUNBO0NITUg7O0FHSkQ7RUFDSTtFQUNBO0VBQ0E7RUFLQTtFQUNBO0NIR0g7O0FHREQ7RUFDSTtFQUNBO0VBQ0E7RUFLQTtFQUNBO0NIQUg7O0FHRUQ7Ozs7O0VBS0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtVQUFBO0NIQ0g7O0FHQ0Q7RUFDSTtDSEVIOztBR0FEO0VBQ0k7Q0hHSDs7QUdERDtFQUNJO0NISUg7O0FHRkQ7RUFDSTtDSEtIOztBR0hEOztBQUNBO0VBQ0k7RUFDQTtDSE9IOztBR0xEOztBQUNBO0VBQ0k7RUFDQTtDSFNIOztBR1BEO0VBQ0k7Q0hVSDs7QUdSRDtFQUNJO0NIV0g7O0FHVEQ7RUFDSTtDSFlIOztBR1ZEO0VBQ0k7Q0hhSDs7QUdYRDs7Ozs7RUFLSTtDSGNIOztBR1pEO0VBQ0k7RUFDQTtDSGVIOztBR2JEO0VBQ0k7RUFDQTtFQUNBO0NIZ0JIOztBR2RRO0VBQ0w7Q0hpQkg7O0FHZkQ7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NIa0JIOztBR2hCRDtFQUNJO0NIbUJIOztBR2pCRDtFQUNJO0VBQ0E7RUFDQTtDSG9CSDs7QUdsQkQ7RUFDSTtDSHFCSDs7QUduQkQ7RUFDSTtDSHNCSDs7QUdwQkQ7Ozs7O0VBS0k7Q0h1Qkg7O0FHckJEOzs7OztFQUtJO0NId0JIOztBR3RCRDtFQUNJO0VBQ0E7Q0h5Qkg7O0FHdkJEO0VBQ0k7RUFDQTtDSDBCSDs7QUd4QkQ7RUFDSTtJQUNJO0lBQ0E7R0gyQkw7O0VHekJDO0lBQ0k7SUFDQTtHSDRCTDtDQUNGOztBRzFCRDtFQUNJO0lBQ0k7SUFDQTtHSDZCTDs7RUczQkM7SUFDSTtJQUNBO0dIOEJMO0NBQ0Y7O0FHNUJEO0VBQ0k7RUFDQTtFQUVBO0NIK0JIOztBRzdCRDtFQUNJO0VBQ0E7RUFFQTtDSGdDSDs7QUc5QkQ7RUFDSTtFQUNBO0VBRUE7Q0hpQ0g7O0FHL0JEO0VBQ0k7RUFDQTtFQUVBO0NIa0NIOztBR2hDRDtFQUNJO0VBQ0E7RUFFQTtDSG1DSDs7QUdqQ0Q7Ozs7O0VBS0k7VUFBQTtDSG9DSDs7QUdsQ0Q7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0hxQ0g7O0FHbkNEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDSHNDSDs7QUdwQ0Q7O0VBRUk7RUFDQTtFQUNBO0NIdUNIOztBR3JDRDtFQUNJO0NId0NIOztBR3RDRDtvRUh5Q29FOztBR3ZDcEU7RUFDSTtDSDBDSDs7QUd4Q0Q7RUFDSTtDSDJDSDs7QUd6Q0Q7RUFDSTtDSDRDSDs7QUcxQ0Q7RUFDSTtDSDZDSDs7QUczQ0Q7RUFDSTtDSDhDSDs7QUc1Q0Q7RUFDSTtDSCtDSDs7QUc3Q0Q7RUFDSTtDSGdESDs7QUc5Q0Q7RUFDSTtDSGlESDs7QUcvQ0Q7RUFDSTtDSGtESDs7QUdoREQ7RUFDSTtDSG1ESDs7QUdqREQ7RUFDSTtDSG9ESDs7QUdsREQ7RUFDSTtDSHFESDs7QUduREQ7RUFDSTtDSHNESDs7QUdwREQ7RUFDSTtDSHVESDs7QUdyREQ7RUFDSTtDSHdESDs7QUd0REQ7RUFDSTtDSHlESDs7QUd2REQ7RUFDSTtDSDBESDs7QUd4REQ7RUFDSTtDSDJESDs7QUd6REQ7RUFDSTtDSDRESDs7QUcxREQ7RUFDSTtDSDZESDs7QUczREQ7RUFDSTtDSDhESDs7QUc1REQ7RUFDSTtDSCtESDs7QUc3REQ7RUFDSTtDSGdFSDs7QUc5REQ7RUFDSTtDSGlFSDs7QUcvREQ7RUFDSTtDSGtFSDs7QUdoRUQ7RUFDSTtDSG1FSDs7QUdqRUQ7RUFDSTtDSG9FSDs7QUdsRUQ7RUFDSTtDSHFFSDs7QUduRUQ7RUFDSTtDSHNFSDs7QUdwRUQ7RUFDSTtDSHVFSDs7QUdyRUQ7RUFDSTtDSHdFSDs7QUd0RUQ7RUFDSTtDSHlFSDs7QUd2RUQ7RUFDSTtDSDBFSDs7QUd4RUQ7RUFDSTtDSDJFSDs7QUd6RUQ7RUFDSTtDSDRFSDs7QUcxRUQ7RUFDSTtDSDZFSDs7QUczRUQ7RUFDSTtDSDhFSDs7QUc1RUQ7RUFDSTtDSCtFSDs7QUc3RUQ7RUFDSTtDSGdGSDs7QUc5RUQ7RUFDSTtDSGlGSDs7QUcvRUQ7RUFDSTtDSGtGSDs7QUdoRkQ7RUFDSTtDSG1GSDs7QUdqRkQ7RUFDSTtDSG9GSDs7QUdsRkQ7RUFDSTtDSHFGSDs7QUduRkQ7RUFDSTtDSHNGSDs7QUdwRkQ7RUFDSTtDSHVGSDs7QUdyRkQ7RUFDSTtDSHdGSDs7QUd0RkQ7RUFDSTtDSHlGSDs7QUd2RkQ7RUFDSTtDSDBGSDs7QUd4RkQ7RUFDSTtDSDJGSDs7QUd6RkQ7RUFDSTtDSDRGSDs7QUcxRkQ7RUFDSTtDSDZGSDs7QUczRkQ7RUFDSTtDSDhGSDs7QUc1RkQ7RUFDSTtDSCtGSDs7QUc3RkQ7RUFDSTtDSGdHSDs7QUc5RkQ7RUFDSTtDSGlHSDs7QUcvRkQ7RUFDSTtDSGtHSDs7QUdoR0Q7RUFDSTtDSG1HSDs7QUdqR0Q7RUFDSTtDSG9HSDs7QUdsR0Q7RUFDSTtDSHFHSDs7QUduR0Q7RUFDSTtDSHNHSDs7QUdwR0Q7RUFDSTtDSHVHSDs7QUdyR0Q7RUFDSTtDSHdHSDs7QUd0R0Q7RUFDSTtDSHlHSDs7QUd2R0Q7RUFDSTtDSDBHSDs7QUd4R0Q7RUFDSTtDSDJHSDs7QUd6R0Q7RUFDSTtDSDRHSDs7QUcxR0Q7RUFDSTtDSDZHSDs7QUczR0Q7RUFDSTtDSDhHSDs7QUc1R0Q7RUFDSTtDSCtHSDs7QUc3R0Q7RUFDSTtDSGdISDs7QUc5R0Q7RUFDSTtDSGlISDs7QUcvR0Q7RUFDSTtDSGtISDs7QUdoSEQ7RUFDSTtDSG1ISDs7QUdqSEQ7RUFDSTtDSG9ISDs7QUdsSEQ7RUFDSTtDSHFISDs7QUduSEQ7RUFDSTtDSHNISDs7QUdwSEQ7RUFDSTtDSHVISDs7QUdySEQ7RUFDSTtDSHdISDs7QUd0SEQ7RUFDSTtDSHlISDs7QUd2SEQ7RUFDSTtDSDBISDs7QUd4SEQ7RUFDSTtDSDJISDs7QUd6SEQ7RUFDSTtDSDRISDs7QUcxSEQ7RUFDSTtDSDZISDs7QUczSEQ7RUFDSTtDSDhISDs7QUc1SEQ7RUFDSTtDSCtISDs7QUc3SEQ7RUFDSTtDSGdJSDs7QUc5SEQ7RUFDSTtDSGlJSDs7QUcvSEQ7RUFDSTtDSGtJSDs7QUdoSUQ7RUFDSTtDSG1JSDs7QUdqSUQ7RUFDSTtDSG9JSDs7QUdsSUQ7RUFDSTtDSHFJSDs7QUduSUQ7RUFDSTtDSHNJSDs7QUdwSUQ7RUFDSTtDSHVJSDs7QUdySUQ7RUFDSTtDSHdJSDs7QUd0SUQ7RUFDSTtDSHlJSDs7QUd2SUQ7RUFDSTtDSDBJSDs7QUd4SUQ7RUFDSTtDSDJJSDs7QUd6SUQ7RUFDSTtDSDRJSDs7QUcxSUQ7RUFDSTtDSDZJSDs7QUczSUQ7RUFDSTtDSDhJSDs7QUc1SUQ7RUFDSTtDSCtJSDs7QUc3SUQ7RUFDSTtDSGdKSDs7QUc5SUQ7RUFDSTtDSGlKSDs7QUcvSUQ7RUFDSTtDSGtKSDs7QUdoSkQ7RUFDSTtDSG1KSDs7QUdqSkQ7RUFDSTtDSG9KSDs7QUdsSkQ7RUFDSTtDSHFKSDs7QUduSkQ7RUFDSTtDSHNKSDs7QUdwSkQ7RUFDSTtDSHVKSDs7QUdySkQ7RUFDSTtDSHdKSDs7QUd0SkQ7RUFDSTtDSHlKSDs7QUd2SkQ7RUFDSTtDSDBKSDs7QUd4SkQ7RUFDSTtDSDJKSDs7QUd6SkQ7RUFDSTtDSDRKSDs7QUcxSkQ7RUFDSTtDSDZKSDs7QUczSkQ7RUFDSTtDSDhKSDs7QUc1SkQ7RUFDSTtDSCtKSDs7QUc3SkQ7RUFDSTtDSGdLSDs7QUc5SkQ7RUFDSTtDSGlLSDs7QUcvSkQ7RUFDSTtDSGtLSDs7QUdoS0Q7RUFDSTtDSG1LSDs7QUdqS0Q7RUFDSTtDSG9LSDs7QUdsS0Q7RUFDSTtDSHFLSDs7QUduS0Q7RUFDSTtDSHNLSDs7QUdwS0Q7RUFDSTtDSHVLSDs7QUdyS0Q7RUFDSTtDSHdLSDs7QUd0S0Q7RUFDSTtDSHlLSDs7QUd2S0Q7RUFDSTtDSDBLSDs7QUd4S0Q7RUFDSTtDSDJLSDs7QUd6S0Q7RUFDSTtDSDRLSDs7QUcxS0Q7RUFDSTtDSDZLSDs7QUczS0Q7RUFDSTtDSDhLSDs7QUc1S0Q7RUFDSTtDSCtLSDs7QUc3S0Q7RUFDSTtDSGdMSDs7QUc5S0Q7RUFDSTtDSGlMSDs7QUcvS0Q7RUFDSTtDSGtMSDs7QUdoTEQ7RUFDSTtDSG1MSDs7QUdqTEQ7RUFDSTtDSG9MSDs7QUdsTEQ7RUFDSTtDSHFMSDs7QUduTEQ7RUFDSTtDSHNMSDs7QUdwTEQ7RUFDSTtDSHVMSDs7QUdyTEQ7RUFDSTtDSHdMSDs7QUd0TEQ7RUFDSTtDSHlMSDs7QUd2TEQ7RUFDSTtDSDBMSDs7QUd4TEQ7RUFDSTtDSDJMSDs7QUd6TEQ7RUFDSTtDSDRMSDs7QUcxTEQ7RUFDSTtDSDZMSDs7QUczTEQ7RUFDSTtDSDhMSDs7QUc1TEQ7RUFDSTtDSCtMSDs7QUc3TEQ7RUFDSTtDSGdNSDs7QUc5TEQ7RUFDSTtDSGlNSDs7QUcvTEQ7RUFDSTtDSGtNSDs7QUdoTUQ7RUFDSTtDSG1NSDs7QUdqTUQ7RUFDSTtDSG9NSDs7QUdsTUQ7RUFDSTtDSHFNSDs7QUduTUQ7RUFDSTtDSHNNSDs7QUdwTUQ7RUFDSTtDSHVNSDs7QUdyTUQ7RUFDSTtDSHdNSDs7QUd0TUQ7RUFDSTtDSHlNSDs7QUd2TUQ7RUFDSTtDSDBNSDs7QUd4TUQ7RUFDSTtDSDJNSDs7QUd6TUQ7RUFDSTtDSDRNSDs7QUcxTUQ7RUFDSTtDSDZNSDs7QUczTUQ7RUFDSTtDSDhNSDs7QUc1TUQ7RUFDSTtDSCtNSDs7QUc3TUQ7RUFDSTtDSGdOSDs7QUc5TUQ7RUFDSTtDSGlOSDs7QUcvTUQ7RUFDSTtDSGtOSDs7QUdoTkQ7RUFDSTtDSG1OSDs7QUdqTkQ7RUFDSTtDSG9OSDs7QUdsTkQ7RUFDSTtDSHFOSDs7QUduTkQ7RUFDSTtDSHNOSDs7QUdwTkQ7RUFDSTtDSHVOSDs7QUdyTkQ7RUFDSTtDSHdOSDs7QUd0TkQ7RUFDSTtDSHlOSDs7QUd2TkQ7RUFDSTtDSDBOSDs7QUd4TkQ7RUFDSTtDSDJOSDs7QUd6TkQ7RUFDSTtDSDROSDs7QUcxTkQ7RUFDSTtDSDZOSDs7QUczTkQ7RUFDSTtDSDhOSDs7QUc1TkQ7RUFDSTtDSCtOSDs7QUc3TkQ7RUFDSTtDSGdPSDs7QUc5TkQ7RUFDSTtDSGlPSDs7QUcvTkQ7RUFDSTtDSGtPSDs7QUdoT0Q7RUFDSTtDSG1PSDs7QUdqT0Q7RUFDSTtDSG9PSDs7QUdsT0Q7RUFDSTtDSHFPSDs7QUduT0Q7RUFDSTtDSHNPSDs7QUdwT0Q7RUFDSTtDSHVPSDs7QUdyT0Q7RUFDSTtDSHdPSDs7QUd0T0Q7RUFDSTtDSHlPSDs7QUd2T0Q7RUFDSTtDSDBPSDs7QUd4T0Q7RUFDSTtDSDJPSDs7QUd6T0Q7RUFDSTtDSDRPSDs7QUcxT0Q7RUFDSTtDSDZPSDs7QUczT0Q7RUFDSTtDSDhPSDs7QUc1T0Q7RUFDSTtDSCtPSDs7QUc3T0Q7RUFDSTtDSGdQSDs7QUc5T0Q7RUFDSTtDSGlQSDs7QUcvT0Q7RUFDSTtDSGtQSDs7QUdoUEQ7RUFDSTtDSG1QSDs7QUdqUEQ7RUFDSTtDSG9QSDs7QUdsUEQ7RUFDSTtDSHFQSDs7QUduUEQ7RUFDSTtDSHNQSDs7QUdwUEQ7RUFDSTtDSHVQSDs7QUdyUEQ7RUFDSTtDSHdQSDs7QUd0UEQ7RUFDSTtDSHlQSDs7QUd2UEQ7RUFDSTtDSDBQSDs7QUd4UEQ7RUFDSTtDSDJQSDs7QUd6UEQ7RUFDSTtDSDRQSDs7QUcxUEQ7RUFDSTtDSDZQSDs7QUczUEQ7RUFDSTtDSDhQSDs7QUc1UEQ7RUFDSTtDSCtQSDs7QUc3UEQ7RUFDSTtDSGdRSDs7QUc5UEQ7RUFDSTtDSGlRSDs7QUcvUEQ7RUFDSTtDSGtRSDs7QUdoUUQ7RUFDSTtDSG1RSDs7QUdqUUQ7RUFDSTtDSG9RSDs7QUdsUUQ7RUFDSTtDSHFRSDs7QUduUUQ7RUFDSTtDSHNRSDs7QUdwUUQ7RUFDSTtDSHVRSDs7QUdyUUQ7RUFDSTtDSHdRSDs7QUd0UUQ7RUFDSTtDSHlRSDs7QUd2UUQ7RUFDSTtDSDBRSDs7QUd4UUQ7RUFDSTtDSDJRSDs7QUd6UUQ7RUFDSTtDSDRRSDs7QUcxUUQ7RUFDSTtDSDZRSDs7QUczUUQ7RUFDSTtDSDhRSDs7QUc1UUQ7RUFDSTtDSCtRSDs7QUc3UUQ7RUFDSTtDSGdSSDs7QUc5UUQ7RUFDSTtDSGlSSDs7QUcvUUQ7RUFDSTtDSGtSSDs7QUdoUkQ7RUFDSTtDSG1SSDs7QUdqUkQ7RUFDSTtDSG9SSDs7QUdsUkQ7RUFDSTtDSHFSSDs7QUduUkQ7RUFDSTtDSHNSSDs7QUdwUkQ7RUFDSTtDSHVSSDs7QUdyUkQ7RUFDSTtDSHdSSDs7QUd0UkQ7RUFDSTtDSHlSSDs7QUd2UkQ7RUFDSTtDSDBSSDs7QUd4UkQ7RUFDSTtDSDJSSDs7QUd6UkQ7RUFDSTtDSDRSSDs7QUcxUkQ7RUFDSTtDSDZSSDs7QUczUkQ7O0VBRUk7Q0g4Ukg7O0FHNVJEO0VBQ0k7Q0grUkg7O0FHN1JEO0VBQ0k7Q0hnU0g7O0FHOVJEO0VBQ0k7Q0hpU0g7O0FHL1JEO0VBQ0k7Q0hrU0g7O0FHaFNEO0VBQ0k7Q0htU0g7O0FHalNEO0VBQ0k7Q0hvU0g7O0FHbFNEO0VBQ0k7Q0hxU0g7O0FHblNEO0VBQ0k7Q0hzU0g7O0FHcFNEO0VBQ0k7Q0h1U0g7O0FHclNEO0VBQ0k7Q0h3U0g7O0FHdFNEO0VBQ0k7Q0h5U0g7O0FHdlNEO0VBQ0k7Q0gwU0g7O0FHeFNEO0VBQ0k7Q0gyU0g7O0FHelNEO0VBQ0k7Q0g0U0g7O0FHMVNEO0VBQ0k7Q0g2U0g7O0FHM1NEO0VBQ0k7Q0g4U0g7O0FHNVNEO0VBQ0k7Q0grU0g7O0FHN1NEO0VBQ0k7Q0hnVEg7O0FHOVNEO0VBQ0k7Q0hpVEg7O0FHL1NEO0VBQ0k7Q0hrVEg7O0FHaFREO0VBQ0k7Q0htVEg7O0FHalREO0VBQ0k7Q0hvVEg7O0FHbFREO0VBQ0k7Q0hxVEg7O0FHblREO0VBQ0k7Q0hzVEg7O0FHcFREO0VBQ0k7Q0h1VEg7O0FHclREO0VBQ0k7Q0h3VEg7O0FHdFREO0VBQ0k7Q0h5VEg7O0FHdlREO0VBQ0k7Q0gwVEg7O0FHeFREO0VBQ0k7Q0gyVEg7O0FHelREO0VBQ0k7Q0g0VEg7O0FHMVREO0VBQ0k7Q0g2VEg7O0FHM1REO0VBQ0k7Q0g4VEg7O0FHNVREO0VBQ0k7Q0grVEg7O0FHN1REO0VBQ0k7Q0hnVUg7O0FHOVREO0VBQ0k7Q0hpVUg7O0FHL1REO0VBQ0k7Q0hrVUg7O0FHaFVEO0VBQ0k7Q0htVUg7O0FHalVEO0VBQ0k7Q0hvVUg7O0FHbFVEO0VBQ0k7Q0hxVUg7O0FHblVEO0VBQ0k7Q0hzVUg7O0FHcFVEO0VBQ0k7Q0h1VUg7O0FHclVEO0VBQ0k7Q0h3VUg7O0FHdFVEO0VBQ0k7Q0h5VUg7O0FHdlVEO0VBQ0k7Q0gwVUg7O0FHeFVEO0VBQ0k7Q0gyVUg7O0FHelVEO0VBQ0k7Q0g0VUg7O0FHMVVEO0VBQ0k7Q0g2VUg7O0FHM1VEO0VBQ0k7Q0g4VUg7O0FHNVVEO0VBQ0k7Q0grVUg7O0FHN1VEO0VBQ0k7Q0hnVkg7O0FHOVVEO0VBQ0k7Q0hpVkg7O0FHL1VEO0VBQ0k7Q0hrVkg7O0FHaFZEO0VBQ0k7Q0htVkg7O0FHalZEO0VBQ0k7Q0hvVkg7O0FHbFZEO0VBQ0k7Q0hxVkg7O0FHblZEO0VBQ0k7Q0hzVkg7O0FHcFZEO0VBQ0k7Q0h1Vkg7O0FHclZEO0VBQ0k7Q0h3Vkg7O0FHdFZEO0VBQ0k7Q0h5Vkg7O0FHdlZEO0VBQ0k7Q0gwVkg7O0FHeFZEO0VBQ0k7Q0gyVkg7O0FHelZEO0VBQ0k7Q0g0Vkg7O0FHMVZEO0VBQ0k7Q0g2Vkg7O0FHM1ZEO0VBQ0k7Q0g4Vkg7O0FHNVZEO0VBQ0k7Q0grVkg7O0FHN1ZEO0VBQ0k7Q0hnV0g7O0FHOVZEO0VBQ0k7Q0hpV0g7O0FHL1ZEO0VBQ0k7Q0hrV0g7O0FHaFdEO0VBQ0k7Q0htV0g7O0FHaldEO0VBQ0k7Q0hvV0g7O0FHbFdEO0VBQ0k7Q0hxV0g7O0FHbldEO0VBQ0k7Q0hzV0g7O0FHcFdEO0VBQ0k7Q0h1V0g7O0FHcldEO0VBQ0k7Q0h3V0g7O0FHdFdEO0VBQ0k7Q0h5V0g7O0FHdldEO0VBQ0k7Q0gwV0g7O0FHeFdEOztFQUVJO0NIMldIOztBSWxpREQ7RUFDSTtJQUFLO0dKc2lETjtDQUNGOztBSXhpREQ7RUFDSTtJQUFLO0dKc2lETjtDQUNGOztBSWppREQ7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NKb2lESDs7QUl6aUREOzs7O0VBY1k7VUFBQTtDSmtpRFg7O0FJaGpERDs7OztFQXFCUTtNQUFBO0NKa2lEUDs7QUl2akREO0VBMkJRO0NKZ2lEUDs7QUkzakREOztFQWlDUTtFQUNBO0VBQ0E7RUFDQTtDSitoRFA7O0FJbmtERDtFQTBDUTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFFQTtLQUFBO1VBQUE7RUFDQTtFQUNBO0VBQ0E7Q0o0aERQOztBSXZpREc7RUNuREE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtVQUFBO0NMOGxESDs7QUkvaURHO0VBa0JRO0VBQ0E7RUMvRFI7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFBQTtFQUFBO0VBQUE7RUFDQTtVQUFBO0VBQ0E7VUFBQTtDTGltREg7O0FJdG1ERDtFQ1ZJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7T0FBQTtDTG9uREg7O0FJOW1ERDtFQ0hJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQUE7RUFBQTtFQUFBO0VBQ0E7RUFDQTtDTHFuREg7O0FJMW5ERDtFQTBFWTtFQUNBO0VBQ0E7RUFDQTtDSm9qRFg7O0FJeGxERztFQ25EQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO01BQUE7Q0wrb0RIOztBSWhtREc7RUNuREE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtNQUFBO0VEMEZRO0NKOGpEWDs7QUl6bURHO0VDNUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQUE7RUFBQTtFQUFBO0VBQ0E7RUFDQTtFRG9GUTtDSnNrRFg7O0FJL3BERDtFQTRGWTtDSnVrRFg7O0FJMW5ERztFQXdEUTtDSnNrRFg7O0FJOW5ERztFQTJEUTtDSnVrRFg7O0FJbG9ERztFQThEUTtDSndrRFg7O0FJL3FERDtFQ1FJO0VBQ0E7RUFDQTtVQUFBO0NMMnFESDs7QUk1b0RHO0VDakNBO0VBQ0E7RUFDQTtDTGlyREg7O0FJM3JERDtFQ1FJO0VBQ0E7RUFDQTtDTHVyREg7O0FJdmtERDtFQUNJO0NKMGtESDs7QUl0a0REO0VBQ0k7Q0p5a0RIOztBSXJrREQ7RUFDSTtFQUNBO0VBSUk7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDSnFrRFA7O0FJMWpERDtFQUNJO0VBQ0E7RUFDQTtDSjZqREg7O0FJempERDtFQUNJO0VBQXlCO0VBQ3pCO0VBQ0E7RUFHQTtFQUNBO0NKMmpESDs7QUl6akRHO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7S0FBQTtNQUFBO1VBQUE7Q0o0akRQOztBSTVrREQ7RUFxQlE7RUFDQTtFQUNBO1VBQUE7Q0oyakRQOztBSXZqREQ7RUFDSTtDSjBqREg7O0FJcGpESztFQUNGO0NKdWpESDs7QUlyakREO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7VUFBQTtFQUNBO0VBQUE7RUFBQTtFQUFBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0p3akRIOztBSXBrREQ7RUFlUTtFQUNBO0VBQ0E7RUFDQTtVQUFBO0VBQ0E7Q0p5akRQOztBSTVrREQ7RUFzQlE7Q0owakRQOztBSXZqREc7RUF6Qko7SUEwQlE7R0oyakRMO0NBQ0Y7O0FJempEc0I7RUFDbkI7Q0o0akRIOztBSTFqRG9CO0VBQ2pCO1VBQUE7Q0o2akRIOztBSTFqREQ7RUFDSTtJQUNJO0dKNmpETDtDQUNGOztBSXZqREs7RUFDRjtDSjBqREg7O0FJdGpERDtFQUNJO0VBQUE7RUFBQTtFQUNBO01BQUE7VUFBQTtFQUNBO0VBQ0E7Q0p5akRIOztBSXRqREs7OztFQUdFO0NKeWpEUDs7QUlua0REOzs7RUFhWTtDSjRqRFg7O0FJempERztFQUNJO0NKNGpEUDs7QUk3a0REO0VBb0JRO0NKNmpEUDs7QUl6akRHO0VBQ0k7RUFDQTtFQUNBO01BQUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQUE7RUFDQTtDSjRqRFA7O0FJaG1ERDtFQXVDWTtFQUNBO0VBQ0E7RUFDQTtDSjZqRFg7O0FJL2tERztFQXVCUTtDSjRqRFg7O0FJdmpERzs7O0VBR0k7Q0owakRQOztBSXZqREc7RUExREo7OztJQThEWTtHSjBqRFQ7Q0FDRjs7QUl0akRvQjtFQUNqQjtFQUNBO0NKeWpESDs7QUlyakREO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUFBO0NKd2pESDs7QUlsa0REOztFQWdCWTtFQUNBO0NKdWpEWDs7QUlqakREO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDSm9qREg7O0FJempERDs7RUFXWTtFQUNBO0NKbWpEWDs7QUk3aUREO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO1VBQUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO1VBQUE7RUFDQTtFQUNBO0VBQUE7Q0pnakRIOztBSTdqREQ7RUFnQlE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NKaWpEUDs7QUk5aURHO0VBQ0k7Q0ppakRQOztBSTlpREs7RUFDRjtDSmlqREg7O0FJL2lEWTtFQUNUO0NKa2pESDs7QUloakREO0VBQ0k7RUFDQTtDSm1qREg7O0FJL2lEZTs7RUFFWjtDSmtqREg7O0FJaGpERDtFQUNJO0NKbWpESDs7QUkvaUREOzs7RUFHSTtDSmtqREg7O0FJaGpETzs7O0VBQ0E7Q0pxakRQOztBSWhqREQ7O0VBRUk7Q0ptakRIOztBSWpqREQ7O0VBRUk7Q0pvakRIOztBSS9pREQ7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7RUFFQTtVQUFBO0VBQ0E7VUFBQTtFQUNBO0VBQUE7RUFBQTtFQUFBO0NKK2lESDs7QUlqa0REO0VBc0JRO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtVQUFBO0VBR0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDSjZpRFA7O0FJMWlERDs7O0VBR0k7RUFDQTtVQUFBO0NKNmlESDs7QUkzaUREO0VBQ0k7Q0o4aURIOztBSTFpREQ7RUFDSTtFQUNBO1VBQUE7RUFDQTtVQUFBO0NKNmlESDs7QUloakRrQztFQU0zQjtDSjhpRFA7O0FJemlERDtFQUNJO0VBQ0E7VUFBQTtFQUNBO1VBQUE7Q0o0aURIOztBSS9pRGlDO0VBTTFCO0VBQ0E7RUFDQTtVQUFBO0NKNmlEUDs7QUl2aURXOzs7Ozs7RUFHSjtVQUFBO0NKNmlEUDs7QUl0aUREO0VBQ0k7RUFDQTtFQUNBO01BQUE7VUFBQTtDSnlpREg7O0FJdmlERztFQUNJO0VBQ0E7Q0owaURQOztBSWpqREQ7RUFVWTtDSjJpRFg7O0FJcmpERDtFQWFZO0NKNGlEWDs7QUl6akREO0VBZ0JZO0NKNmlEWDs7QUk3akREO0VBc0JRO0NKMmlEUDs7QUl4aUREO0VBQ0k7Q0oyaURIOztBSXhpREQ7OztFQUdJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtLQUFBO1VBQUE7RUFDQTtFQUNBO0NKMmlESDs7QUl6aURHOzs7RUFDSTtDSjhpRFA7O0FJNWlERzs7O0VBQ0k7RUFDQTtFQUNBO0NKaWpEUDs7QUkvaURHOzs7RUFDSTtFQUNBO0VBQ0E7Q0pvakRQOztBSWxqREc7OztFQUNJO0NKdWpEUDs7QUlwakREOztFQUVJO0VBQ0E7RUFDQTtFQUNBO0VBQUE7Q0p1akRIOztBSXJqREc7O0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUFBO0NKeWpEUDs7QUl2akRHOztFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFBQTtDSjJqRFA7O0FJempERzs7RUFDSTtDSjZqRFA7O0FJempERztFQUNJO0VBQUE7Q0o0akRQOztBSTlqREQ7RUFLUTtFQUFBO0NKNmpEUDs7QUlsa0REO0VBUVE7RUFBQTtDSjhqRFA7O0FJM2pEWTs7RUFFVDtDSjhqREg7O0FJNWpEWTtFQUNUO0NKK2pESDs7QUk3akREOztFQUVJO0NKZ2tESDs7QUk5akREO0VBQ0k7Q0ppa0RIOztBSTdqRGM7RUFDWDtVQUFBO0VBQ0E7RUFDQTtFQUNBO0VBU0E7Q0p3akRIOztBSXRqRDBCO0VBQ3ZCO0NKeWpESDs7QUl2akQwQjtFQUN2QjtDSjBqREg7O0FJcmpERDtFQUNJO0VBQ0E7RUFDQTtDSndqREg7O0FJcmpERDtFQUNJO0NKd2pESDs7QUl0akRHO0VBSEo7SUFJUTtHSjBqREw7Q0FDRjs7QUkvakRhO0VBU047RUFDQTtDSjBqRFA7O0FJcGpERDtFQUNJO0NKdWpESDs7QUlyakRLO0VBQ0Y7TUFBQTtVQUFBO0VBQ0E7Q0p3akRIOztBSTFqREQ7RUFLUTtFQUNBO0NKeWpEUDs7QUl2akRHO0VBUko7SUFTUTtJQUNBO0dKMmpETDtDQUNGOztBSTFqREc7RUFaSjtJQWFRO0dKOGpETDtDQUNGOztBSXhqREQ7O0VBRUk7Q0oyakRIOztBSXRqREQ7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDSnlqREg7O0FJbmtERDtFQWFRO0NKMGpEUDs7QUl2a0REO0VBZ0JRO0VBQ0E7Q0oyakRQOztBSXpqREc7RUFFSTtDSjJqRFA7O0FJaGxERDtFQXdCUTtFQUNBO0VBQ0E7RUFDQTtDSjRqRFA7O0FJeGpEaUI7RUFDVjtFQUNBO0VBQ0E7VUFBQTtDSjJqRFA7O0FNOXlFRDs7NkJOa3pFNkI7O0FPbHpFN0I7OzZCUHN6RTZCOztBUXR6RTdCOzs2QlIwekU2Qjs7QVMxekU3Qjs7NkJUOHpFNkI7O0FVOXpFN0I7OzZCVmswRTZCOztBV2wwRTdCOztnRlhzMEVnRjs7QVdsMEVoRjs7O0dYdTBFRzs7QVdsMEVIO0VBQ0U7VUFBQTtDWHEwRUQ7O0FXaDBFQzs7O0VBR0U7VUFBQTtDWG0wRUg7O0FZcjFFRDs7QUFFQTtnRlp3MUVnRjs7QVlyMUVoRjs7OztHWjIxRUc7O0FZcjFFSDtFQUNFO0VBQW9CO0VBQ3BCO0VBQTZCO0VBQzdCO0VBQWlDO0NaMjFFbEM7O0FZeDFFRDtnRloyMUVnRjs7QVl4MUVoRjs7R1o0MUVHOztBWXgxRUg7RUFDRTtDWjIxRUQ7O0FZeDFFRDs7R1o0MUVHOztBWXgxRUg7Ozs7OztFQU1FO0NaMjFFRDs7QVl4MUVEOzs7R1o2MUVHOztBWXgxRUg7RUFDRTtFQUNBO0NaMjFFRDs7QVl4MUVEO2dGWjIxRWdGOztBWXgxRWhGOzs7R1o2MUVHOztBWXgxRUg7OztFQUVPO0VBQ0w7Q1o0MUVEOztBWXoxRUQ7O0daNjFFRzs7QVl6MUVIO0VBQ0U7Q1o0MUVEOztBWXoxRUQ7OztHWjgxRUc7O0FZejFFSDtFQUNFO1VBQUE7RUFBMEI7RUFDMUI7RUFBWTtFQUNaO0VBQW9CO0NaKzFFckI7O0FZNTFFRDs7O0daaTJFRzs7QVk1MUVIO0VBQ0U7RUFBb0M7RUFDcEM7RUFBaUI7Q1ppMkVsQjs7QVk5MUVEO2dGWmkyRWdGOztBWTkxRWhGOzs7R1ptMkVHOztBWTkxRUg7RUFDRTtFQUFnQztFQUNoQztFQUF3QztDWm0yRXpDOztBWWgyRUQ7OztHWnEyRUc7O0FZaDJFSDtFQUNFO0VBQXNCO0VBQ3RCO0VBQTZCO0VBQzdCO0VBQW9DO0NaczJFckM7O0FZbjJFRDs7R1p1MkVHOztBWW4yRUg7O0VBRUU7Q1pzMkVEOztBWW4yRUQ7O0dadTJFRzs7QVluMkVIOztFQUVFO0NaczJFRDs7QVluMkVEOzs7R1p3MkVHOztBWW4yRUg7OztFQUdFO0VBQW9DO0VBQ3BDO0VBQWlCO0NadzJFbEI7O0FZcjJFRDs7R1p5MkVHOztBWXIyRUg7RUFDRTtDWncyRUQ7O0FZcjJFRDs7R1p5MkVHOztBWXIyRUg7RUFDRTtFQUNBO0NadzJFRDs7QVlyMkVEOztHWnkyRUc7O0FZcjJFSDtFQUNFO0NadzJFRDs7QVlyMkVEOzs7R1owMkVHOztBWXIyRUg7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7Q1p3MkVEOztBWXIyRUQ7RUFDRTtDWncyRUQ7O0FZcjJFRDtFQUNFO0NadzJFRDs7QVlyMkVEO2dGWncyRWdGOztBWXIyRWhGOztHWnkyRUc7O0FZcjJFSDs7RUFFRTtDWncyRUQ7O0FZcjJFRDs7R1p5MkVHOztBWXIyRUg7RUFDRTtFQUNBO0NadzJFRDs7QVlyMkVEOztHWnkyRUc7O0FZcjJFSDtFQUNFO0NadzJFRDs7QVlyMkVEOztHWnkyRUc7O0FZcjJFSDtFQUNFO0NadzJFRDs7QVlyMkVEO2dGWncyRWdGOztBWXIyRWhGOzs7R1owMkVHOztBWXIyRUg7Ozs7O0VBS0U7RUFBMEI7RUFDMUI7RUFBa0I7RUFDbEI7RUFBb0I7RUFDcEI7RUFBWTtDWjQyRWI7O0FZejJFRDs7O0daODJFRzs7QVl6MkVIOztFQUNRO0VBQ047Q1o2MkVEOztBWTEyRUQ7OztHWisyRUc7O0FZMTJFSDs7RUFDUztFQUNQO0NaODJFRDs7QVkzMkVEOzs7O0daaTNFRzs7QVkzMkVIOzs7O0VBSUU7RUFBNkI7Q1orMkU5Qjs7QVk1MkVEOztHWmczRUc7O0FZNTJFSDs7OztFQUlFO0VBQ0E7Q1orMkVEOztBWTUyRUQ7O0daZzNFRzs7QVk1MkVIOzs7O0VBSUU7Q1orMkVEOztBWTUyRUQ7O0daZzNFRzs7QVk1MkVIO0VBQ0U7Q1orMkVEOztBWTUyRUQ7Ozs7O0dabTNFRzs7QVk1MkVIO0VBQ0U7VUFBQTtFQUF5QjtFQUN6QjtFQUFpQjtFQUNqQjtFQUFpQjtFQUNqQjtFQUFrQjtFQUNsQjtFQUFhO0VBQ2I7RUFBc0I7Q1pxM0V2Qjs7QVlsM0VEOzs7R1p1M0VHOztBWWwzRUg7RUFDRTtFQUF3QjtFQUN4QjtFQUEyQjtDWnUzRTVCOztBWXAzRUQ7O0dadzNFRzs7QVlwM0VIO0VBQ0U7Q1p1M0VEOztBWXAzRUQ7OztHWnkzRUc7O0FGN0RIOztFY3J6RUU7VUFBQTtFQUF5QjtFQUN6QjtFQUFhO0NaeTNFZDs7QVl0M0VEOztHWjAzRUc7O0FGOURIOztFY3R6RUU7Q1p5M0VEOztBWXQzRUQ7OztHWjIzRUc7O0FGL0RIO0VjdHpFRTtFQUFnQztFQUNoQztFQUF1QjtDWjIzRXhCOztBWXgzRUQ7O0daNDNFRzs7QUZoRUg7O0VjdHpFRTtDWjIzRUQ7O0FZeDNFRDs7O0daNjNFRzs7QVl4M0VIO0VBQ0U7RUFBNkI7RUFDN0I7RUFBZ0I7Q1o2M0VqQjs7QVkxM0VEO2dGWjYzRWdGOztBWTEzRWhGOzs7R1orM0VHOztBWTEzRUg7O0VBRUU7Q1o2M0VEOztBWTEzRUQ7O0daODNFRzs7QVkxM0VIO0VBQ0U7Q1o2M0VEOztBWTEzRUQ7Z0ZaNjNFZ0Y7O0FZMTNFaEY7O0daODNFRzs7QVkxM0VIO0VBQ0U7Q1o2M0VEOztBWTEzRUQ7O0daODNFRzs7QVkxM0VIO0VBQ0U7Q1o2M0VEOztBWTEzRUQ7Z0ZaNjNFZ0Y7O0FZMTNFaEY7O0daODNFRzs7QUZ6RUg7RWNoekVFO0NaNjNFRDs7QWExekZEOztnRmI4ekZnRjs7QWExekZoRjs7R2I4ekZHOztBYTF6Rkg7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQU9FO0VBQ0E7Q2J3MEZEOztBYXAwRkQ7O0didzBGRzs7QWFsMEZEOztFQUVFO0NicTBGSDs7QWEvekZEOztHYm0wRkc7O0FhL3pGSDtFQUNFO0VBQ0E7Q2JrMEZEOztBYTl6RkQ7OztHYm0wRkc7O0FhOXpGSDtFQUNFO0VBQWU7RUFDZjtDYmswRkQ7O0FjcjNGRDs7Z0ZkeTNGZ0Y7O0FjcjNGaEY7O0dkeTNGRzs7QWNyM0ZIOzs7R2QwM0ZHOztBY3IzRkg7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBUUU7Q2RpNEZEOztBYzczRkQ7O0dkaTRGRzs7QWM3M0ZIOzs7RUFDRTtDZGs0RkQ7O0FjLzNGRDs7QUNuQ0E7O2dGZnc2RmdGOztBZXA2RmhGOzs7Ozs7Ozs7O0dmZzdGRzs7QWVwNkZIO0VBQ0U7RUFBbUQ7RUFDbkQ7RUFBa0U7RUFDbEU7RUFBcUI7RUFDckI7RUFBbUI7Q2YyNkZwQjs7QWdCLzdGRDs7NkJoQm04RjZCOztBZ0IvN0Y3Qjs7RUFDRTtDaEJtOEZEOztBZ0JoOEZEO0VBQ0U7RUFDQTtDaEJtOEZEOztBZ0I1N0ZEO0VBRUk7RUFDQTtDaEI4N0ZIOztBaUJsdkZPO0VEeE1KO0lBQ0U7R2hCODdGSDtDQUNGOztBaUJ4dkZPO0VEL01SO0lBY007R2hCODdGSDtDQUNGOztBaUI5dkZPO0VEL01SO0lBb0JNO0doQjg3Rkg7Q0FDRjs7QWtCcCtGRDs7Z0ZsQncrRmdGOztBa0JwK0ZoRjs7Ozs7O0dsQjQrRkc7O0FrQnArRkg7RUFDRTtFQUFrQjtFQUNsQjtFQUFxQjtFQUNyQjtFQUF5QjtDbEIwK0YxQjs7QWtCdCtGRDs7O0dsQjIrRkc7O0FrQnQrRkg7O0VBQ2U7RUFDYjtDbEIwK0ZEOztBbUJwZ0dEOztnRm5Cd2dHZ0Y7O0FtQnBnR2hGOztHbkJ3Z0dHOztBbUJwZ0dIO0VBQ0U7RUFBYztDbkJ3Z0dmOztBb0JqaEdEOzs2QnBCcWhHNkI7O0FvQmpoRzdCO0VBQ0U7RUFDQTtDcEJvaEdEOztBb0J0aEdEO0VBS0k7Q3BCcWhHSDs7QXFCOWhHRDs7Z0ZyQmtpR2dGOztBcUI5aEdoRjs7R3JCa2lHRzs7QXFCNWhHSDs7QUFJQTs7QUFFQTtFQUVFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q3JCNGhHRDs7QXNCdGlHQztFQUNFO0VBQ0E7RUFDQTtDdEJ5aUdIOztBcUIzaEdEO2dGckI4aEdnRjs7QXFCM2hHaEY7RUFDRTtFQUNBO0NyQjhoR0Q7O0FxQjNoR0Q7RUFDRTtFQUNBO0NyQjhoR0Q7O0FxQjNoR0Q7RUFDRTtFQUNBO0NyQjhoR0Q7O0FxQjNoR0Q7RUFDRTtFQUNBO0NyQjhoR0Q7O0F1Qi9rR0Q7OzZCdkJtbEc2Qjs7QXVCL2tHN0I7RUFDRTtFQUNBO0VBQ0E7Q3ZCa2xHRDs7QWlCejNGTztFTXROUjtJQUVJO0lBQ0E7R3ZCa2xHRDtDQUNGOztBaUJoNEZPO0VNL01SO0lBRUk7SUFDQTtHdkJrbEdEO0NBQ0Y7O0FpQnY0Rk87RU0vTVI7SUFPSTtJQUNBO0d2Qm9sR0Q7Q0FDRjs7QWlCOTRGTztFTW5NUjtJQUVJO0lBQ0E7R3ZCb2xHRDtDQUNGOztBd0JybkdEOztnRnhCeW5HZ0Y7O0F3QnJuR2hGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0d4QnFxR0c7O0F3QjVtR0g7Z0Z4QittR2dGOztBd0I1bUdoRjs7Ozs7R3hCbW5HRzs7QXdCNW1HSDtFQUNFO0VBQWlCO0VBQ2pCO0VBQWE7RUFDYjtFQUFhO0VBQ2I7RUFBbUI7RUFDbkI7RUFBMEM7RUFHeEM7Q3hCa25HSDs7QXdCNW1HQzs7Ozs7Ozs7OztLeEJ3bkdHOztBd0I1bUdIO0VBQ0U7VUFBQTtFQUF5QjtFQUN6QjtFQUF3QjtFQUN4QjtFQUFzQjtFQUN0QjtFQUFjO0VBQ2Q7RUFBMEM7RUFHeEM7RUFBb0M7RUFDcEM7Q3hCbW5HTDs7QXdCMW1HRDtnRnhCNm1HZ0Y7O0F3QjFtR2hGO0VBQ0U7Q3hCNm1HRDs7QXdCOW1HRDtFQUlJO0N4QjhtR0g7O0F3QnhtR0Q7RUFDRTtDeEIybUdEOztBd0I1bUdEO0VBSUk7Q3hCNG1HSDs7QXdCdG1HRDtFQUNFO0N4QnltR0Q7O0F3QjFtR0Q7RUFJSTtDeEIwbUdIOztBd0JwbUdEO0VBQ0U7Q3hCdW1HRDs7QXdCeG1HRDtFQUlJO0N4QndtR0g7O0F3QmxtR0Q7RUFDRTtDeEJxbUdEOztBd0J0bUdEO0VBSUk7Q3hCc21HSDs7QXdCOWxHRDtnRnhCaW1HZ0Y7O0F3QjlsR2hGOztHeEJrbUdHOztBd0I5bEdIO0VBR0k7Q3hCK2xHSDs7QXdCemxHRDs7R3hCNmxHRzs7QXdCemxHSDtFQUdJO0N4QjBsR0g7O0F3QnBsR0Q7Ozs7R3hCMGxHRzs7QXdCcGxHSDtFQUNFO0VBQUE7RUFBQTtFQUNBO01BQUE7Q3hCdWxHRDs7QXdCemxHRDtFQUtJO0VBQUE7RUFBQTtDeEJ3bEdIOztBd0Iva0dEO2dGeEJrbEdnRjs7QXdCL2tHaEY7O0d4Qm1sR0c7O0F3Qi9rR0g7RUFDRTtDeEJrbEdEOztBd0JobEdHO0VBQ0E7Q3hCbWxHSDs7QXdCN2tHRDs7R3hCaWxHRzs7QXdCN2tHSDtFQUNFO0N4QmdsR0Q7O0F3QmpsR0Q7RUFJSTtDeEJpbEdIOztBd0Iza0dEOzs7R3hCZ2xHRzs7QXdCM2tHSDtFQUNFO0N4QjhrR0Q7O0F3Qi9rR0Q7RUFJSTtDeEIra0dIOztBd0J6a0dEOztHeEI2a0dHOztBd0J6a0dIO0VBQ0U7Q3hCNGtHRDs7QXdCN2tHRDtFQUlJO0N4QjZrR0g7O0F3QnBrR0Q7Z0Z4QnVrR2dGOztBd0Jwa0doRjs7R3hCd2tHRzs7QXdCbGtHQztFQUNBO0N4QnFrR0g7O0F5QnoyR0Q7OzZCekI2Mkc2Qjs7QXlCejJHN0I7RUFDRTtFQUNBO0VBQUE7RUFBQTtFQUNBO01BQUE7Q3pCNDJHRDs7QXlCeDJHQztFQUNFO0VBQUE7RUFBQTtDekIyMkdIOztBeUJ2MkdEO0VBRUk7TUFBQTtVQUFBO0N6QnkyR0g7O0F5QnAyR0M7RUFDRTtNQUFBO1VBQUE7Q3pCdTJHSDs7QXlCbDJHQztFQUNFO01BQUE7VUFBQTtDekJxMkdIOztBeUJoMkdDO0VBQ0U7TUFBQTtVQUFBO0N6Qm0yR0g7O0EwQnY0R0Q7O2dGMUIyNEdnRjs7QTBCdjRHaEY7OztHMUI0NEdHOztBMEJ2NEdIO0VBRUU7QzFCeTRHRDs7QTBCMzRHRDtFSklJO0VBQ0E7RUFDQTtDdEIyNEdIOztBMEIzNEdDO0VBQ0U7RUFDQTtDMUI4NEdIOztBMEJoNUdDO0VBS0k7QzFCKzRHTDs7QTBCejRHQztFQUNFO0VBQ0E7QzFCNDRHSDs7QTBCOTRHQzs7RUFNSTtDMUI2NEdMOztBMEJwNEdEO2dGMUJ1NEdnRjs7QTBCcDRHaEY7OztHMUJ5NEdHOztBMEJuNEdIOytFMUJzNEcrRTs7QTBCajRHM0U7RUFDQTtFQUNBO0MxQm80R0g7O0EwQjkzR0Q7RUFHSTtDMUIrM0dIOztBMEIxM0dLO0VBQ0E7RUFDQTtDMUI2M0dMOztBMEJuM0dHO0VBQ0E7QzFCczNHSDs7QTBCajNHSztFQUNBO0VBQ0E7QzFCbzNHTDs7QTBCMTJHRztFQUNBO0MxQjYyR0g7O0EwQngyR0s7RUFDQTtFQUNBO0MxQjIyR0w7O0EwQm4yR0Q7RUFHSTtDMUJvMkdIOztBMEIvMUdLO0VBQ0E7RUFDQTtDMUJrMkdMOztBMEJ6MUdEO2dGMUI0MUdnRjs7QTBCdjFHNUU7RUFDQTtFQUNBO0VBQ0E7QzFCMDFHSDs7QTJCMStHRDs7Z0YzQjgrR2dGOztBMkIxK0doRjs7Ozs7Ozs7Ozs7RzNCdS9HRzs7QTJCMStHSDtFQUNFO0VBQWlCO0VBQ2pCO0VBQWM7RUFDZDtFQUFvQjtDM0JnL0dyQjs7QTJCNStHQzs7OztLM0JrL0dHOztBMkI1K0dIOztFQUVFO0VBQ0E7RUFBeUI7QzNCZy9HNUI7O0EyQjUrR0M7Ozs7O0szQm0vR0c7O0EyQjUrR0g7RUFDRTtFQUFhO0VBQ2I7RUFHQTs7TzNCKytHRztDQUNOOztBMkJyL0dDO0VBVUk7RUFBa0I7QzNCZy9HdkI7O0EyQjErR0M7Ozs7SzNCZy9HRzs7QTJCMStHSDtFQUNFO0VBQWM7QzNCOCtHakI7O0EyQi8rR0M7O0VBS0k7QzNCKytHTDs7QTJCdCtHRDtnRjNCeStHZ0Y7O0EyQnQrR2hGO0VBR0k7RUFDQTtDM0J1K0dIOztBMkJqK0dEO0VBR0k7QzNCaytHSDs7QTJCcitHRDtFQVNNO0VBQ0E7QzNCZytHTDs7QTJCdDlHRztFQUNBO0MzQnk5R0g7O0EyQjU5R0Q7RUFTTTtFQUNBO0MzQnU5R0w7O0EyQjc4R0c7RUFDQTtDM0JnOUdIOztBMkIzOEdLO0VBQ0E7RUFDQTtDM0I4OEdMOztBMkJ0OEdEO0VBR0k7QzNCdThHSDs7QTJCMThHRDtFQVNNO0VBQ0E7QzNCcThHTDs7QTJCMzdHRDtnRjNCODdHZ0Y7O0EyQjM3R2hGOzs7O0czQmk4R0c7O0EyQjM3R0g7RUFDRTtFQUFpQjtDM0IrN0dsQjs7QTJCaDhHRDs7RUFLSTtFQUFpQjtDM0JpOEdwQjs7QTJCdDhHRDtFQVNJO0VBQW1CO0VBQ25CO0VBQTBDO0MzQm04RzdDOztBMkIxN0dEO2dGM0I2N0dnRjs7QTJCMTdHaEY7O0czQjg3R0c7O0EyQjE3R0g7O0VBSUk7QzNCMjdHSDs7QTJCbjdHRzs7RUFFQTtDM0JzN0dIOztBNEI5b0hEOztnRjVCa3BIZ0Y7O0E0QjlvSGhGOzs7Ozs7RzVCc3BIRzs7QTRCOW9ISDtFQUNFO0VBQ0E7QzVCaXBIRDs7QTRCN29IQztFQUNFO0M1QmdwSEg7O0E2Qm5xSEQ7O2dGN0J1cUhnRjs7QTZCbnFIaEY7O0c3QnVxSEc7O0E2Qm5xSEg7RUFDRTtFQUNBO0M3QnNxSEQ7O0E2QmxxSEM7RUFDRTtDN0JxcUhIOztBOEJwckhEOztnRjlCd3JIZ0Y7O0E4QnBySGhGOzs7RzlCeXJIRzs7QThCcHJISDtFQUNFO0VBQ0E7QzlCdXJIRDs7QThCbnJIQztFQUNFO0VBR0E7Z0Y5Qm9ySDRFO0NBQy9FOztBOEJsckhHO0VBQ0U7QzlCcXJITDs7QThCbHJIRztFQUNFO0M5QnFySEw7O0E4QmxySHFCO0VBQ2hCO0M5QnFySEw7O0E4QmxySHFCO0VBQ2hCO0M5QnFySEw7O0E4QmxySG9CO0VBQ2Y7QzlCcXJITDs7QThCL3FIQztFQUNFO0M5QmtySEg7O0E4QjNxSEQ7Z0Y5QjhxSGdGOztBOEIzcUhoRjtFQUNFO0M5QjhxSEQ7O0E4QjNxSEQ7RUFDRTtDOUI4cUhEOztBK0IzdUhEOzs2Qi9CK3VINkI7O0FnQy91SDdCOzs2QmhDbXZINkI7O0FnQzd1SDNCO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFBQTtFQUNBO0NoQ2d2SEg7O0FpQmppSE87RWUxTk47SUFjSTtHaENrdkhIO0NBQ0Y7O0FpQnZpSE87RWUxTk47SUFrQkk7SUFDQTtHaENvdkhIO0NBQ0Y7O0FnQ2x2SEc7RUFDRTtDaENxdkhMOztBZ0NsdkhXOztFQUVOO0NoQ3F2SEw7O0FnQ2p2SEc7O0VBRUU7RUFDQTtFQUFBO0NoQ292SEw7O0FnQ2p2SEc7RUFDRTtFQUNBO0VBQ0E7RUN2Qko7RUFDQTtFQUdFO0NqQzB3SEg7O0FnQ252SEc7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO1VBQUE7RUNoQ0o7RUFDQTtFQUdFO0NqQ3F4SEg7O0FrQ2p6SEQ7O2dGbENxekhnRjs7QWtDanpIaEY7O0dsQ3F6SEc7O0FzQjd5SEQ7RUFDRTtFQUNBO0VBQ0E7Q3RCZ3pISDs7QW1DL3pIRDs7Z0ZuQ20wSGdGOztBbUMvekhoRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHbkMwMUhHOztBbUN6dEhIOzs7Ozs7Ozs7R25Db3VIRzs7QW1DdndIRztFQUNFO0NuQzB3SFA7O0FtQzN3SEs7RUFDRTtDbkM4d0hQOztBbUMvd0hLO0VBQ0U7Q25Da3hIUDs7QW1DbnhISztFQUNFO0NuQ3N4SFA7O0FtQ3Z4SEs7RUFDRTtDbkMweEhQOztBbUMzeEhLO0VBQ0U7Q25DOHhIUDs7QW1DL3hISztFQUNFO0NuQ2t5SFA7O0FtQ255SEs7RUFDRTtDbkNzeUhQOztBbUN2eUhLO0VBQ0U7Q25DMHlIUDs7QW1DM3lISztFQUNFO0NuQzh5SFA7O0FtQy95SEs7RUFDRTtDbkNrekhQOztBbUNuekhLO0VBQ0U7Q25Dc3pIUDs7QW1DdnpISztFQUNFO0NuQzB6SFA7O0FtQzN6SEs7RUFDRTtDbkM4ekhQOztBbUMvekhLO0VBQ0U7Q25DazBIUDs7QW1DaHhIRDs7Ozs7R25DdXhIRzs7QWlCNXNISztFa0I5SEY7SUFDRTtHbkM4MEhMOztFbUMvMEhHO0lBQ0U7R25DazFITDs7RW1DbjFIRztJQUNFO0duQ3MxSEw7O0VtQ3YxSEc7SUFDRTtHbkMwMUhMOztFbUMzMUhHO0lBQ0U7R25DODFITDs7RW1DLzFIRztJQUNFO0duQ2sySEw7O0VtQ24ySEc7SUFDRTtHbkNzMkhMOztFbUN2MkhHO0lBQ0U7R25DMDJITDs7RW1DMzJIRztJQUNFO0duQzgySEw7O0VtQy8ySEc7SUFDRTtHbkNrM0hMOztFbUNuM0hHO0lBQ0U7R25DczNITDs7RW1DdjNIRztJQUNFO0duQzAzSEw7O0VtQzMzSEc7SUFDRTtHbkM4M0hMOztFbUMvM0hHO0lBQ0U7R25DazRITDs7RW1DbjRIRztJQUNFO0duQ3M0SEw7Q0FDRjs7QWlCMXdITztFa0I5SEY7SUFDRTtHbkM0NEhMOztFbUM3NEhHO0lBQ0U7R25DZzVITDs7RW1DajVIRztJQUNFO0duQ281SEw7O0VtQ3I1SEc7SUFDRTtHbkN3NUhMOztFbUN6NUhHO0lBQ0U7R25DNDVITDs7RW1DNzVIRztJQUNFO0duQ2c2SEw7O0VtQ2o2SEc7SUFDRTtHbkNvNkhMOztFbUNyNkhHO0lBQ0U7R25DdzZITDs7RW1DejZIRztJQUNFO0duQzQ2SEw7O0VtQzc2SEc7SUFDRTtHbkNnN0hMOztFbUNqN0hHO0lBQ0U7R25DbzdITDs7RW1DcjdIRztJQUNFO0duQ3c3SEw7O0VtQ3o3SEc7SUFDRTtHbkM0N0hMOztFbUM3N0hHO0lBQ0U7R25DZzhITDs7RW1DajhIRztJQUNFO0duQ284SEw7Q0FDRjs7QWlCeDBITztFa0I5SEY7SUFDRTtHbkMwOEhMOztFbUMzOEhHO0lBQ0U7R25DODhITDs7RW1DLzhIRztJQUNFO0duQ2s5SEw7O0VtQ245SEc7SUFDRTtHbkNzOUhMOztFbUN2OUhHO0lBQ0U7R25DMDlITDs7RW1DMzlIRztJQUNFO0duQzg5SEw7O0VtQy85SEc7SUFDRTtHbkNrK0hMOztFbUNuK0hHO0lBQ0U7R25DcytITDs7RW1DditIRztJQUNFO0duQzArSEw7O0VtQzMrSEc7SUFDRTtHbkM4K0hMOztFbUMvK0hHO0lBQ0U7R25Day9ITDs7RW1Dbi9IRztJQUNFO0duQ3MvSEw7O0VtQ3YvSEc7SUFDRTtHbkMwL0hMOztFbUMzL0hHO0lBQ0U7R25DOC9ITDs7RW1DLy9IRztJQUNFO0duQ2tnSUw7Q0FDRjs7QWlCdDRITztFa0I5SEY7SUFDRTtHbkN3Z0lMOztFbUN6Z0lHO0lBQ0U7R25DNGdJTDs7RW1DN2dJRztJQUNFO0duQ2doSUw7O0VtQ2poSUc7SUFDRTtHbkNvaElMOztFbUNyaElHO0lBQ0U7R25Dd2hJTDs7RW1DemhJRztJQUNFO0duQzRoSUw7O0VtQzdoSUc7SUFDRTtHbkNnaUlMOztFbUNqaUlHO0lBQ0U7R25Db2lJTDs7RW1DcmlJRztJQUNFO0duQ3dpSUw7O0VtQ3ppSUc7SUFDRTtHbkM0aUlMOztFbUM3aUlHO0lBQ0U7R25DZ2pJTDs7RW1DampJRztJQUNFO0duQ29qSUw7O0VtQ3JqSUc7SUFDRTtHbkN3aklMOztFbUN6aklHO0lBQ0U7R25DNGpJTDs7RW1DN2pJRztJQUNFO0duQ2drSUw7Q0FDRjs7QWlCcDhITztFa0I5SEY7SUFDRTtHbkNza0lMOztFbUN2a0lHO0lBQ0U7R25DMGtJTDs7RW1DM2tJRztJQUNFO0duQzhrSUw7O0VtQy9rSUc7SUFDRTtHbkNrbElMOztFbUNubElHO0lBQ0U7R25Dc2xJTDs7RW1DdmxJRztJQUNFO0duQzBsSUw7O0VtQzNsSUc7SUFDRTtHbkM4bElMOztFbUMvbElHO0lBQ0U7R25Da21JTDs7RW1Dbm1JRztJQUNFO0duQ3NtSUw7O0VtQ3ZtSUc7SUFDRTtHbkMwbUlMOztFbUMzbUlHO0lBQ0U7R25DOG1JTDs7RW1DL21JRztJQUNFO0duQ2tuSUw7O0VtQ25uSUc7SUFDRTtHbkNzbklMOztFbUN2bklHO0lBQ0U7R25DMG5JTDs7RW1DM25JRztJQUNFO0duQzhuSUw7Q0FDRjs7QW9DbHVJRDs7Z0ZwQ3N1SWdGOztBb0NsdUloRjs7Ozs7Ozs7Ozs7R3BDK3VJRzs7QW9DbHVJSDs7QUFnQ007RUFHSTtDcENxc0lUOztBb0N4c0lLO0VBR0k7Q3BDeXNJVDs7QW9DNXNJSztFQUdJO0NwQzZzSVQ7O0FvQ2h0SUs7RUFHSTtDcENpdElUOztBb0NwdElLO0VBR0k7Q3BDcXRJVDs7QW9DeHRJSztFQUdJO0NwQ3l0SVQ7O0FvQzV0SUs7RUFHSTtDcEM2dElUOztBb0NodUlLO0VBR0k7Q3BDaXVJVDs7QW9DcHVJSztFQUdJO0NwQ3F1SVQ7O0FvQ3h1SUs7RUFHSTtDcEN5dUlUOztBb0M1dUlLO0VBR0k7Q3BDNnVJVDs7QW9DaHZJSztFQUdJO0NwQ2l2SVQ7O0FvQ3B2SUs7RUFHSTtDcENxdklUOztBb0N4dklLO0VBR0k7Q3BDeXZJVDs7QW9DNXZJSztFQUdJO0NwQzZ2SVQ7O0FvQ2h3SUs7RUFHSTtDcENpd0lUOztBb0Nwd0lLO0VBR0k7Q3BDcXdJVDs7QW9DeHdJSztFQUdJO0NwQ3l3SVQ7O0FvQzV3SUs7RUFHSTtDcEM2d0lUOztBb0NoeElLO0VBR0k7Q3BDaXhJVDs7QW9DcHhJSztFQUdJO0NwQ3F4SVQ7O0FvQ3h4SUs7RUFHSTtDcEN5eElUOztBb0M1eElLO0VBR0k7Q3BDNnhJVDs7QW9DaHlJSztFQUdJO0NwQ2l5SVQ7O0FvQ3B5SUs7RUFHSTtDcENxeUlUOztBb0N4eUlLO0VBR0k7Q3BDeXlJVDs7QW9DNXlJSztFQUdJO0NwQzZ5SVQ7O0FvQ2h6SUs7RUFHSTtDcENpeklUOztBb0NweklLO0VBR0k7Q3BDcXpJVDs7QW9DeHpJSztFQUdJO0NwQ3l6SVQ7O0FvQzV6SUs7RUFHSTtFQUFBO0NwQzh6SVQ7O0FvQ2owSUs7RUFHSTtFQUFBO0NwQ20wSVQ7O0FvQ3QwSUs7RUFHSTtFQUFBO0NwQ3cwSVQ7O0FvQzMwSUs7RUFHSTtFQUFBO0NwQzYwSVQ7O0FvQ2gxSUs7RUFHSTtFQUFBO0NwQ2sxSVQ7O0FvQ3IxSUs7RUFHSTtFQUFBO0NwQ3UxSVQ7O0FvQzExSUs7RUFHSTtFQUFBO0NwQzQxSVQ7O0FvQy8xSUs7RUFHSTtFQUFBO0NwQ2kySVQ7O0FvQ3AySUs7RUFHSTtFQUFBO0NwQ3MySVQ7O0FvQ3oySUs7RUFHSTtFQUFBO0NwQzIySVQ7O0FvQzkySUs7RUFHSTtFQUFBO0NwQ2czSVQ7O0FvQ24zSUs7RUFHSTtFQUFBO0NwQ3EzSVQ7O0FvQ3gzSUs7RUFHSTtDcEN5M0lUOztBb0M1M0lLO0VBR0k7Q3BDNjNJVDs7QW9DaDRJSztFQUdJO0NwQ2k0SVQ7O0FvQ3A0SUs7RUFHSTtDcENxNElUOztBb0N4NElLO0VBR0k7Q3BDeTRJVDs7QW9DNTRJSztFQUdJO0NwQzY0SVQ7O0FvQ2g1SUs7RUFHSTtDcENpNUlUOztBb0NwNUlLO0VBR0k7Q3BDcTVJVDs7QW9DeDVJSztFQUdJO0NwQ3k1SVQ7O0FvQzU1SUs7RUFHSTtDcEM2NUlUOztBb0NoNklLO0VBR0k7Q3BDaTZJVDs7QW9DcDZJSztFQUdJO0NwQ3E2SVQ7O0FvQ3g2SUs7RUFHSTtDcEN5NklUOztBb0M1NklLO0VBR0k7Q3BDNjZJVDs7QW9DaDdJSztFQUdJO0NwQ2k3SVQ7O0FvQ3A3SUs7RUFHSTtDcENxN0lUOztBb0N4N0lLO0VBR0k7Q3BDeTdJVDs7QW9DNTdJSztFQUdJO0NwQzY3SVQ7O0FvQ2g4SUs7RUFHSTtDcENpOElUOztBb0NwOElLO0VBR0k7Q3BDcThJVDs7QW9DeDhJSztFQUdJO0NwQ3k4SVQ7O0FvQzU4SUs7RUFHSTtDcEM2OElUOztBb0NoOUlLO0VBR0k7Q3BDaTlJVDs7QW9DcDlJSztFQUdJO0NwQ3E5SVQ7O0FvQ3g5SUs7RUFHSTtDcEN5OUlUOztBb0M1OUlLO0VBR0k7Q3BDNjlJVDs7QW9DaCtJSztFQUdJO0NwQ2krSVQ7O0FvQ3ArSUs7RUFHSTtDcENxK0lUOztBb0N4K0lLO0VBR0k7Q3BDeStJVDs7QW9DNStJSztFQUdJO0NwQzYrSVQ7O0FvQ2gvSUs7RUFHSTtFQUFBO0NwQ2svSVQ7O0FvQ3IvSUs7RUFHSTtFQUFBO0NwQ3UvSVQ7O0FvQzEvSUs7RUFHSTtFQUFBO0NwQzQvSVQ7O0FvQy8vSUs7RUFHSTtFQUFBO0NwQ2lnSlQ7O0FvQ3BnSks7RUFHSTtFQUFBO0NwQ3NnSlQ7O0FvQ3pnSks7RUFHSTtFQUFBO0NwQzJnSlQ7O0FvQzlnSks7RUFHSTtFQUFBO0NwQ2doSlQ7O0FvQ25oSks7RUFHSTtFQUFBO0NwQ3FoSlQ7O0FvQ3hoSks7RUFHSTtFQUFBO0NwQzBoSlQ7O0FvQzdoSks7RUFHSTtFQUFBO0NwQytoSlQ7O0FvQ2xpSks7RUFHSTtFQUFBO0NwQ29pSlQ7O0FvQ3ZpSks7RUFHSTtFQUFBO0NwQ3lpSlQ7O0FvQzloSkQ7O0FDL0RBOztnRnJDbW1KZ0Y7O0FxQy9sSmhGOzs7Ozs7Ozs7OztHckM0bUpHOztBcUNsa0pIOztBcEJrTFE7RW9CdEtFO0lBR0k7R3JDMGpKWDtDQUNGOztBaUJ4NUlPO0VvQnRLRTtJQUdJO0dyQ2drSlg7Q0FDRjs7QWlCOTVJTztFb0J0S0U7SUFHSTtHckNza0pYO0NBQ0Y7O0FpQnA2SU87RW9CdEtFO0lBR0k7R3JDNGtKWDtDQUNGOztBaUIxNklPO0VvQnRLRTtJQUdJO0dyQ2tsSlg7Q0FDRjs7QXFDcGtKRDs7QUM1RUE7O2dGdENzcEpnRjs7QXNDbHBKaEY7Ozs7R3RDd3BKRzs7QXNDbHBKSDtFQUVFOztLdENxcEpHOztFc0NqcEpIOzs7OztJQUtFO0lBQ0E7SUFBeUI7SUFDekI7WUFBQTtJQUNBO0d0Q3FwSkQ7O0VzQ2pwSkQ7O0lBRUU7R3RDb3BKRDs7RXNDanBKRDtJQUNFO0d0Q29wSkQ7O0VzQ2pwSkQ7SUFDRTtHdENvcEpEOztFc0NocEpEOzs7S3RDcXBKRzs7RXNDaHBKSDs7SUFFRTtHdENtcEpEOztFc0NocEpEOztJQUVFO0lBQ0E7R3RDbXBKRDs7RXNDL29KRDs7S3RDbXBKRzs7RXNDL29KSDtJQUNFO0d0Q2twSkQ7O0VzQy9vSkQ7O0lBRUU7R3RDa3BKRDs7RXNDOW9KRDtJQUNFO0d0Q2lwSkQ7O0VzQzlvSkQ7OztJQUdFO0lBQ0E7R3RDaXBKRDs7RXNDOW9KRDs7SUFFRTtHdENpcEpEO0NBQ0Y7O0F1Q3h1SkQ7O2dGdkM0dUpnRjs7QXVDeHVKaEY7OztHdkM2dUpHOztBdUN4dUpIO0VDSEU7RUFDQTtFQUNBO1VBQUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDeEMrdUpEOztBdUNodkpEOztHdkNvdkpHOztBdUNodkpIO0VBQ0U7Q3ZDbXZKRDs7QXlDdHdKRDs7NkJ6QzB3SjZCOztBaUIxaUpyQjtFd0J6TkY7SUFDRTtHekN1d0pMOztFeUNyd0pHO0lBQ0U7R3pDd3dKTDs7RXlDcndKRztJQUNFO0d6Q3d3Skw7O0V5Q3J3Skc7SUFDRTtHekN3d0pMOztFeUNyd0pHO0lBQ0U7R3pDd3dKTDtDQUNGOztBaUJoa0pPO0V3QnpORjtJQUNFO0d6QzZ4Skw7O0V5QzN4Skc7SUFDRTtHekM4eEpMOztFeUMzeEpHO0lBQ0U7R3pDOHhKTDs7RXlDM3hKRztJQUNFO0d6Qzh4Skw7O0V5QzN4Skc7SUFDRTtHekM4eEpMO0NBQ0Y7O0FpQnRsSk87RXdCek5GO0lBQ0U7R3pDbXpKTDs7RXlDanpKRztJQUNFO0d6Q296Skw7O0V5Q2p6Skc7SUFDRTtHekNvekpMOztFeUNqekpHO0lBQ0U7R3pDb3pKTDs7RXlDanpKRztJQUNFO0d6Q296Skw7Q0FDRjs7QWlCNW1KTztFd0J6TkY7SUFDRTtHekN5MEpMOztFeUN2MEpHO0lBQ0U7R3pDMDBKTDs7RXlDdjBKRztJQUNFO0d6QzAwSkw7O0V5Q3YwSkc7SUFDRTtHekMwMEpMOztFeUN2MEpHO0lBQ0U7R3pDMDBKTDtDQUNGOztBaUJsb0pPO0V3QnpORjtJQUNFO0d6QysxSkw7O0V5QzcxSkc7SUFDRTtHekNnMkpMOztFeUM3MUpHO0lBQ0U7R3pDZzJKTDs7RXlDNzFKRztJQUNFO0d6Q2cySkw7O0V5QzcxSkc7SUFDRTtHekNnMkpMO0NBQ0Y7O0EwQ3gzSkQ7OzZCMUM0M0o2Qjs7QTBDeDNKN0I7RUFDRTtDMUMyM0pEOztBMEN4M0pEO0VBQ0U7QzFDMjNKRDs7QTBDeDNKRDtFQUNFO0MxQzIzSkQ7O0EwQ3gzSkQ7RUFDRTtDMUMyM0pEOztBMEN4M0pEO0VBQ0U7QzFDMjNKRDs7QTJDaDVKRDs7NkIzQ281SjZCOztBMkNqNUo3QjtFQUNFO0VBQUE7RUFBQTtDM0NvNUpEOztBMkNqNUpEO0VBQ0U7TUFBQTtVQUFBO0VBQ0E7TUFBQTtVQUFBO0MzQ281SkQ7O0EyQ2o1SkQ7RUFDRTtNQUFBO1VBQUE7QzNDbzVKRDs7QTJDajVKRDtFQUNFO01BQUE7VUFBQTtFQUNBO01BQUE7VUFBQTtDM0NvNUpEOztBMkNqNUpEO0VBQ0U7TUFBQTtVQUFBO0MzQ281SkQ7O0E0QzE2SkQ7OzZCNUM4Nko2QiIsImZpbGUiOiIvc3R5bGVzL21haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFNldHRpbmdzL0NvbG9yc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBTZXR0aW5nL1RyYW5zaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFNldHRpbmdzL01lYXN1cmVtZW50c1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBUaGUgQmxhY2sgVGllIEZvbnQgaXMgY29tbWVyY2lhbCBzb2Z0d2FyZS4gUGxlYXNlIGRvIG5vdCBkaXN0cmlidXRlLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0JsYWNrIFRpZSc7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9zb2xpZC9CbGFja1RpZS1Tb2xpZC13ZWJmb250LmVvdD92PTEuMC4wXCIpO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvc29saWQvQmxhY2tUaWUtU29saWQtd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjBcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvc29saWQvQmxhY2tUaWUtU29saWQtd2ViZm9udC53b2ZmMj92PTEuMC4wXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL3NvbGlkL0JsYWNrVGllLVNvbGlkLXdlYmZvbnQud29mZj92PTEuMC4wXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvc29saWQvQmxhY2tUaWUtU29saWQtd2ViZm9udC50dGY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9zb2xpZC9CbGFja1RpZS1Tb2xpZC13ZWJmb250LnN2Zz92PTEuMC4wI2JsYWNrX3RpZXNvbGlkXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCbGFjayBUaWUnO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYm9sZC9CbGFja1RpZS1Cb2xkLXdlYmZvbnQuZW90P3Y9MS4wLjBcIik7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9ib2xkL0JsYWNrVGllLUJvbGQtd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjBcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYm9sZC9CbGFja1RpZS1Cb2xkLXdlYmZvbnQud29mZjI/dj0xLjAuMFwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9ib2xkL0JsYWNrVGllLUJvbGQtd2ViZm9udC53b2ZmP3Y9MS4wLjBcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9ib2xkL0JsYWNrVGllLUJvbGQtd2ViZm9udC50dGY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9ib2xkL0JsYWNrVGllLUJvbGQtd2ViZm9udC5zdmc/dj0xLjAuMCNibGFja190aWVib2xkXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCbGFjayBUaWUnO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvcmVndWxhci9CbGFja1RpZS1SZWd1bGFyLXdlYmZvbnQuZW90P3Y9MS4wLjBcIik7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjBcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvcmVndWxhci9CbGFja1RpZS1SZWd1bGFyLXdlYmZvbnQud29mZjI/dj0xLjAuMFwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC53b2ZmP3Y9MS4wLjBcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC50dGY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC5zdmc/dj0xLjAuMCNibGFja190aWVyZWd1bGFyXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCbGFjayBUaWUnO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvbGlnaHQvQmxhY2tUaWUtTGlnaHQtd2ViZm9udC5lb3Q/dj0xLjAuMFwiKTtcbiAgc3JjOiB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL2xpZ2h0L0JsYWNrVGllLUxpZ2h0LXdlYmZvbnQuZW90PyNpZWZpeCZ2PTEuMC4wXCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL2xpZ2h0L0JsYWNrVGllLUxpZ2h0LXdlYmZvbnQud29mZjI/dj0xLjAuMFwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9saWdodC9CbGFja1RpZS1MaWdodC13ZWJmb250LndvZmY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL2xpZ2h0L0JsYWNrVGllLUxpZ2h0LXdlYmZvbnQudHRmP3Y9MS4wLjBcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvbGlnaHQvQmxhY2tUaWUtTGlnaHQtd2ViZm9udC5zdmc/dj0xLjAuMCNibGFja190aWVsaWdodFwiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnRm9udCBBd2Vzb21lIEJyYW5kcyc7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9icmFuZHMvRm9udEF3ZXNvbWVCcmFuZHMtUmVndWxhci13ZWJmb250LmVvdD92PTEuMC4wXCIpO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYnJhbmRzL0ZvbnRBd2Vzb21lQnJhbmRzLVJlZ3VsYXItd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjBcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYnJhbmRzL0ZvbnRBd2Vzb21lQnJhbmRzLVJlZ3VsYXItd2ViZm9udC53b2ZmMj92PTEuMC4wXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL2JyYW5kcy9Gb250QXdlc29tZUJyYW5kcy1SZWd1bGFyLXdlYmZvbnQud29mZj92PTEuMC4wXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYnJhbmRzL0ZvbnRBd2Vzb21lQnJhbmRzLVJlZ3VsYXItd2ViZm9udC50dGY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9icmFuZHMvRm9udEF3ZXNvbWVCcmFuZHMtUmVndWxhci13ZWJmb250LnN2Zz92PTEuMC4wI2ZvbnRfYXdlc29tZV9icmFuZHNyZWd1bGFyXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4uYnRzLFxuLmJ0Yixcbi5idHIsXG4uYnRsLFxuLmZhYiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogbm9ybWFsIG5vcm1hbCBub3JtYWwgMTRweC8xIFwiQmxhY2sgVGllXCI7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IC0xNC4yODU3MTQyOSU7XG4gIHRleHQtcmVuZGVyaW5nOiBhdXRvO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG59XG5cbi5idHMge1xuICBmb250LXdlaWdodDogOTAwO1xufVxuXG4uYnRiIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bCB7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG59XG5cbi5mYWIge1xuICBmb250LWZhbWlseTogXCJGb250IEF3ZXNvbWUgQnJhbmRzXCI7XG59XG5cbi8qIG1ha2VzIHRoZSBmb250IDI1JSBzbWFsbGVyIHJlbGF0aXZlIHRvIHRoZSBpY29uIGNvbnRhaW5lciAqL1xuLmJ0LXNtIHtcbiAgZm9udC1zaXplOiAuN2VtO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qIG1ha2VzIHRoZSBmb250IDMzJSBsYXJnZXIgcmVsYXRpdmUgdG8gdGhlIGljb24gY29udGFpbmVyICovXG4uYnQtbGcge1xuICBmb250LXNpemU6IDEuMzMzMzMzMzNlbTtcbiAgbGluZS1oZWlnaHQ6IDAuNzVlbTtcbn1cblxuLmJ0LTJ4IHtcbiAgZm9udC1zaXplOiAyZW07XG59XG5cbi5idC0zeCB7XG4gIGZvbnQtc2l6ZTogM2VtO1xufVxuXG4uYnQtNHgge1xuICBmb250LXNpemU6IDRlbTtcbn1cblxuLmJ0LTV4IHtcbiAgZm9udC1zaXplOiA1ZW07XG59XG5cbi5idC1sZyxcbi5idC0yeCxcbi5idC0zeCxcbi5idC00eCxcbi5idC01eCB7XG4gIHZlcnRpY2FsLWFsaWduOiAtMzAlO1xufVxuXG4uYnQtZncge1xuICB3aWR0aDogMS4yODU3MTQyOWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5idC11bCB7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgbWFyZ2luLWxlZnQ6IDIuMTQyODU3MTRlbTtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuXG4uYnQtdWwgPiBsaSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmJ0LWxpIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtMi4xNDI4NTcxNGVtO1xuICB3aWR0aDogMi4xNDI4NTcxNGVtO1xuICB0b3A6IDAuMTQyODU3MTRlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYnQtbGkuYnQtbGcge1xuICBsZWZ0OiAtMmVtO1xufVxuXG4uYnQtYm9yZGVyIHtcbiAgcGFkZGluZzogLjJlbTtcbiAgYm9yZGVyOiBzb2xpZCAwLjA4ZW0gI2VlZWVlZTtcbiAgYm9yZGVyLXJhZGl1czogLjFlbTtcbn1cblxuLnB1bGwtcmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5wdWxsLWxlZnQge1xuICBmbG9hdDogbGVmdDtcbn1cblxuLmJ0cy5wdWxsLWxlZnQsXG4uYnRiLnB1bGwtbGVmdCxcbi5idHIucHVsbC1sZWZ0LFxuLmJ0bC5wdWxsLWxlZnQsXG4uZmFiLnB1bGwtbGVmdCB7XG4gIG1hcmdpbi1yaWdodDogLjNlbTtcbn1cblxuLmJ0cy5wdWxsLXJpZ2h0LFxuLmJ0Yi5wdWxsLXJpZ2h0LFxuLmJ0ci5wdWxsLXJpZ2h0LFxuLmJ0bC5wdWxsLXJpZ2h0LFxuLmZhYi5wdWxsLXJpZ2h0IHtcbiAgbWFyZ2luLWxlZnQ6IC4zZW07XG59XG5cbi5idC1zcGluIHtcbiAgLXdlYmtpdC1hbmltYXRpb246IGJ0LXNwaW4gMnMgaW5maW5pdGUgbGluZWFyO1xuICBhbmltYXRpb246IGJ0LXNwaW4gMnMgaW5maW5pdGUgbGluZWFyO1xufVxuXG4uYnQtcHVsc2Uge1xuICAtd2Via2l0LWFuaW1hdGlvbjogYnQtc3BpbiAxcyBpbmZpbml0ZSBzdGVwcyg4KTtcbiAgYW5pbWF0aW9uOiBidC1zcGluIDFzIGluZmluaXRlIHN0ZXBzKDgpO1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgYnQtc3BpbiB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzU5ZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgYnQtc3BpbiB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzU5ZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuICB9XG59XG5cbi5idC1yb3RhdGUtOTAge1xuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKHJvdGF0aW9uPTEpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xufVxuXG4uYnQtcm90YXRlLTE4MCB7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249Mik7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG59XG5cbi5idC1yb3RhdGUtMjcwIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0zKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpO1xuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMjcwZGVnKTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMjcwZGVnKTtcbn1cblxuLmJ0LWZsaXAtaG9yaXpvbnRhbCB7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249MCwgbWlycm9yPTEpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoLTEsIDEpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgtMSwgMSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoLTEsIDEpO1xufVxuXG4uYnQtZmxpcC12ZXJ0aWNhbCB7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249MiwgbWlycm9yPTEpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSwgLTEpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLCAtMSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSwgLTEpO1xufVxuXG46cm9vdCAuYnQtcm90YXRlLTkwLFxuOnJvb3QgLmJ0LXJvdGF0ZS0xODAsXG46cm9vdCAuYnQtcm90YXRlLTI3MCxcbjpyb290IC5idC1mbGlwLWhvcml6b250YWwsXG46cm9vdCAuYnQtZmxpcC12ZXJ0aWNhbCB7XG4gIGZpbHRlcjogbm9uZTtcbn1cblxuLmJ0LXN0YWNrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxLjI4NTcxNDI5ZW07XG4gIGhlaWdodDogMWVtO1xuICBsaW5lLWhlaWdodDogMWVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi5idC1zdGFjay1zbSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAuNWVtO1xufVxuXG4uYnQtc3RhY2stMXgsXG4uYnQtc3RhY2stc20ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5idC1pbnZlcnNlIHtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi8qIEJsYWNrIFRpZSB1c2VzIHRoZSBVbmljb2RlIFByaXZhdGUgVXNlIEFyZWEgKFBVQSkgdG8gZW5zdXJlIHNjcmVlblxuICAgcmVhZGVycyBkbyBub3QgcmVhZCBvZmYgcmFuZG9tIGNoYXJhY3RlcnMgdGhhdCByZXByZXNlbnQgaWNvbnMgKi9cbi5idC1iYXJzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDAwXCI7XG59XG5cbi5idC1lbnZlbG9wZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwMVwiO1xufVxuXG4uYnQtc2VhcmNoOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDAyXCI7XG59XG5cbi5idC1zZWFyY2gtcGx1czpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwM1wiO1xufVxuXG4uYnQtc2VhcmNoLW1pbnVzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDA0XCI7XG59XG5cbi5idC1waG9uZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwNVwiO1xufVxuXG4uYnQtY29tbWVudDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwN1wiO1xufVxuXG4uYnQtY29tbWVudGluZzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwOFwiO1xufVxuXG4uYnQtY29tbWVudHM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDlcIjtcbn1cblxuLmJ0LXJzczpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwYVwiO1xufVxuXG4uYnQtdGltZXM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMGNcIjtcbn1cblxuLmJ0LXRpbWVzLWNpcmNsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwZFwiO1xufVxuXG4uYnQtY2xvY2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMGVcIjtcbn1cblxuLmJ0LXN0YXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTBcIjtcbn1cblxuLmJ0LXN0YXItaGFsZjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxMVwiO1xufVxuXG4uYnQtY2hlY2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTJcIjtcbn1cblxuLmJ0LWNoZWNrLWNpcmNsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxM1wiO1xufVxuXG4uYnQtY2hlY2stc3F1YXJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDE0XCI7XG59XG5cbi5idC10aDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxNVwiO1xufVxuXG4uYnQtdGgtbGFyZ2U6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTZcIjtcbn1cblxuLmJ0LWhlYXJ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDE3XCI7XG59XG5cbi5idC1oZWFydC1oYWxmOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDE4XCI7XG59XG5cbi5idC1jYWxlbmRhcjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxOVwiO1xufVxuXG4uYnQtc2hvcHBpbmctY2FydDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxYVwiO1xufVxuXG4uYnQtcGx1czpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxYlwiO1xufVxuXG4uYnQtcGx1cy1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMWNcIjtcbn1cblxuLmJ0LXBsdXMtc3F1YXJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDFkXCI7XG59XG5cbi5idC1wZW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMWVcIjtcbn1cblxuLmJ0LW1pbnVzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDIxXCI7XG59XG5cbi5idC1taW51cy1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjJcIjtcbn1cblxuLmJ0LW1pbnVzLXNxdWFyZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyM1wiO1xufVxuXG4uYnQtcGVuY2lsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI0XCI7XG59XG5cbi5idC1lZGl0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI1XCI7XG59XG5cbi5idC10aHVtYnMtdXA6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjZcIjtcbn1cblxuLmJ0LXRodW1icy1kb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI3XCI7XG59XG5cbi5idC1nZWFyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI4XCI7XG59XG5cbi5idC10cmFzaDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyOVwiO1xufVxuXG4uYnQtZmlsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyYVwiO1xufVxuXG4uYnQtaW5mby1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmJcIjtcbn1cblxuLmJ0LWxhYmVsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJjXCI7XG59XG5cbi5idC1yb2NrZXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmRcIjtcbn1cblxuLmJ0LWJvb2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmVcIjtcbn1cblxuLmJ0LWJvb2stb3BlbjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyZlwiO1xufVxuXG4uYnQtbm90ZWJvb2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzBcIjtcbn1cblxuLmJ0LWNhbWVyYTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzMVwiO1xufVxuXG4uYnQtZm9sZGVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDMyXCI7XG59XG5cbi5idC1xdW90ZS1sZWZ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDM2XCI7XG59XG5cbi5idC1xdW90ZS1yaWdodDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzN1wiO1xufVxuXG4uYnQtZXllOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDM4XCI7XG59XG5cbi5idC1sb2NrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDM5XCI7XG59XG5cbi5idC1sb2NrLW9wZW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2FcIjtcbn1cblxuLmJ0LWdpZnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2JcIjtcbn1cblxuLmJ0LXNwaW5uZXItY2xvY2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2NcIjtcbn1cblxuLmJ0LXNwaW5uZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2RcIjtcbn1cblxuLmJ0LXdyZW5jaDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzZVwiO1xufVxuXG4uYnQtY2xvdWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDBcIjtcbn1cblxuLmJ0LWNsb3VkLXVwbG9hZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0MVwiO1xufVxuXG4uYnQtY2xvdWQtZG93bmxvYWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDJcIjtcbn1cblxuLmJ0LXN5bmM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDNcIjtcbn1cblxuLmJ0LXF1ZXN0aW9uLWNpcmNsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0NFwiO1xufVxuXG4uYnQtc2hhcmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDVcIjtcbn1cblxuLmJ0LWJyaWVmY2FzZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0NlwiO1xufVxuXG4uYnQtbW9uZXk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDdcIjtcbn1cblxuLmJ0LW1lZ2FwaG9uZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0OFwiO1xufVxuXG4uYnQtc2lnbi1pbjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0OVwiO1xufVxuXG4uYnQtc2lnbi1vdXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNGFcIjtcbn1cblxuLmJ0LWZpbG06YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNGJcIjtcbn1cblxuLmJ0LXRyb3BoeTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0Y1wiO1xufVxuXG4uYnQtY29kZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0ZFwiO1xufVxuXG4uYnQtbGlnaHQtYnVsYjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0ZVwiO1xufVxuXG4uYnQtcHJpbnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTBcIjtcbn1cblxuLmJ0LWZheDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1MVwiO1xufVxuXG4uYnQtdmlkZW86YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTJcIjtcbn1cblxuLmJ0LXNpZ25hbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1M1wiO1xufVxuXG4uYnQtc2l0ZW1hcDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1NFwiO1xufVxuXG4uYnQtdXBsb2FkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU1XCI7XG59XG5cbi5idC1kb3dubG9hZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1NlwiO1xufVxuXG4uYnQta2V5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU3XCI7XG59XG5cbi5idC1tdWc6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNThcIjtcbn1cblxuLmJ0LWJvb2ttYXJrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU5XCI7XG59XG5cbi5idC1mbGFnOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDVhXCI7XG59XG5cbi5idC1leHRlcm5hbC1saW5rOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDViXCI7XG59XG5cbi5idC1zbWlsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1Y1wiO1xufVxuXG4uYnQtZnJvd246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNWRcIjtcbn1cblxuLmJ0LW1laDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1ZVwiO1xufVxuXG4uYnQtbWFnaWM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjBcIjtcbn1cblxuLmJ0LWJvbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjFcIjtcbn1cblxuLmJ0LWV4Y2xhbWF0aW9uLXRyaWFuZ2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDYyXCI7XG59XG5cbi5idC1leGNsYW1hdGlvbi1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjNcIjtcbn1cblxuLmJ0LWZsYXNrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY0XCI7XG59XG5cbi5idC1tdXNpYzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2NVwiO1xufVxuXG4uYnQtcHVzaC1waW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjZcIjtcbn1cblxuLmJ0LXNoaWVsZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2N1wiO1xufVxuXG4uYnQtc29ydDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2OFwiO1xufVxuXG4uYnQtcmVwbHk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjlcIjtcbn1cblxuLmJ0LWZvcndhcmQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNmFcIjtcbn1cblxuLmJ0LXJlcGx5LWFsbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2YlwiO1xufVxuXG4uYnQtZm9yd2FyZC1hbGw6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNmNcIjtcbn1cblxuLmJ0LWJlbGw6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNmRcIjtcbn1cblxuLmJ0LWJlbGwtb2ZmOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDZlXCI7XG59XG5cbi5idC1iYW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNzBcIjtcbn1cblxuLmJ0LWRhdGFiYXNlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDcxXCI7XG59XG5cbi5idC1oYXJkLWRyaXZlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDcyXCI7XG59XG5cbi5idC1tZXJnZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3M1wiO1xufVxuXG4uYnQtZm9yazpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3NFwiO1xufVxuXG4uYnQtd2lmaTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3NVwiO1xufVxuXG4uYnQtcGFwZXItcGxhbmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNzZcIjtcbn1cblxuLmJ0LWluYm94OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDc3XCI7XG59XG5cbi5idC1maXJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDc4XCI7XG59XG5cbi5idC1wbGF5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDc5XCI7XG59XG5cbi5idC1wYXVzZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3YVwiO1xufVxuXG4uYnQtc3RvcDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4YlwiO1xufVxuXG4uYnQtcGxheS1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwN2JcIjtcbn1cblxuLmJ0LW5leHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwN2NcIjtcbn1cblxuLmJ0LXByZXZpb3VzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDdkXCI7XG59XG5cbi5idC1yZXBlYXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwN2VcIjtcbn1cblxuLmJ0LWZhc3QtZm9yd2FyZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4MFwiO1xufVxuXG4uYnQtZmFzdC1yZXZlcnNlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDgxXCI7XG59XG5cbi5idC12b2x1bWU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwODJcIjtcbn1cblxuLmJ0LXZvbHVtZS1vZmY6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwODNcIjtcbn1cblxuLmJ0LXZvbHVtZS11cDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4NFwiO1xufVxuXG4uYnQtdm9sdW1lLWRvd246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwODVcIjtcbn1cblxuLmJ0LW1heGltaXplOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDg2XCI7XG59XG5cbi5idC1taW5pbWl6ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4N1wiO1xufVxuXG4uYnQtY2xvc2VkLWNhcHRpb25zOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDg4XCI7XG59XG5cbi5idC1zaHVmZmxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDg5XCI7XG59XG5cbi5idC10cmlhbmdsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4YVwiO1xufVxuXG4uYnQtc3F1YXJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDhiXCI7XG59XG5cbi5idC1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOGNcIjtcbn1cblxuLmJ0LWhleGFnb246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOGRcIjtcbn1cblxuLmJ0LW9jdGFnb246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOGVcIjtcbn1cblxuLmJ0LWFuZ2xlLXVwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDkwXCI7XG59XG5cbi5idC1hbmdsZS1kb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDkxXCI7XG59XG5cbi5idC1hbmdsZS1sZWZ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDkyXCI7XG59XG5cbi5idC1hbmdsZS1yaWdodDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5M1wiO1xufVxuXG4uYnQtYW5nbGVzLXVwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDk0XCI7XG59XG5cbi5idC1hbmdsZXMtZG93bjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5NVwiO1xufVxuXG4uYnQtYW5nbGVzLWxlZnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTZcIjtcbn1cblxuLmJ0LWFuZ2xlcy1yaWdodDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5N1wiO1xufVxuXG4uYnQtYXJyb3ctdXA6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOThcIjtcbn1cblxuLmJ0LWFycm93LWRvd246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTlcIjtcbn1cblxuLmJ0LWFycm93LWxlZnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOWFcIjtcbn1cblxuLmJ0LWFycm93LXJpZ2h0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDliXCI7XG59XG5cbi5idC1iYXItY2hhcnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOWNcIjtcbn1cblxuLmJ0LXBpZS1jaGFydDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5ZFwiO1xufVxuXG4uYnQtY2lyY2xlLWFycm93LXVwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGEwXCI7XG59XG5cbi5idC1jaXJjbGUtYXJyb3ctZG93bjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhMVwiO1xufVxuXG4uYnQtY2lyY2xlLWFycm93LWxlZnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYTJcIjtcbn1cblxuLmJ0LWNpcmNsZS1hcnJvdy1yaWdodDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhM1wiO1xufVxuXG4uYnQtY2FyZXQtdXA6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYTRcIjtcbn1cblxuLmJ0LWNhcmV0LWRvd246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYTVcIjtcbn1cblxuLmJ0LWNhcmV0LWxlZnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYTZcIjtcbn1cblxuLmJ0LWNhcmV0LXJpZ2h0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGE3XCI7XG59XG5cbi5idC1sb25nLWFycm93LXVwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGE4XCI7XG59XG5cbi5idC1sb25nLWFycm93LWRvd246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYTlcIjtcbn1cblxuLmJ0LWxvbmctYXJyb3ctbGVmdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhYVwiO1xufVxuXG4uYnQtbG9uZy1hcnJvdy1yaWdodDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhYlwiO1xufVxuXG4uYnQtQm9sZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhY1wiO1xufVxuXG4uYnQtaXRhbGljOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGFkXCI7XG59XG5cbi5idC11bmRlcmxpbmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYWVcIjtcbn1cblxuLmJ0LWxpbms6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjBcIjtcbn1cblxuLmJ0LXBhcGVyLWNsaXA6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjFcIjtcbn1cblxuLmJ0LWFsaWduLWxlZnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjJcIjtcbn1cblxuLmJ0LWFsaWduLWNlbnRlcjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBiM1wiO1xufVxuXG4uYnQtYWxpZ24tcmlnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjRcIjtcbn1cblxuLmJ0LWFsaWduLWp1c3RpZnk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjVcIjtcbn1cblxuLmJ0LWN1dDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBiNlwiO1xufVxuXG4uYnQtY29weTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBiN1wiO1xufVxuXG4uYnQtcGFzdGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjhcIjtcbn1cblxuLmJ0LXBob3RvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGI5XCI7XG59XG5cbi5idC10YWJsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBiYVwiO1xufVxuXG4uYnQtdWxpc3Q6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYmJcIjtcbn1cblxuLmJ0LW9saXN0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGJjXCI7XG59XG5cbi5idC1pbmRlbnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYmRcIjtcbn1cblxuLmJ0LW91dGRlbnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYmVcIjtcbn1cblxuLmJ0LXVuZG86YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYzBcIjtcbn1cblxuLmJ0LXJlZG86YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYzFcIjtcbn1cblxuLmJ0LXN1cDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBjMlwiO1xufVxuXG4uYnQtc3ViOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGMzXCI7XG59XG5cbi5idC10ZXh0LXNpemU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYzRcIjtcbn1cblxuLmJ0LXRleHQtY29sb3I6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYzVcIjtcbn1cblxuLmJ0LXJlbW92ZS1mb3JtYXR0aW5nOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGM2XCI7XG59XG5cbi5idC1ibG9ja3F1b3RlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDM2XCI7XG59XG5cbi5idC1nbG9iZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBjN1wiO1xufVxuXG4uYnQtbWFwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGM4XCI7XG59XG5cbi5idC1tYXAtYXJyb3c6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYzlcIjtcbn1cblxuLmJ0LW1hcC1tYXJrZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwY2FcIjtcbn1cblxuLmJ0LW1hcC1waW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwY2JcIjtcbn1cblxuLmJ0LWhvbWU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwY2NcIjtcbn1cblxuLmJ0LWJ1aWxkaW5nOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGNkXCI7XG59XG5cbi5idC1pbmR1c3RyeTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBjZVwiO1xufVxuXG4uYnQtZGVza3RvcDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBkMFwiO1xufVxuXG4uYnQtbGFwdG9wOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGQxXCI7XG59XG5cbi5idC10YWJsZXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDJcIjtcbn1cblxuLmJ0LW1vYmlsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBkM1wiO1xufVxuXG4uYnQtdHY6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDRcIjtcbn1cblxuLmJ0LXJhZGlvLWNoZWNrZWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDVcIjtcbn1cblxuLmJ0LXJhZGlvLXVuY2hlY2tlZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4Y1wiO1xufVxuXG4uYnQtY2hlY2tib3gtY2hlY2tlZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxNFwiO1xufVxuXG4uYnQtY2hlY2tib3gtdW5jaGVja2VkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDhiXCI7XG59XG5cbi5idC1jaGVja2JveC1pbnRlcm1lZGlhdGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjNcIjtcbn1cblxuLmJ0LXVzZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDZcIjtcbn1cblxuLmJ0LXVzZXItbWFsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBkNlwiO1xufVxuXG4uYnQtdXNlci1mZW1hbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDdcIjtcbn1cblxuLmJ0LWNyb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGQ4XCI7XG59XG5cbi5idC1jcmVkaXQtY2FyZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBkOVwiO1xufVxuXG4uYnQtc3RyaWtldGhyb3VnaDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBkYVwiO1xufVxuXG4uYnQtZWplY3Q6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZGJcIjtcbn1cblxuLmJ0LWVsbGlwc2lzLWg6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZGNcIjtcbn1cblxuLmJ0LWVsbGlwc2lzLXY6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZGRcIjtcbn1cblxuLmZhYi1mYWNlYm9vazpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwMFwiO1xufVxuXG4uZmFiLWZhY2Vib29rLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwMVwiO1xufVxuXG4uZmFiLXR3aXR0ZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDJcIjtcbn1cblxuLmZhYi1saW5rZWRpbjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwM1wiO1xufVxuXG4uZmFiLWxpbmtlZGluLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwNFwiO1xufVxuXG4uZmFiLWluc3RhZ3JhbTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwNVwiO1xufVxuXG4uZmFiLWdpdGh1YjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwNlwiO1xufVxuXG4uZmFiLWdpdGh1Yi1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDdcIjtcbn1cblxuLmZhYi1nb29nbGVwbHVzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDA4XCI7XG59XG5cbi5mYWItZ29vZ2xlcGx1cy1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDlcIjtcbn1cblxuLmZhYi1waW50ZXJlc3Q6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMGFcIjtcbn1cblxuLmZhYi1waW50ZXJlc3QtYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDBiXCI7XG59XG5cbi5mYWItdHVtYmxyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDBjXCI7XG59XG5cbi5mYWItdHVtYmxyLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwZFwiO1xufVxuXG4uZmFiLWJpdGNvaW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTBcIjtcbn1cblxuLmZhYi1iaXRjb2luLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxMVwiO1xufVxuXG4uZmFiLWRyb3Bib3g6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTJcIjtcbn1cblxuLmZhYi1zdGFja2V4Y2hhbmdlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDEzXCI7XG59XG5cbi5mYWItc3RhY2tvdmVyZmxvdzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxNFwiO1xufVxuXG4uZmFiLWZsaWNrcjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxNVwiO1xufVxuXG4uZmFiLWZsaWNrci1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTZcIjtcbn1cblxuLmZhYi1iaXRidWNrZXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTdcIjtcbn1cblxuLmZhYi1odG1sNTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxOFwiO1xufVxuXG4uZmFiLWNzczM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTlcIjtcbn1cblxuLmZhYi1hcHBsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxYVwiO1xufVxuXG4uZmFiLXdpbmRvd3M6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMWJcIjtcbn1cblxuLmZhYi1hbmRyb2lkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDFjXCI7XG59XG5cbi5mYWItbGludXg6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMWRcIjtcbn1cblxuLmZhYi1kcmliYmJsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxZVwiO1xufVxuXG4uZmFiLXlvdXR1YmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjFcIjtcbn1cblxuLmZhYi1za3lwZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyMlwiO1xufVxuXG4uZmFiLWZvdXJzcXVhcmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjNcIjtcbn1cblxuLmZhYi10cmVsbG86YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjRcIjtcbn1cblxuLmZhYi1tYXhjZG46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjVcIjtcbn1cblxuLmZhYi1naXR0aXA6YmVmb3JlLFxuLmZhYi1ncmF0aXBheTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyNlwiO1xufVxuXG4uZmFiLXZpbWVvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI3XCI7XG59XG5cbi5mYWItdmltZW8tYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI4XCI7XG59XG5cbi5mYWItc2xhY2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjlcIjtcbn1cblxuLmZhYi13b3JkcHJlc3M6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmFcIjtcbn1cblxuLmZhYi13b3JkcHJlc3MtYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJiXCI7XG59XG5cbi5mYWItb3BlbmlkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJjXCI7XG59XG5cbi5mYWIteWFob286YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmRcIjtcbn1cblxuLmZhYi15YWhvby1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmVcIjtcbn1cblxuLmZhYi1yZWRkaXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmZcIjtcbn1cblxuLmZhYi1nb29nbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzBcIjtcbn1cblxuLmZhYi1nb29nbGUtYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDMxXCI7XG59XG5cbi5mYWItc3R1bWJsZXVwb246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzJcIjtcbn1cblxuLmZhYi1zdHVtYmxldXBvbi1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzNcIjtcbn1cblxuLmZhYi1kZWxpY2lvdXM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzRcIjtcbn1cblxuLmZhYi1kaWdnOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDM1XCI7XG59XG5cbi5mYWItcGllZHBpcGVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDM2XCI7XG59XG5cbi5mYWItcGllZHBpcGVyLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzN1wiO1xufVxuXG4uZmFiLWRydXBhbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzOFwiO1xufVxuXG4uZmFiLWpvb21sYTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzOVwiO1xufVxuXG4uZmFiLWJlaGFuY2U6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2FcIjtcbn1cblxuLmZhYi1zdGVhbTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzYlwiO1xufVxuXG4uZmFiLXN0ZWFtLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzY1wiO1xufVxuXG4uZmFiLXNwb3RpZnk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2RcIjtcbn1cblxuLmZhYi1kZXZpYW50YXJ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDNlXCI7XG59XG5cbi5mYWItc291bmRjbG91ZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0MFwiO1xufVxuXG4uZmFiLXZpbmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDFcIjtcbn1cblxuLmZhYi1jb2RlcGVuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQyXCI7XG59XG5cbi5mYWItanNmaWRkbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDNcIjtcbn1cblxuLmZhYi1yZWJlbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0NFwiO1xufVxuXG4uZmFiLWVtcGlyZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0NVwiO1xufVxuXG4uZmFiLWdpdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0NlwiO1xufVxuXG4uZmFiLWhhY2tlcm5ld3M6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDdcIjtcbn1cblxuLmZhYi1oYWNrZXJuZXdzLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0OFwiO1xufVxuXG4uZmFiLXNsaWRlc2hhcmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDlcIjtcbn1cblxuLmZhYi10d2l0Y2g6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNGFcIjtcbn1cblxuLmZhYi15ZWxwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDRiXCI7XG59XG5cbi5mYWItcGF5cGFsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDRjXCI7XG59XG5cbi5mYWItZ29vZ2xlLXdhbGxldDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0ZFwiO1xufVxuXG4uZmFiLWFuZ2VsbGlzdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0ZVwiO1xufVxuXG4uZmFiLWNjLXZpc2E6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTBcIjtcbn1cblxuLmZhYi1jYy1tYXN0ZXJjYXJkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDUxXCI7XG59XG5cbi5mYWItY2MtZGlzY292ZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTJcIjtcbn1cblxuLmZhYi1jYy1hbWV4OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDUzXCI7XG59XG5cbi5mYWItY2MtcGF5cGFsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU0XCI7XG59XG5cbi5mYWItY2Mtc3RyaXBlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU1XCI7XG59XG5cbi5mYWItbGFzdGZtOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU2XCI7XG59XG5cbi5mYWItd2hhdHNhcHA6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTdcIjtcbn1cblxuLmZhYi1tZWRpdW06YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNThcIjtcbn1cblxuLmZhYi1tZWFucGF0aDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1OVwiO1xufVxuXG4uZmFiLW1lYW5wYXRoLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1YVwiO1xufVxuXG4uZmFiLXBhZ2VsaW5lczpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1YlwiO1xufVxuXG4uZmFiLWlveGhvc3Q6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjBcIjtcbn1cblxuLmZhYi1idXlzZWxsYWRzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDYxXCI7XG59XG5cbi5mYWItYnV5c2VsbGFkcy1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjJcIjtcbn1cblxuLmZhYi1jb25uZWN0ZGV2ZWxvcDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2M1wiO1xufVxuXG4uZmFiLWRhc2hjdWJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY0XCI7XG59XG5cbi5mYWItZm9ydW1iZWU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjVcIjtcbn1cblxuLmZhYi1sZWFucHViOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY2XCI7XG59XG5cbi5mYWItc2VsbHN5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY3XCI7XG59XG5cbi5mYWItc2hpcnRzaW5idWxrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY4XCI7XG59XG5cbi5mYWItc2ltcGx5YnVpbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjlcIjtcbn1cblxuLmZhYi1za3lhdGxhczpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2YVwiO1xufVxuXG4uZmFiLXZpYWNvaW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNmJcIjtcbn1cblxuLmZhYi1jb2RpZXBpZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2Y1wiO1xufVxuXG4uZmFiLXF1ZXVlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDZkXCI7XG59XG5cbi5mYWItcXVldWUtYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDZlXCI7XG59XG5cbi5mYWItZm9udGljb25zOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDcwXCI7XG59XG5cbi5mYWItZm9udGljb25zLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3MVwiO1xufVxuXG4uZmFiLWJsYWNrdGllOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDcyXCI7XG59XG5cbi5mYWItYmxhY2t0aWUtYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDczXCI7XG59XG5cbi5mYWIteGluZzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5MFwiO1xufVxuXG4uZmFiLXZrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDkxXCI7XG59XG5cbi5mYWItd2VpYm86YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTJcIjtcbn1cblxuLmZhYi1yZW5yZW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTNcIjtcbn1cblxuLmZhYi10ZW5jZW50LXdlaWJvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDk0XCI7XG59XG5cbi5mYWItcXE6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTVcIjtcbn1cblxuLmZhYi13ZWNoYXQ6YmVmb3JlLFxuLmZhYi13ZWl4aW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTZcIjtcbn1cblxuQGtleWZyYW1lcyBwbHlyLXByb2dyZXNzIHtcbiAgdG8ge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDI1cHggMDtcbiAgfVxufVxuXG4ucGx5ciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtaW4td2lkdGg6IDIwMHB4O1xuICBmb250LWZhbWlseTogQXZlbmlyLCBcIkF2ZW5pciBOZXh0XCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJTZWdvZSBVSVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBkaXJlY3Rpb246IGx0cjtcbn1cblxuLnBseXIsXG4ucGx5ciAqLFxuLnBseXIgKjo6YWZ0ZXIsXG4ucGx5ciAqOjpiZWZvcmUge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4ucGx5ciBhLCAucGx5ciBidXR0b24sIC5wbHlyIGlucHV0LCAucGx5ciBsYWJlbCB7XG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xufVxuXG4ucGx5cjpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi5wbHlyIHZpZGVvLFxuLnBseXIgYXVkaW8ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xufVxuXG4ucGx5ciBpbnB1dFt0eXBlPSdyYW5nZSddIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMjBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4ucGx5ciBpbnB1dFt0eXBlPSdyYW5nZSddOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayB7XG4gIGhlaWdodDogOHB4O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4ucGx5ciBpbnB1dFt0eXBlPSdyYW5nZSddOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgbWFyZ2luLXRvcDogLTRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDE2cHg7XG4gIHdpZHRoOiAxNnB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnMgZWFzZSwgYm9yZGVyIC4ycyBlYXNlLCB0cmFuc2Zvcm0gLjJzIGVhc2U7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTUpLCAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1vei1yYW5nZS10cmFjayB7XG4gIGhlaWdodDogOHB4O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4ucGx5ciBpbnB1dFt0eXBlPSdyYW5nZSddOjotbW96LXJhbmdlLXRodW1iIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDE2cHg7XG4gIHdpZHRoOiAxNnB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnMgZWFzZSwgYm9yZGVyIC4ycyBlYXNlLCB0cmFuc2Zvcm0gLjJzIGVhc2U7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTUpLCAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1zLXRyYWNrIHtcbiAgaGVpZ2h0OiA4cHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1zLWZpbGwtdXBwZXIge1xuICBoZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1zLWZpbGwtbG93ZXIge1xuICBoZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgYmFja2dyb3VuZDogIzM0OThkYjtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1zLXRodW1iIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDE2cHg7XG4gIHdpZHRoOiAxNnB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnMgZWFzZSwgYm9yZGVyIC4ycyBlYXNlLCB0cmFuc2Zvcm0gLjJzIGVhc2U7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTUpLCAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1zLXRvb2x0aXAge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5ciBpbnB1dFt0eXBlPSdyYW5nZSddOmZvY3VzIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1vei1mb2N1cy1vdXRlciB7XG4gIGJvcmRlcjogMDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXS50YWItZm9jdXM6Zm9jdXMge1xuICBvdXRsaW5lLW9mZnNldDogM3B4O1xufVxuXG4ucGx5ciBpbnB1dFt0eXBlPSdyYW5nZSddOmFjdGl2ZTo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICBiYWNrZ3JvdW5kOiAjMzQ5OGRiO1xuICBib3JkZXItY29sb3I6ICNmZmY7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4yNSk7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ106YWN0aXZlOjotbW96LXJhbmdlLXRodW1iIHtcbiAgYmFja2dyb3VuZDogIzM0OThkYjtcbiAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMjUpO1xufVxuXG4ucGx5ciBpbnB1dFt0eXBlPSdyYW5nZSddOmFjdGl2ZTo6LW1zLXRodW1iIHtcbiAgYmFja2dyb3VuZDogIzM0OThkYjtcbiAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMjUpO1xufVxuXG4ucGx5ci0tdmlkZW8gaW5wdXRbdHlwZT0ncmFuZ2UnXS50YWItZm9jdXM6Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cblxuLnBseXItLWF1ZGlvIGlucHV0W3R5cGU9J3JhbmdlJ10udGFiLWZvY3VzOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCByZ2JhKDg2LCA5MywgMTAwLCAwLjUpO1xufVxuXG4ucGx5cl9fc3Itb25seSB7XG4gIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMXB4ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxcHggIWltcG9ydGFudDtcbn1cblxuLnBseXJfX3ZpZGVvLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG59XG5cbi5wbHlyX192aWRlby1lbWJlZCB7XG4gIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XG4gIC8qIDE2OjkgKi9cbiAgaGVpZ2h0OiAwO1xuICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB6LWluZGV4OiAwO1xufVxuXG4ucGx5cl9fdmlkZW8tZW1iZWQgaWZyYW1lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5wbHlyX192aWRlby1lbWJlZCA+IGRpdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1ib3R0b206IDIwMCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzUuOTUlKTtcbn1cblxuLnBseXIgLnBseXJfX3ZpZGVvLWVtYmVkIGlmcmFtZSB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4ucGx5ciB2aWRlbzo6LXdlYmtpdC1tZWRpYS10ZXh0LXRyYWNrLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyX19jYXB0aW9ucyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMjBweDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC02MHB4KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5wbHlyX19jYXB0aW9ucyBzcGFuIHtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBwYWRkaW5nOiAzcHggMTBweDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBib3gtZGVjb3JhdGlvbi1icmVhazogY2xvbmU7XG4gIGxpbmUtaGVpZ2h0OiAxNTAlO1xufVxuXG4ucGx5cl9fY2FwdGlvbnMgc3BhbjplbXB0eSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAucGx5cl9fY2FwdGlvbnMge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgfVxufVxuXG4ucGx5ci0tY2FwdGlvbnMtYWN0aXZlIC5wbHlyX19jYXB0aW9ucyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucGx5ci0taGlkZS1jb250cm9scyAucGx5cl9fY2FwdGlvbnMge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5wbHlyLS1mdWxsc2NyZWVuLWFjdGl2ZSAucGx5cl9fY2FwdGlvbnMge1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgfVxufVxuXG4ucGx5ciA6Oi13ZWJraXQtbWVkaWEtY29udHJvbHMge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5cl9fY29udHJvbHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBsaW5lLWhlaWdodDogMTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ucGx5cl9fY29udHJvbHMgPiBidXR0b24sXG4ucGx5cl9fY29udHJvbHMgLnBseXJfX3Byb2dyZXNzLFxuLnBseXJfX2NvbnRyb2xzIC5wbHlyX190aW1lIHtcbiAgbWFyZ2luLWxlZnQ6IDVweDtcbn1cblxuLnBseXJfX2NvbnRyb2xzID4gYnV0dG9uOmZpcnN0LWNoaWxkLFxuLnBseXJfX2NvbnRyb2xzIC5wbHlyX19wcm9ncmVzczpmaXJzdC1jaGlsZCxcbi5wbHlyX19jb250cm9scyAucGx5cl9fdGltZTpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4ucGx5cl9fY29udHJvbHMgLnBseXJfX3ZvbHVtZSB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5cbi5wbHlyX19jb250cm9scyBbZGF0YS1wbHlyPVwicGF1c2VcIl0ge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmbGV4LXNocmluazogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHBhZGRpbmc6IDdweDtcbiAgYm9yZGVyOiAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjNzIGVhc2UsIGNvbG9yIC4zcyBlYXNlLCBvcGFjaXR5IC4zcyBlYXNlO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbiBzdmcge1xuICB3aWR0aDogMThweDtcbiAgaGVpZ2h0OiAxOHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgZmlsbDogY3VycmVudENvbG9yO1xufVxuXG4ucGx5cl9fY29udHJvbHMgYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLnBseXJfX2NvbnRyb2xzIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4sXG4ucGx5cl9fY29udHJvbHMgLmljb24tLW11dGVkLFxuLnBseXJfX2NvbnRyb2xzIC5pY29uLS1jYXB0aW9ucy1vbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xuICAucGx5cl9fY29udHJvbHMgPiBidXR0b24sXG4gIC5wbHlyX19jb250cm9scyAucGx5cl9fcHJvZ3Jlc3MsXG4gIC5wbHlyX19jb250cm9scyAucGx5cl9fdGltZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIH1cbn1cblxuLnBseXItLWhpZGUtY29udHJvbHMgLnBseXJfX2NvbnRyb2xzIHtcbiAgb3BhY2l0eTogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5wbHlyLS12aWRlbyAucGx5cl9fY29udHJvbHMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIHBhZGRpbmc6IDUwcHggMTBweCAxMHB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodHJhbnNwYXJlbnQsIHJnYmEoMCwgMCwgMCwgMC41KSk7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IGluaGVyaXQ7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiBpbmhlcml0O1xuICBjb2xvcjogI2ZmZjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZTtcbn1cblxuLnBseXItLXZpZGVvIC5wbHlyX19jb250cm9scyBidXR0b24udGFiLWZvY3VzOmZvY3VzLCAucGx5ci0tdmlkZW8gLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMzNDk4ZGI7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucGx5ci0tYXVkaW8gLnBseXJfX2NvbnRyb2xzIHtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RiZTNlODtcbiAgY29sb3I6ICM1NjVENjQ7XG59XG5cbi5wbHlyLS1hdWRpbyAucGx5cl9fY29udHJvbHMgYnV0dG9uLnRhYi1mb2N1czpmb2N1cywgLnBseXItLWF1ZGlvIC5wbHlyX19jb250cm9scyBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjMzQ5OGRiO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnBseXJfX3BsYXktbGFyZ2Uge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kOiAjMzQ5OGRiO1xuICBib3JkZXI6IDRweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICBjb2xvcjogI2ZmZjtcbiAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xufVxuXG4ucGx5cl9fcGxheS1sYXJnZSBzdmcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDJweDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuLnBseXJfX3BsYXktbGFyZ2U6Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cblxuLnBseXIgLnBseXJfX3BsYXktbGFyZ2Uge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5wbHlyLS1hdWRpbyAucGx5cl9fcGxheS1sYXJnZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyLS1wbGF5aW5nIC5wbHlyX19wbGF5LWxhcmdlIHtcbiAgb3BhY2l0eTogMDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ucGx5cl9fY29udHJvbHMgW2RhdGEtcGx5cj0ncGF1c2UnXSxcbi5wbHlyLS1wbGF5aW5nIC5wbHlyX19jb250cm9scyBbZGF0YS1wbHlyPSdwbGF5J10ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5ci0tcGxheWluZyAucGx5cl9fY29udHJvbHMgW2RhdGEtcGx5cj0ncGF1c2UnXSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4sXG4ucGx5ci0tbXV0ZWQgLnBseXJfX2NvbnRyb2xzIC5pY29uLS1tdXRlZCxcbi5wbHlyLS1jYXB0aW9ucy1hY3RpdmUgLnBseXJfX2NvbnRyb2xzIC5pY29uLS1jYXB0aW9ucy1vbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucGx5ci0tZnVsbHNjcmVlbi1hY3RpdmUgLmljb24tLWV4aXQtZnVsbHNjcmVlbiArIHN2Zyxcbi5wbHlyLS1tdXRlZCAucGx5cl9fY29udHJvbHMgLmljb24tLW11dGVkICsgc3ZnLFxuLnBseXItLWNhcHRpb25zLWFjdGl2ZSAucGx5cl9fY29udHJvbHMgLmljb24tLWNhcHRpb25zLW9uICsgc3ZnIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBseXIgW2RhdGEtcGx5cj0nY2FwdGlvbnMnXSxcbi5wbHlyIFtkYXRhLXBseXI9J2Z1bGxzY3JlZW4nXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyLS1jYXB0aW9ucy1lbmFibGVkIFtkYXRhLXBseXI9J2NhcHRpb25zJ10sXG4ucGx5ci0tZnVsbHNjcmVlbi1lbmFibGVkIFtkYXRhLXBseXI9J2Z1bGxzY3JlZW4nXSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnBseXJfX3Rvb2x0aXAge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDI7XG4gIGJvdHRvbTogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgcGFkZGluZzogNXB4IDcuNXB4O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDEwcHgpIHNjYWxlKDAuOCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDUwJSAxMDAlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzIC4xcyBlYXNlLCBvcGFjaXR5IC4ycyAuMXMgZWFzZTtcbn1cblxuLnBseXJfX3Rvb2x0aXA6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBib3R0b206IC00cHg7XG4gIGJvcmRlci1yaWdodDogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wOiA0cHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICB6LWluZGV4OiAyO1xufVxuXG4ucGx5ciBidXR0b246aG92ZXIgLnBseXJfX3Rvb2x0aXAsXG4ucGx5ciBidXR0b24udGFiLWZvY3VzOmZvY3VzIC5wbHlyX190b29sdGlwLFxuLnBseXJfX3Rvb2x0aXAtLXZpc2libGUge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKSBzY2FsZSgxKTtcbn1cblxuLnBseXIgYnV0dG9uOmhvdmVyIC5wbHlyX190b29sdGlwIHtcbiAgei1pbmRleDogMztcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpmaXJzdC1jaGlsZCAucGx5cl9fdG9vbHRpcCB7XG4gIGxlZnQ6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpIHNjYWxlKDAuOCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAgMTAwJTtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpmaXJzdC1jaGlsZCAucGx5cl9fdG9vbHRpcDo6YmVmb3JlIHtcbiAgbGVmdDogMTZweDtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpsYXN0LWNoaWxkIC5wbHlyX190b29sdGlwIHtcbiAgcmlnaHQ6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpIHNjYWxlKDAuOCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMTAwJTtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpsYXN0LWNoaWxkIC5wbHlyX190b29sdGlwOjpiZWZvcmUge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogMTZweDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwJSk7XG59XG5cbi5wbHlyX19jb250cm9scyBidXR0b246Zmlyc3QtY2hpbGQ6aG92ZXIgLnBseXJfX3Rvb2x0aXAsXG4ucGx5cl9fY29udHJvbHMgYnV0dG9uOmZpcnN0LWNoaWxkLnRhYi1mb2N1czpmb2N1cyAucGx5cl9fdG9vbHRpcCxcbi5wbHlyX19jb250cm9scyBidXR0b246Zmlyc3QtY2hpbGQgLnBseXJfX3Rvb2x0aXAtLXZpc2libGUsXG4ucGx5cl9fY29udHJvbHMgYnV0dG9uOmxhc3QtY2hpbGQ6aG92ZXIgLnBseXJfX3Rvb2x0aXAsXG4ucGx5cl9fY29udHJvbHMgYnV0dG9uOmxhc3QtY2hpbGQudGFiLWZvY3VzOmZvY3VzIC5wbHlyX190b29sdGlwLFxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpsYXN0LWNoaWxkIC5wbHlyX190b29sdGlwLS12aXNpYmxlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCkgc2NhbGUoMSk7XG59XG5cbi5wbHlyX19wcm9ncmVzcyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxleDogMTtcbn1cblxuLnBseXJfX3Byb2dyZXNzIGlucHV0W3R5cGU9XCJyYW5nZVwiXSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuLnBseXJfX3Byb2dyZXNzIGlucHV0W3R5cGU9XCJyYW5nZVwiXTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLnBseXJfX3Byb2dyZXNzIGlucHV0W3R5cGU9XCJyYW5nZVwiXTo6LW1vei1yYW5nZS10cmFjayB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MgaW5wdXRbdHlwZT1cInJhbmdlXCJdOjotbXMtZmlsbC11cHBlciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MgLnBseXJfX3Rvb2x0aXAge1xuICBsZWZ0OiAwO1xufVxuXG4ucGx5ciAucGx5cl9fcHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5wbHlyX19wcm9ncmVzcy0tYnVmZmVyLFxuLnBseXJfX3Byb2dyZXNzLS1wbGF5ZWQsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOHB4O1xuICBtYXJnaW46IC00cHggMCAwO1xuICBwYWRkaW5nOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LXdlYmtpdC1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LXdlYmtpdC1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5Ojotd2Via2l0LXByb2dyZXNzLWJhciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZSxcbi5wbHlyX19wcm9ncmVzcy0tcGxheWVkOjotd2Via2l0LXByb2dyZXNzLXZhbHVlLFxuLnBseXJfX3ZvbHVtZS0tZGlzcGxheTo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZSB7XG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gIG1pbi13aWR0aDogOHB4O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LW1vei1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LW1vei1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5OjotbW96LXByb2dyZXNzLWJhciB7XG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gIG1pbi13aWR0aDogOHB4O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LW1zLWZpbGwsXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LW1zLWZpbGwsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5OjotbXMtZmlsbCB7XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZCxcbi5wbHlyX192b2x1bWUtLWRpc3BsYXkge1xuICB6LWluZGV4OiAxO1xuICBjb2xvcjogIzM0OThkYjtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHRyYW5zaXRpb246IG5vbmU7XG59XG5cbi5wbHlyX19wcm9ncmVzcy0tcGxheWVkOjotd2Via2l0LXByb2dyZXNzLXZhbHVlLFxuLnBseXJfX3ZvbHVtZS0tZGlzcGxheTo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZSB7XG4gIG1pbi13aWR0aDogOHB4O1xuICBtYXgtd2lkdGg6IDk5JTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICB0cmFuc2l0aW9uOiBub25lO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LW1vei1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5OjotbW96LXByb2dyZXNzLWJhciB7XG4gIG1pbi13aWR0aDogOHB4O1xuICBtYXgtd2lkdGg6IDk5JTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICB0cmFuc2l0aW9uOiBub25lO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LW1zLWZpbGwsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5OjotbXMtZmlsbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyX19wcm9ncmVzcy0tYnVmZmVyOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgdHJhbnNpdGlvbjogd2lkdGggLjJzIGVhc2U7XG59XG5cbi5wbHlyX19wcm9ncmVzcy0tYnVmZmVyOjotbW96LXByb2dyZXNzLWJhciB7XG4gIHRyYW5zaXRpb246IHdpZHRoIC4ycyBlYXNlO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LW1zLWZpbGwge1xuICB0cmFuc2l0aW9uOiB3aWR0aCAuMnMgZWFzZTtcbn1cblxuLnBseXItLXZpZGVvIC5wbHlyX19wcm9ncmVzcy0tYnVmZmVyLFxuLnBseXItLXZpZGVvIC5wbHlyX192b2x1bWUtLWRpc3BsYXkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpO1xufVxuXG4ucGx5ci0tdmlkZW8gLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI1KTtcbn1cblxuLnBseXItLWF1ZGlvIC5wbHlyX19wcm9ncmVzcy0tYnVmZmVyLFxuLnBseXItLWF1ZGlvIC5wbHlyX192b2x1bWUtLWRpc3BsYXkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDE5OCwgMjE0LCAyMTksIDAuNjcpO1xufVxuXG4ucGx5ci0tYXVkaW8gLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICBjb2xvcjogcmdiYSgxOTgsIDIxNCwgMjE5LCAwLjY3KTtcbn1cblxuLnBseXItLWxvYWRpbmcgLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICBhbmltYXRpb246IHBseXItcHJvZ3Jlc3MgMXMgbGluZWFyIGluZmluaXRlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDI1cHggMjVweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMCwgMCwgMCwgMC4xNSkgNTAlLCByZ2JhKDAsIDAsIDAsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnBseXItLXZpZGVvLnBseXItLWxvYWRpbmcgLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpO1xufVxuXG4ucGx5ci0tYXVkaW8ucGx5ci0tbG9hZGluZyAucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTk4LCAyMTQsIDIxOSwgMC42Nyk7XG59XG5cbi5wbHlyX190aW1lIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5wbHlyX190aW1lICsgLnBseXJfX3RpbWUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnBseXJfX3RpbWUgKyAucGx5cl9fdGltZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG59XG5cbi5wbHlyX190aW1lICsgLnBseXJfX3RpbWU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXDIwNDQnO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG5cbi5wbHlyX192b2x1bWUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5ciAucGx5cl9fdm9sdW1lIHtcbiAgZmxleDogMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ucGx5ciAucGx5cl9fdm9sdW1lIGlucHV0W3R5cGU9XCJyYW5nZVwiXSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XG4gIC5wbHlyIC5wbHlyX192b2x1bWUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1heC13aWR0aDogNjBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnBseXIgLnBseXJfX3ZvbHVtZSB7XG4gICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgfVxufVxuXG4ucGx5ci0taXMtaW9zIC5wbHlyX192b2x1bWUsXG4ucGx5ci0taXMtaW9zIFtkYXRhLXBseXI9J211dGUnXSB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHotaW5kZXg6IDEwMDAwMDAwO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5wbHlyLS1mdWxsc2NyZWVuLWFjdGl2ZSB2aWRlbyB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIC5wbHlyX192aWRlby13cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIC5wbHlyX192aWRlby1lbWJlZCB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4ucGx5ci0tZnVsbHNjcmVlbi1hY3RpdmUgLnBseXJfX2NvbnRyb2xzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xufVxuXG4ucGx5ci0tZnVsbHNjcmVlbi1hY3RpdmUucGx5ci0tdmltZW8gLnBseXJfX3ZpZGVvLXdyYXBwZXIge1xuICBoZWlnaHQ6IDA7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBUb29scy9Gb250c1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBUb29scy9BbGlhc2VzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFRvb2xzL01peGluc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBUb29scy9Db2xvclxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBUb29scy9CdXR0b25cbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI0JPWC1TSVpJTkdcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIE1vcmUgc2Vuc2libGUgZGVmYXVsdCBib3gtc2l6aW5nOlxuICogY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlXG4gKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qISBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4ge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqL1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyxcbm1lbnUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuY2FudmFzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjUkVTRVRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEEgdmVyeSBzaW1wbGUgcmVzZXQgdGhhdCBzaXRzIG9uIHRvcCBvZiBOb3JtYWxpemUuY3NzLlxuICovXG5ib2R5LFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbmJsb2NrcXVvdGUsIHAsIHByZSxcbmRsLCBkZCwgb2wsIHVsLFxuZmlndXJlLFxuaHIsXG5maWVsZHNldCwgbGVnZW5kIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0cmFpbGluZyBtYXJnaW5zIGZyb20gbmVzdGVkIGxpc3RzLlxuICovXG5saSA+IG9sLFxubGkgPiB1bCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdGFibGUgc3BhY2luZy5cbiAqL1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuLyoqXG4gKiAxLiBSZXNldCBDaHJvbWUgYW5kIEZpcmVmb3ggYmVoYXZpb3VyIHdoaWNoIHNldHMgYSBgbWluLXdpZHRoOiBtaW4tY29udGVudDtgXG4gKiAgICBvbiBmaWVsZHNldHMuXG4gKi9cbmZpZWxkc2V0IHtcbiAgbWluLXdpZHRoOiAwO1xuICAvKiBbMV0gKi9cbiAgYm9yZGVyOiAwO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI1NIQVJFRFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogU2hhcmVkIGRlY2xhcmF0aW9ucyBmb3IgY2VydGFpbiBlbGVtZW50cy5cbiAqL1xuLyoqXG4gKiBBbHdheXMgZGVjbGFyZSBtYXJnaW5zIGluIHRoZSBzYW1lIGRpcmVjdGlvbjpcbiAqIGNzc3dpemFyZHJ5LmNvbS8yMDEyLzA2L3NpbmdsZS1kaXJlY3Rpb24tbWFyZ2luLWRlY2xhcmF0aW9uc1xuICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBzZWxlY3Rvci1saXN0LWNvbW1hLW5ld2xpbmUtYWZ0ZXIgKi9cbmFkZHJlc3MsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxuYmxvY2txdW90ZSwgcCwgcHJlLFxuZGwsIG9sLCB1bCxcbmZpZ3VyZSxcbmhyLFxudGFibGUsXG5maWVsZHNldCB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG59XG5cbi8qKlxuICogQ29uc2lzdGVudCBpbmRlbnRhdGlvbiBmb3IgbGlzdHMuXG4gKi9cbmRkLCBvbCwgdWwge1xuICBtYXJnaW4tbGVmdDogMjRweDtcbn1cblxuLyogc3R5bGVsaW50LWVuYWJsZSBzZWxlY3Rvci1saXN0LWNvbW1hLW5ld2xpbmUtYWZ0ZXIgKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjUEFHRVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogU2ltcGxlIHBhZ2UtbGV2ZWwgc2V0dXAuXG4gKlxuICogMS4gU2V0IHRoZSBkZWZhdWx0IGBmb250LXNpemVgIGFuZCBgbGluZS1oZWlnaHRgIGZvciB0aGUgZW50aXJlIHByb2plY3QsXG4gKiAgICBzb3VyY2VkIGZyb20gb3VyIGRlZmF1bHQgdmFyaWFibGVzLiBUaGUgYGZvbnQtc2l6ZWAgaXMgY2FsY3VsYXRlZCB0byBleGlzdFxuICogICAgaW4gZW1zLCB0aGUgYGxpbmUtaGVpZ2h0YCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0IHVuaXRsZXNzbHkuXG4gKiAyLiBGb3JjZSBzY3JvbGxiYXJzIHRvIGFsd2F5cyBiZSB2aXNpYmxlIHRvIHByZXZlbnQgYXdrd2FyZCDigJhqdW1wc+KAmSB3aGVuXG4gKiAgICBuYXZpZ2F0aW5nIGJldHdlZW4gcGFnZXMgdGhhdCBkby9kbyBub3QgaGF2ZSBlbm91Z2ggY29udGVudCB0byBwcm9kdWNlXG4gKiAgICBzY3JvbGxiYXJzIG5hdHVyYWxseS5cbiAqIDMuIEVuc3VyZSB0aGUgcGFnZSBhbHdheXMgZmlsbHMgYXQgbGVhc3QgdGhlIGVudGlyZSBoZWlnaHQgb2YgdGhlIHZpZXdwb3J0LlxuICovXG5odG1sIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIFsxXSAqL1xuICBsaW5lLWhlaWdodDogMS41O1xuICAvKiBbMV0gKi9cbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAvKiBbMl0gKi9cbiAgbWluLWhlaWdodDogMTAwJTtcbiAgLyogWzNdICovXG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBFbGVtZW50cy9QYWdlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuaHRtbCwgYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnSGVsdmV0aWNhJywgc2Fucy1zZXJpZjtcbn1cblxuaHRtbCB7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5ib2R5OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgY29udGVudDogJ21vYmlsZSc7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gIGJvZHk6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICd0YWJsZXQnO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gIGJvZHk6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICdkZXNrdG9wJztcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODEuMjVlbSkge1xuICBib2R5OmFmdGVyIHtcbiAgICBjb250ZW50OiAnZGVza3RvcCc7XG4gIH1cbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNJTUFHRVNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEZsdWlkIGltYWdlcyBmb3IgcmVzcG9uc2l2ZSBwdXJwb3Nlcy5cbiAqIDIuIE9mZnNldCBgYWx0YCB0ZXh0IGZyb20gc3Vycm91bmRpbmcgY29weS5cbiAqIDMuIFNldHRpbmcgYHZlcnRpY2FsLWFsaWduYCByZW1vdmVzIHRoZSB3aGl0ZXNwYWNlIHRoYXQgYXBwZWFycyB1bmRlciBgaW1nYFxuICogICAgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBkcm9wcGVkIGludG8gYSBwYWdlIGFzLWlzLiBTYWZlciBhbHRlcm5hdGl2ZSB0b1xuICogICAgdXNpbmcgYGRpc3BsYXk6IGJsb2NrO2AuXG4gKi9cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogWzFdICovXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgLyogWzJdICovXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIC8qIFszXSAqL1xufVxuXG4vKipcbiAqIDEuIElmIGEgYHdpZHRoYCBhbmQvb3IgYGhlaWdodGAgYXR0cmlidXRlIGhhdmUgYmVlbiBleHBsaWNpdGx5IGRlZmluZWQsIGxldOKAmXNcbiAqICAgIG5vdCBtYWtlIHRoZSBpbWFnZSBmbHVpZC5cbiAqL1xuaW1nW3dpZHRoXSxcbmltZ1toZWlnaHRdIHtcbiAgLyogWzFdICovXG4gIG1heC13aWR0aDogbm9uZTtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNUQUJMRVNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEVuc3VyZSB0YWJsZXMgZmlsbCB1cCBhcyBtdWNoIHNwYWNlIGFzIHBvc3NpYmxlLlxuICovXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICAvKiBbMV0gKi9cbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIEVsZW1lbnRzL0xpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNXUkFQUEVSXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBQYWdlLWxldmVsIGNvbnN0cmFpbmluZyBhbmQgd3JhcHBpbmcgZWxlbWVudHMuXG4gKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlICovXG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG4uby13cmFwcGVyIHtcbiAgcGFkZGluZy1yaWdodDogMjRweDtcbiAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbn1cblxuLm8td3JhcHBlcjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCIgIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgY2xlYXI6IGJvdGggIWltcG9ydGFudDtcbn1cblxuLyogU2l6ZSB2YXJpYW50cy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4uby13cmFwcGVyLS10aW55IHtcbiAgcGFkZGluZy1yaWdodDogNnB4O1xuICBwYWRkaW5nLWxlZnQ6IDZweDtcbn1cblxuLm8td3JhcHBlci0tc21hbGwge1xuICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDEycHg7XG59XG5cbi5vLXdyYXBwZXItLWxhcmdlIHtcbiAgcGFkZGluZy1yaWdodDogNDhweDtcbiAgcGFkZGluZy1sZWZ0OiA0OHB4O1xufVxuXG4uby13cmFwcGVyLS1odWdlIHtcbiAgcGFkZGluZy1yaWdodDogOTZweDtcbiAgcGFkZGluZy1sZWZ0OiA5NnB4O1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgT2JqZWN0cy9XcmFwcGVyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLm8td3JhcHBlciB7XG4gIG1heC13aWR0aDogbm9uZTtcbiAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyNHB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDYuMjVlbSkge1xuICAuby13cmFwcGVyLS1sYXJnZSB7XG4gICAgcGFkZGluZy1yaWdodDogNDhweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQ4cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ2LjI1ZW0pIHtcbiAgLm8td3JhcHBlci0taHVnZSB7XG4gICAgcGFkZGluZy1yaWdodDogNDhweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQ4cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDYxLjI1ZW0pIHtcbiAgLm8td3JhcHBlci0taHVnZSB7XG4gICAgcGFkZGluZy1yaWdodDogOTZweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDk2cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ2LjI0ZW0pIHtcbiAgLm8td3JhcHBlci0tZmx1c2gtbW9iaWxlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI0xBWU9VVFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogR3JpZC1saWtlIGxheW91dCBzeXN0ZW0uXG4gKlxuICogVGhlIGxheW91dCBvYmplY3QgcHJvdmlkZXMgdXMgd2l0aCBhIGNvbHVtbi1zdHlsZSBsYXlvdXQgc3lzdGVtLiBUaGlzIGZpbGVcbiAqIGNvbnRhaW5zIHRoZSBiYXNpYyBzdHJ1Y3R1cmFsIGVsZW1lbnRzLCBidXQgY2xhc3NlcyBzaG91bGQgYmUgY29tcGxlbWVudGVkXG4gKiB3aXRoIHdpZHRoIHV0aWxpdGllcywgZm9yIGV4YW1wbGU6XG4gKlxuICogICA8ZGl2IGNsYXNzPVwiby1sYXlvdXRcIj5cbiAqICAgICA8ZGl2IGNsYXNzPVwiby1sYXlvdXRfX2l0ZW0gIHUtMS8yXCI+XG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMlwiPlxuICogICAgIDwvZGl2PlxuICogICA8L2Rpdj5cbiAqXG4gKiBUaGUgYWJvdmUgd2lsbCBjcmVhdGUgYSB0d28tY29sdW1uIHN0cnVjdHVyZSBpbiB3aGljaCBlYWNoIGNvbHVtbiB3aWxsXG4gKiBmbHVpZGx5IGZpbGwgaGFsZiBvZiB0aGUgd2lkdGggb2YgdGhlIHBhcmVudC4gV2UgY2FuIGhhdmUgbW9yZSBjb21wbGV4XG4gKiBzeXN0ZW1zOlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0XCI+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMSAgdS0xLzNAbWVkaXVtXCI+XG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMiAgdS0xLzNAbWVkaXVtXCI+XG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMiAgdS0xLzNAbWVkaXVtXCI+XG4gKiAgICAgPC9kaXY+XG4gKiAgIDwvZGl2PlxuICpcbiAqIFRoZSBhYm92ZSB3aWxsIGNyZWF0ZSBhIHN5c3RlbSBpbiB3aGljaCB0aGUgZmlyc3QgaXRlbSB3aWxsIGJlIDEwMCUgd2lkdGhcbiAqIHVudGlsIHdlIGVudGVyIG91ciBtZWRpdW0gYnJlYWtwb2ludCwgd2hlbiBpdCB3aWxsIGJlY29tZSAzMy4zMzMlIHdpZHRoLiBUaGVcbiAqIHNlY29uZCBhbmQgdGhpcmQgaXRlbXMgd2lsbCBiZSA1MCUgb2YgdGhlaXIgcGFyZW50LCB1bnRpbCB0aGV5IGFsc28gYmVjb21lXG4gKiAzMy4zMzMlIHdpZHRoIGF0IHRoZSBtZWRpdW0gYnJlYWtwb2ludC5cbiAqXG4gKiBXZSBjYW4gYWxzbyBtYW5pcHVsYXRlIGVudGlyZSBsYXlvdXQgc3lzdGVtcyBieSBhZGRpbmcgYSBzZXJpZXMgb2YgbW9kaWZpZXJzXG4gKiB0byB0aGUgYC5vLWxheW91dGAgYmxvY2suIEZvciBleGFtcGxlOlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0ICBvLWxheW91dC0tcmV2ZXJzZVwiPlxuICpcbiAqIFRoaXMgd2lsbCByZXZlcnNlIHRoZSBkaXNwbGF5ZWQgb3JkZXIgb2YgdGhlIHN5c3RlbSBzbyB0aGF0IGl0IHJ1bnMgaW4gdGhlXG4gKiBvcHBvc2l0ZSBvcmRlciB0byBvdXIgc291cmNlLCBlZmZlY3RpdmVseSBmbGlwcGluZyB0aGUgc3lzdGVtIG92ZXIuXG4gKlxuICogICA8ZGl2IGNsYXNzPVwiby1sYXlvdXQgIG8tbGF5b3V0LS1bcmlnaHR8Y2VudGVyXVwiPlxuICpcbiAqIFRoaXMgd2lsbCBjYXVzZSB0aGUgc3lzdGVtIHRvIGZpbGwgdXAgZnJvbSBlaXRoZXIgdGhlIGNlbnRyZSBvciB0aGUgcmlnaHRcbiAqIGhhbmQgc2lkZS4gRGVmYXVsdCBiZWhhdmlvdXIgaXMgdG8gZmlsbCB1cCB0aGUgbGF5b3V0IHN5c3RlbSBmcm9tIHRoZSBsZWZ0LlxuICpcbiAqIFRoZXJlIGFyZSBwbGVudHkgbW9yZSBvcHRpb25zIGF2YWlsYWJsZSB0byB1czogZXhwbG9yZSB0aGVtIGJlbG93LlxuICovXG4vKiBEZWZhdWx0L21hbmRhdG9yeSBjbGFzc2VzLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWxsb3dzIHVzIHRvIHVzZSB0aGUgbGF5b3V0IG9iamVjdCBvbiBhbnkgdHlwZSBvZiBlbGVtZW50LlxuICogMi4gV2UgbmVlZCB0byBkZWZlbnNpdmVseSByZXNldCBhbnkgYm94LW1vZGVsIHByb3BlcnRpZXMuXG4gKiAzLiBVc2UgdGhlIG5lZ2F0aXZlIG1hcmdpbiB0cmljayBmb3IgbXVsdGktcm93IGdyaWRzOlxuICogICAgaHR0cDovL2Nzc3dpemFyZHJ5LmNvbS8yMDExLzA4L2J1aWxkaW5nLWJldHRlci1ncmlkLXN5c3RlbXMvXG4gKi9cbi5vLWxheW91dCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAvKiBbMV0gKi9cbiAgbWFyZ2luOiAwO1xuICAvKiBbMl0gKi9cbiAgcGFkZGluZzogMDtcbiAgLyogWzJdICovXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIC8qIFsxXSAqL1xuICBtYXJnaW4tbGVmdDogLTI0cHg7XG4gIC8qIFszXSAqL1xuICBmb250LXNpemU6IDA7XG59XG5cbi8qKlxuICAgKiAxLiBSZXF1aXJlZCBpbiBvcmRlciB0byBjb21iaW5lIGZsdWlkIHdpZHRocyB3aXRoIGZpeGVkIGd1dHRlcnMuXG4gICAqIDIuIEFsbG93cyB1cyB0byBtYW5pcHVsYXRlIGdyaWRzIHZlcnRpY2FsbHksIHdpdGggdGV4dC1sZXZlbCBwcm9wZXJ0aWVzLFxuICAgKiAgICBldGMuXG4gICAqIDMuIERlZmF1bHQgaXRlbSBhbGlnbm1lbnQgaXMgd2l0aCB0aGUgdG9wcyBvZiBlYWNoIG90aGVyLCBsaWtlIG1vc3RcbiAgICogICAgdHJhZGl0aW9uYWwgZ3JpZC9sYXlvdXQgc3lzdGVtcy5cbiAgICogNC4gQnkgZGVmYXVsdCwgYWxsIGxheW91dCBpdGVtcyBhcmUgZnVsbC13aWR0aCAobW9iaWxlIGZpcnN0KS5cbiAgICogNS4gR3V0dGVycyBwcm92aWRlZCBieSBsZWZ0IHBhZGRpbmc6XG4gICAqICAgIGh0dHA6Ly9jc3N3aXphcmRyeS5jb20vMjAxMS8wOC9idWlsZGluZy1iZXR0ZXItZ3JpZC1zeXN0ZW1zL1xuICAgKiA2LiBGYWxsYmFjayBmb3Igb2xkIElFcyBub3Qgc3VwcG9ydGluZyBgcmVtYCB2YWx1ZXMuXG4gICAqL1xuLm8tbGF5b3V0X19pdGVtIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogWzFdICovXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogWzJdICovXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIC8qIFszXSAqL1xuICB3aWR0aDogMTAwJTtcbiAgLyogWzRdICovXG4gIHBhZGRpbmctbGVmdDogMjRweDtcbiAgLyogWzVdICovXG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgLyogWzZdICovXG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuLyogR3V0dGVyIHNpemUgbW9kaWZpZXJzLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5vLWxheW91dC0tZmx1c2gge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLm8tbGF5b3V0LS1mbHVzaCA+IC5vLWxheW91dF9faXRlbSB7XG4gIHBhZGRpbmctbGVmdDogMDtcbn1cblxuLm8tbGF5b3V0LS10aW55IHtcbiAgbWFyZ2luLWxlZnQ6IC02cHg7XG59XG5cbi5vLWxheW91dC0tdGlueSA+IC5vLWxheW91dF9faXRlbSB7XG4gIHBhZGRpbmctbGVmdDogNnB4O1xufVxuXG4uby1sYXlvdXQtLXNtYWxsIHtcbiAgbWFyZ2luLWxlZnQ6IC0xMnB4O1xufVxuXG4uby1sYXlvdXQtLXNtYWxsID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgcGFkZGluZy1sZWZ0OiAxMnB4O1xufVxuXG4uby1sYXlvdXQtLWxhcmdlIHtcbiAgbWFyZ2luLWxlZnQ6IC00OHB4O1xufVxuXG4uby1sYXlvdXQtLWxhcmdlID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgcGFkZGluZy1sZWZ0OiA0OHB4O1xufVxuXG4uby1sYXlvdXQtLWh1Z2Uge1xuICBtYXJnaW4tbGVmdDogLTk2cHg7XG59XG5cbi5vLWxheW91dC0taHVnZSA+IC5vLWxheW91dF9faXRlbSB7XG4gIHBhZGRpbmctbGVmdDogOTZweDtcbn1cblxuLyogVmVydGljYWwgYWxpZ25tZW50IG1vZGlmaWVycy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFsaWduIGFsbCBncmlkIGl0ZW1zIHRvIHRoZSBtaWRkbGVzIG9mIGVhY2ggb3RoZXIuXG4gKi9cbi5vLWxheW91dC0tbWlkZGxlID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLyoqXG4gKiBBbGlnbiBhbGwgZ3JpZCBpdGVtcyB0byB0aGUgYm90dG9tcyBvZiBlYWNoIG90aGVyLlxuICovXG4uby1sYXlvdXQtLWJvdHRvbSA+IC5vLWxheW91dF9faXRlbSB7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG5cbi8qKlxuICogU3RyZXRjaCBhbGwgZ3JpZCBpdGVtcyBvZiBlYWNoIHJvdyB0byBoYXZlIGFuIGVxdWFsLWhlaWdodC5cbiAqIFBsZWFzZSBiZSBhd2FyZSB0aGF0IHRoaXMgbW9kaWZpZXIgY2xhc3MgZG9lc24ndCB0YWtlIGFueSBlZmZlY3QgaW4gSUU5IGFuZFxuICogYmVsb3cgYW5kIG90aGVyIG9sZGVyIGJyb3dzZXJzIGR1ZSB0byB0aGUgbGFjayBvZiBgZGlzcGxheTogZmxleGAgc3VwcG9ydC5cbiAqL1xuLm8tbGF5b3V0LS1zdHJldGNoIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uby1sYXlvdXQtLXN0cmV0Y2ggPiAuby1sYXlvdXRfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4vKiBGaWxsIG9yZGVyIG1vZGlmaWVycy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEZpbGwgdXAgdGhlIGxheW91dCBzeXN0ZW0gZnJvbSB0aGUgY2VudHJlLlxuICovXG4uby1sYXlvdXQtLWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm8tbGF5b3V0LS1jZW50ZXIgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4vKipcbiAqIEZpbGwgdXAgdGhlIGxheW91dCBzeXN0ZW0gZnJvbSB0aGUgcmlnaHQtaGFuZCBzaWRlLlxuICovXG4uby1sYXlvdXQtLXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5vLWxheW91dC0tcmlnaHQgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4vKipcbiAqIEZpbGwgdXAgdGhlIGxheW91dCBzeXN0ZW0gZnJvbSB0aGUgbGVmdC1oYW5kIHNpZGUuIFRoaXMgd2lsbCBsaWtlbHkgb25seSBiZVxuICogbmVlZGVkIHdoZW4gdXNpbmcgaW4gY29uanVuY3Rpb24gd2l0aCBgLm8tbGF5b3V0LS1yZXZlcnNlYC5cbiAqL1xuLm8tbGF5b3V0LS1sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLm8tbGF5b3V0LS1sZWZ0ID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLyoqXG4gKiBSZXZlcnNlIHRoZSByZW5kZXJlZCBvcmRlciBvZiB0aGUgZ3JpZCBzeXN0ZW0uXG4gKi9cbi5vLWxheW91dC0tcmV2ZXJzZSB7XG4gIGRpcmVjdGlvbjogcnRsO1xufVxuXG4uby1sYXlvdXQtLXJldmVyc2UgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICBkaXJlY3Rpb246IGx0cjtcbn1cblxuLyogQXV0by13aWR0aHMgbW9kaWZpZXIuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBDYXVzZSBsYXlvdXQgaXRlbXMgdG8gdGFrZSB1cCBhIG5vbi1leHBsaWNpdCBhbW91bnQgb2Ygd2lkdGguXG4gKi9cbi5vLWxheW91dC0tYXV0byA+IC5vLWxheW91dF9faXRlbSB7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgT2JqZWN0cy9XcmFwcGVyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLm8tbGF5b3V0LS1lcXVhbC1oZWlnaHQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uby1sYXlvdXQtLWVxdWFsLWhlaWdodCAuby1sYXlvdXRfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uby1sYXlvdXQtLW1pZGRsZSAuby1sYXlvdXQtLWVxdWFsLWhlaWdodCB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5vLWxheW91dC0tYm90dG9tIC5vLWxheW91dC0tZXF1YWwtaGVpZ2h0IHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuXG4uby1sYXlvdXQtLXJpZ2h0IC5vLWxheW91dC0tZXF1YWwtaGVpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLm8tbGF5b3V0LS1jZW50ZXIgLm8tbGF5b3V0LS1lcXVhbC1oZWlnaHQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNNRURJQVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUGxhY2UgYW55IGltYWdlLSBhbmQgdGV4dC1saWtlIGNvbnRlbnQgc2lkZS1ieS1zaWRlLCBhcyBwZXI6XG4gKiBodHRwOi8vd3d3LnN0dWJib3JuZWxsYS5vcmcvY29udGVudC8yMDEwLzA2LzI1L3RoZS1tZWRpYS1vYmplY3Qtc2F2ZXMtaHVuZHJlZHMtb2YtbGluZXMtb2YtY29kZVxuICovXG4uby1tZWRpYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uby1tZWRpYTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCIgIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgY2xlYXI6IGJvdGggIWltcG9ydGFudDtcbn1cblxuLm8tbWVkaWFfX2ltZyB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tcmlnaHQ6IDI0cHg7XG59XG5cbi5vLW1lZGlhX19pbWcgPiBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm8tbWVkaWFfX2JvZHkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm8tbWVkaWFfX2JvZHksXG4uby1tZWRpYV9fYm9keSA+IDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLyogU2l6ZSB2YXJpYW50cy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIE1vZGlmeSB0aGUgYW1vdW50IG9mIHNwYWNlIGJldHdlZW4gb3VyIGltYWdlIGFuZCBvdXIgdGV4dC4gV2UgYWxzbyBoYXZlXG4gKiByZXZlcnNpYmxlIG9wdGlvbnMgZm9yIGFsbCBhdmFpbGFibGUgc2l6ZXMuXG4gKi9cbi8qIEd1dHRlcmxlc3MgbWVkaWEgb2JqZWN0cy5cbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5vLW1lZGlhLS1mbHVzaCA+IC5vLW1lZGlhX19pbWcge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4uby1tZWRpYS0tdGlueSA+IC5vLW1lZGlhX19pbWcge1xuICBtYXJnaW4tcmlnaHQ6IDZweDtcbn1cblxuLm8tbWVkaWEtLXRpbnkuby1tZWRpYS0tcmV2ZXJzZSA+IC5vLW1lZGlhX19pbWcge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIG1hcmdpbi1sZWZ0OiA2cHg7XG59XG5cbi5vLW1lZGlhLS1zbWFsbCA+IC5vLW1lZGlhX19pbWcge1xuICBtYXJnaW4tcmlnaHQ6IDEycHg7XG59XG5cbi5vLW1lZGlhLS1zbWFsbC5vLW1lZGlhLS1yZXZlcnNlID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG59XG5cbi5vLW1lZGlhLS1sYXJnZSA+IC5vLW1lZGlhX19pbWcge1xuICBtYXJnaW4tcmlnaHQ6IDQ4cHg7XG59XG5cbi5vLW1lZGlhLS1sYXJnZS5vLW1lZGlhLS1yZXZlcnNlID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWxlZnQ6IDQ4cHg7XG59XG5cbi5vLW1lZGlhLS1odWdlID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogOTZweDtcbn1cblxuLm8tbWVkaWEtLWh1Z2Uuby1tZWRpYS0tcmV2ZXJzZSA+IC5vLW1lZGlhX19pbWcge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIG1hcmdpbi1sZWZ0OiA5NnB4O1xufVxuXG4vKiBSZXZlcnNlZCBtZWRpYSBvYmplY3RzLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5vLW1lZGlhLS1yZXZlcnNlID4gLm8tbWVkaWFfX2ltZyB7XG4gIGZsb2F0OiByaWdodDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tbGVmdDogMjRweDtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNGTEFHXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBUaGUgZmxhZyBvYmplY3QgaXMgYSBkZXNpZ24gcGF0dGVybiBzaW1pbGFyIHRvIHRoZSBtZWRpYSBvYmplY3QsIGhvd2V2ZXIgaXRcbiAqIHV0aWxpc2VzIGBkaXNwbGF5OiB0YWJsZVstY2VsbF07YCB0byBnaXZlIHVzIGNvbnRyb2wgb3ZlciB0aGUgdmVydGljYWxcbiAqIGFsaWdubWVudHMgb2YgdGhlIHRleHQgYW5kIGltYWdlLlxuICpcbiAqIGh0dHA6Ly9jc3N3aXphcmRyeS5jb20vMjAxMy8wNS90aGUtZmxhZy1vYmplY3QvXG4gKlxuICogMS4gQWxsb3dzIHVzIHRvIGNvbnRyb2wgdmVydGljYWwgYWxpZ25tZW50cy5cbiAqIDIuIEZvcmNlIHRoZSBvYmplY3QgdG8gYmUgdGhlIGZ1bGwgd2lkdGggb2YgaXRzIHBhcmVudC4gQ29tYmluZWQgd2l0aCBbMV0sXG4gKiAgICB0aGlzIG1ha2VzIHRoZSBvYmplY3QgYmVoYXZlIGluIGEgcXVhc2ktYGRpc3BsYXk6IGJsb2NrO2AgbWFubmVyLlxuICogMy4gUmVzZXQgaW5oZXJpdGVkIGBib3JkZXItc3BhY2luZ2AgZGVjbGFyYXRpb25zLlxuICovXG4uby1mbGFnIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIFsxXSAqL1xuICB3aWR0aDogMTAwJTtcbiAgLyogWzJdICovXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xuICAvKiBbM10gKi9cbn1cblxuLyoqXG4gICAqIEl0ZW1zIHdpdGhpbiBhIGZsYWcgb2JqZWN0LiBUaGVyZSBzaG91bGQgb25seSBldmVyIGJlIG9uZSBvZiBlYWNoLlxuICAgKlxuICAgKiAxLiBEZWZhdWx0IHRvIGFsaWduaW5nIGNvbnRlbnQgdG8gdGhlaXIgbWlkZGxlcy5cbiAgICovXG4uby1mbGFnX19pbWcsXG4uby1mbGFnX19ib2R5IHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgLyogWzFdICovXG59XG5cbi8qKlxuICAgKiBGbGFnIGltYWdlcyBoYXZlIGEgc3BhY2UgYmV0d2VlbiB0aGVtIGFuZCB0aGUgYm9keSBvZiB0aGUgb2JqZWN0LlxuICAgKlxuICAgKiAxLiBGb3JjZSBgLmZsYWdfX2ltZ2AgdG8gdGFrZSB1cCBhcyBsaXR0bGUgc3BhY2UgYXMgcG9zc2libGU6XG4gICAqICAgIGh0dHBzOi8vcGl4ZWxzdnNieXRlcy5jb20vMjAxMi8wMi90aGlzLWNzcy1sYXlvdXQtZ3JpZC1pcy1uby1ob2x5LWdyYWlsL1xuICAgKi9cbi5vLWZsYWdfX2ltZyB7XG4gIHdpZHRoOiAxcHg7XG4gIC8qIFsxXSAqL1xuICBwYWRkaW5nLXJpZ2h0OiAyNHB4O1xuICAvKipcbiAgICAgKiAxLiBGaXhlcyBwcm9ibGVtIHdpdGggaW1hZ2VzIGRpc2FwcGVhcmluZy5cbiAgICAgKi9cbn1cblxuLm8tZmxhZ19faW1nID4gaW1nIHtcbiAgbWF4LXdpZHRoOiBub25lO1xuICAvKiBbMV0gKi9cbn1cblxuLyoqXG4gICAqIFRoZSBjb250YWluZXIgZm9yIHRoZSBtYWluIGNvbnRlbnQgb2YgdGhlIGZsYWcgb2JqZWN0LlxuICAgKlxuICAgKiAxLiBGb3JjZXMgdGhlIGAuZmxhZ19fYm9keWAgdG8gdGFrZSB1cCBhbGwgcmVtYWluaW5nIHNwYWNlLlxuICAgKi9cbi5vLWZsYWdfX2JvZHkge1xuICB3aWR0aDogYXV0bztcbiAgLyogWzFdICovXG59XG5cbi5vLWZsYWdfX2JvZHksXG4uby1mbGFnX19ib2R5ID4gOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4vKiBTaXplIHZhcmlhbnRzLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5vLWZsYWctLWZsdXNoID4gLm8tZmxhZ19faW1nIHtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xufVxuXG4uby1mbGFnLS10aW55ID4gLm8tZmxhZ19faW1nIHtcbiAgcGFkZGluZy1yaWdodDogNnB4O1xufVxuXG4uby1mbGFnLS10aW55Lm8tZmxhZy0tcmV2ZXJzZSA+IC5vLWZsYWdfX2ltZyB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIHBhZGRpbmctbGVmdDogNnB4O1xufVxuXG4uby1mbGFnLS1zbWFsbCA+IC5vLWZsYWdfX2ltZyB7XG4gIHBhZGRpbmctcmlnaHQ6IDEycHg7XG59XG5cbi5vLWZsYWctLXNtYWxsLm8tZmxhZy0tcmV2ZXJzZSA+IC5vLWZsYWdfX2ltZyB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMTJweDtcbn1cblxuLm8tZmxhZy0tbGFyZ2UgPiAuby1mbGFnX19pbWcge1xuICBwYWRkaW5nLXJpZ2h0OiA0OHB4O1xufVxuXG4uby1mbGFnLS1sYXJnZS5vLWZsYWctLXJldmVyc2UgPiAuby1mbGFnX19pbWcge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDQ4cHg7XG59XG5cbi5vLWZsYWctLWh1Z2UgPiAuby1mbGFnX19pbWcge1xuICBwYWRkaW5nLXJpZ2h0OiA5NnB4O1xufVxuXG4uby1mbGFnLS1odWdlLm8tZmxhZy0tcmV2ZXJzZSA+IC5vLWZsYWdfX2ltZyB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIHBhZGRpbmctbGVmdDogOTZweDtcbn1cblxuLyogUmV2ZXJzZWQgZmxhZy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFN3YXAgdGhlIHJlbmRlcmVkIGRpcmVjdGlvbiBvZiB0aGUgb2JqZWN04oCmXG4gKiAyLiDigKZhbmQgcmVzZXQgaXQuXG4gKiAzLiBSZWFzc2lnbiBtYXJnaW5zIHRvIHRoZSBjb3JyZWN0IHNpZGVzLlxuICovXG4uby1mbGFnLS1yZXZlcnNlIHtcbiAgZGlyZWN0aW9uOiBydGw7XG4gIC8qIFsxXSAqL1xufVxuXG4uby1mbGFnLS1yZXZlcnNlID4gLm8tZmxhZ19faW1nLFxuLm8tZmxhZy0tcmV2ZXJzZSA+IC5vLWZsYWdfX2JvZHkge1xuICBkaXJlY3Rpb246IGx0cjtcbiAgLyogWzJdICovXG59XG5cbi5vLWZsYWctLXJldmVyc2UgPiAuby1mbGFnX19pbWcge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAvKiBbM10gKi9cbiAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICAvKiBbM10gKi9cbn1cblxuLyogQWxpZ25tZW50IHZhcmlhbnRzLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogVmVydGljYWxseSBhbGlnbiB0aGUgaW1hZ2UtIGFuZCBib2R5LWNvbnRlbnQgZGlmZmVyZW50bHkuIERlZmF1bHRzIHRvIG1pZGRsZS5cbiAqL1xuLm8tZmxhZy0tdG9wID4gLm8tZmxhZ19faW1nLFxuLm8tZmxhZy0tdG9wID4gLm8tZmxhZ19fYm9keSB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi5vLWZsYWctLWJvdHRvbSA+IC5vLWZsYWdfX2ltZyxcbi5vLWZsYWctLWJvdHRvbSA+IC5vLWZsYWdfX2JvZHkge1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI0xJU1QtQkFSRVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogU3RyaXAgbGlzdC1saWtlIGFwcGVhcmFuY2UgZnJvbSBsaXN0cyBieSByZW1vdmluZyB0aGVpciBidWxsZXRzLCBhbmQgYW55XG4gKiBpbmRlbnRhdGlvbi5cbiAqXG4gKiBOb3RlOiBEZWNsYXJpbmcgdGhlIGl0ZW0tY2xhc3MgbWlnaHQgbm90IGJlIG5lY2Vzc2FyeSBldmVyeXdoZXJlIGJ1dFxuICogaXMgZm9yIGV4YW1wbGUgaW4gPGRsPiBsaXN0cyBmb3IgdGhlIDxkZD4gY2hpbGRzLlxuICovXG4uby1saXN0LWJhcmUge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLm8tbGlzdC1iYXJlX19pdGVtIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjTElTVC1JTkxJTkVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFRoZSBsaXN0LWlubGluZSBvYmplY3Qgc2ltcGx5IGRpc3BsYXlzIGEgbGlzdCBvZiBpdGVtcyBpbiBvbmUgbGluZS5cbiAqL1xuLm8tbGlzdC1pbmxpbmUge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLm8tbGlzdC1pbmxpbmVfX2l0ZW0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjQkxPQ0tcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFN0YWNrZWQgaW1hZ2Utd2l0aC10ZXh0IG9iamVjdC4gQSBzaW1wbGUgYWJzdHJhY3Rpb24gdG8gY292ZXIgYSB2ZXJ5IGNvbW1vbmx5XG4gKiBvY2N1cnJpbmcgZGVzaWduIHBhdHRlcm4uXG4gKi9cbi5vLWJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm8tYmxvY2tfX2ltZyB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gIC8qIFNpemUgdmFyaWFudHMuXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xufVxuXG4uby1ibG9jay0tZmx1c2ggPiAuby1ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLm8tYmxvY2stLXRpbnkgPiAuby1ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xufVxuXG4uby1ibG9jay0tc21hbGwgPiAuby1ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcbn1cblxuLm8tYmxvY2stLWxhcmdlID4gLm8tYmxvY2tfX2ltZyB7XG4gIG1hcmdpbi1ib3R0b206IDQ4cHg7XG59XG5cbi5vLWJsb2NrLS1odWdlID4gLm8tYmxvY2tfX2ltZyB7XG4gIG1hcmdpbi1ib3R0b206IDk2cHg7XG59XG5cbi5vLWJsb2NrX19ib2R5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qIEFsaWdubWVudCB2YXJpYW50cy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4uby1ibG9jay0tcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLm8tYmxvY2stLWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgT2JqZWN0cy9IZWFkaW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIENvbXBvbmVudHMvQnV0dG9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5jLWJ1dHRvbl9fYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgYm9yZGVyOiAzcHggc29saWQgIzAwMDAwMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHBhZGRpbmc6IDEycHggNDhweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbjogYWxsIC4ycztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gIC5jLWJ1dHRvbl9fYnV0dG9uIHtcbiAgICBtYXgtd2lkdGg6IDQ4MHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gIC5jLWJ1dHRvbl9fYnV0dG9uIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgd2lkdGg6IGluaGVyaXQ7XG4gIH1cbn1cblxuLmMtYnV0dG9uX19idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuXG4uYy1idXR0b25fX2J1dHRvbjpob3ZlciAuYy1idXR0b25fX3RleHQsXG4uYy1idXR0b25fX2J1dHRvbjpob3ZlciAuYy1idXR0b25fX2FuZ2xlLXJpZ2h0IHtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG5cbi5jLWJ1dHRvbl9fdGV4dCxcbi5jLWJ1dHRvbl9fYW5nbGUtcmlnaHQge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgdHJhbnNpdGlvbjogYWxsIC4ycztcbn1cblxuLmMtYnV0dG9uX190ZXh0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNzE0Mjg1NzE7XG59XG5cbi5jLWJ1dHRvbl9fYW5nbGUtcmlnaHQge1xuICBtYXJnaW4tbGVmdDogMTJweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMThweDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBsaW5lLWhlaWdodDogMS43MTQyODU3MTtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNDTEVBUkZJWFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQXR0YWNoIG91ciBjbGVhcmZpeCBtaXhpbiB0byBhIHV0aWxpdHkgY2xhc3MuXG4gKi9cbi51LWNsZWFyZml4OmFmdGVyIHtcbiAgY29udGVudDogXCJcIiAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICBjbGVhcjogYm90aCAhaW1wb3J0YW50O1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI1dJRFRIU1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogaW51aXRjc3MgZ2VuZXJhdGVzIGEgc2VyaWVzIG9mIHV0aWxpdHkgY2xhc3NlcyB0aGF0IGdpdmUgYSBmbHVpZCB3aWR0aCB0b1xuICogd2hpY2hldmVyIGVsZW1lbnQgdGhleeKAmXJlIGFwcGxpZWQsIGUuZy46XG4gKlxuICogICA8aW1nIHNyYz1cIlwiIGFsdD1cIlwiIGNsYXNzPVwidS0xLzJcIiAvPlxuICpcbiAqIFRoZXNlIGNsYXNzZXMgYXJlIG1vc3QgY29tbW9ubHkgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIG91ciBsYXlvdXQgc3lzdGVtLFxuICogZS5nLjpcbiAqXG4gKiAgIDxkaXYgY2xhc3M9XCJvLWxheW91dF9faXRlbSAgdS0xLzJcIj5cbiAqXG4gKiBCeSBkZWZhdWx0LCBpbnVpdGNzcyB3aWxsIGFsc28gZ2VuZXJhdGUgcmVzcG9uc2l2ZSB2YXJpYW50cyBvZiBlYWNoIG9mIHRoZXNlXG4gKiBjbGFzc2VzIGJ5IHVzaW5nIHlvdXIgU2FzcyBNUSBjb25maWd1cmF0aW9uLCBlLmcuOlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMSAgdS0xLzJAdGFibGV0ICB1LTEvM0BkZXNrdG9wXCI+XG4gKlxuICogT3B0aW9uYWxseSwgaW51aXRjc3MgY2FuIGdlbmVyYXRlIG9mZnNldCBjbGFzc2VzIHdoaWNoIGNhbiBwdXNoIGFuZCBwdWxsXG4gKiBlbGVtZW50cyBsZWZ0IGFuZCByaWdodCBieSBhIHNwZWNpZmllZCBhbW91bnQsIGUuZy46XG4gKlxuICogICA8ZGl2IGNsYXNzPVwiby1sYXlvdXRfX2l0ZW0gIHUtMi8zICB1LXB1bGwtMS8zXCI+XG4gKlxuICogVGhpcyBpcyB1c2VmdWwgZm9yIG1ha2luZyB2ZXJ5IGdyYW51bGFyIGNoYW5nZXMgdG8gdGhlIHJlbmRlcmVkIG9yZGVyIG9mXG4gKiBpdGVtcyBpbiBhIGxheW91dC5cbiAqXG4gKiBOLkIuIFRoaXMgb3B0aW9uIGlzIHR1cm5lZCBvZmYgYnkgZGVmYXVsdC5cbiAqL1xuLyoqXG4gKiBBIHNlcmllcyBvZiB3aWR0aCBoZWxwZXIgY2xhc3NlcyB0aGF0IHlvdSBjYW4gdXNlIHRvIHNpemUgdGhpbmdzIGxpa2UgZ3JpZFxuICogc3lzdGVtcy4gQ2xhc3NlcyB0YWtlIGEgZnJhY3Rpb24tbGlrZSBmb3JtYXQgKGUuZy4gYC51LTIvM2ApLiBVc2UgdGhlc2UgaW5cbiAqIHlvdXIgbWFya3VwOlxuICpcbiAqIDxkaXYgY2xhc3M9XCJ1LTcvMTJcIj5cbiAqXG4gKiBUaGUgZm9sbG93aW5nIHdpbGwgZ2VuZXJhdGUgd2lkdGhzIGhlbHBlciBjbGFzc2VzIGJhc2VkIG9uIHRoZSBmcmFjdGlvbnNcbiAqIGRlZmluZWQgaW4gdGhlIGAkaW51aXQtZnJhY3Rpb25zYCBsaXN0LlxuICovXG4udS0xXFwvMSB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbi51LTFcXC8yIHtcbiAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xufVxuXG4udS0yXFwvMiB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbi51LTFcXC8zIHtcbiAgd2lkdGg6IDMzLjMzMzMzMzMzJSAhaW1wb3J0YW50O1xufVxuXG4udS0yXFwvMyB7XG4gIHdpZHRoOiA2Ni42NjY2NjY2NyUgIWltcG9ydGFudDtcbn1cblxuLnUtM1xcLzMge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xufVxuXG4udS0xXFwvNCB7XG4gIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbn1cblxuLnUtMlxcLzQge1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG59XG5cbi51LTNcXC80IHtcbiAgd2lkdGg6IDc1JSAhaW1wb3J0YW50O1xufVxuXG4udS00XFwvNCB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbi51LTFcXC81IHtcbiAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xufVxuXG4udS0yXFwvNSB7XG4gIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbn1cblxuLnUtM1xcLzUge1xuICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7XG59XG5cbi51LTRcXC81IHtcbiAgd2lkdGg6IDgwJSAhaW1wb3J0YW50O1xufVxuXG4udS01XFwvNSB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogSWYgd2XigJlyZSB1c2luZyBTYXNzLU1RLCBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlIGdyaWQgc3lzdGVtKHMpIGZvciBlYWNoIG9mIG91clxuICogZGVmaW5lZCBicmVha3BvaW50cywgYW5kIGdpdmUgdGhlbSBhIFJlc3BvbnNpdmUgU3VmZml4LCBlLmcuOlxuICpcbiAqIDxkaXYgY2xhc3M9XCJ1LTMvMTJAbW9iaWxlXCI+XG4gKi9cbkBtZWRpYSAobWluLXdpZHRoOiAyMGVtKSB7XG4gIC51LTFcXC8xXFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTFcXC8yXFxAbW9iaWxlIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzJcXEBtb2JpbGUge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMVxcLzNcXEBtb2JpbGUge1xuICAgIHdpZHRoOiAzMy4zMzMzMzMzMyUgIWltcG9ydGFudDtcbiAgfVxuICAudS0yXFwvM1xcQG1vYmlsZSB7XG4gICAgd2lkdGg6IDY2LjY2NjY2NjY3JSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTNcXC8zXFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTFcXC80XFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzRcXEBtb2JpbGUge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0zXFwvNFxcQG1vYmlsZSB7XG4gICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTRcXC80XFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTFcXC81XFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzVcXEBtb2JpbGUge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0zXFwvNVxcQG1vYmlsZSB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTRcXC81XFxAbW9iaWxlIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtNVxcLzVcXEBtb2JpbGUge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ2LjI1ZW0pIHtcbiAgLnUtMVxcLzFcXEB0YWJsZXQge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMVxcLzJcXEB0YWJsZXQge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0yXFwvMlxcQHRhYmxldCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0xXFwvM1xcQHRhYmxldCB7XG4gICAgd2lkdGg6IDMzLjMzMzMzMzMzJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTJcXC8zXFxAdGFibGV0IHtcbiAgICB3aWR0aDogNjYuNjY2NjY2NjclICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtM1xcLzNcXEB0YWJsZXQge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMVxcLzRcXEB0YWJsZXQge1xuICAgIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbiAgfVxuICAudS0yXFwvNFxcQHRhYmxldCB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTNcXC80XFxAdGFibGV0IHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtNFxcLzRcXEB0YWJsZXQge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMVxcLzVcXEB0YWJsZXQge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0yXFwvNVxcQHRhYmxldCB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTNcXC81XFxAdGFibGV0IHtcbiAgICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtNFxcLzVcXEB0YWJsZXQge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS01XFwvNVxcQHRhYmxldCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjEuMjVlbSkge1xuICAudS0xXFwvMVxcQGRlc2t0b3Age1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMVxcLzJcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzJcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTFcXC8zXFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDMzLjMzMzMzMzMzJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTJcXC8zXFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDY2LjY2NjY2NjY3JSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTNcXC8zXFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0xXFwvNFxcQGRlc2t0b3Age1xuICAgIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbiAgfVxuICAudS0yXFwvNFxcQGRlc2t0b3Age1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0zXFwvNFxcQGRlc2t0b3Age1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgfVxuICAudS00XFwvNFxcQGRlc2t0b3Age1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMVxcLzVcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzVcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtM1xcLzVcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtNFxcLzVcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtNVxcLzVcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4MS4yNWVtKSB7XG4gIC51LTFcXC8xXFxAd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0xXFwvMlxcQHdpZGUge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0yXFwvMlxcQHdpZGUge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMVxcLzNcXEB3aWRlIHtcbiAgICB3aWR0aDogMzMuMzMzMzMzMzMlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzNcXEB3aWRlIHtcbiAgICB3aWR0aDogNjYuNjY2NjY2NjclICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtM1xcLzNcXEB3aWRlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTFcXC80XFxAd2lkZSB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTJcXC80XFxAd2lkZSB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTNcXC80XFxAd2lkZSB7XG4gICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTRcXC80XFxAd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0xXFwvNVxcQHdpZGUge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0yXFwvNVxcQHdpZGUge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0zXFwvNVxcQHdpZGUge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS00XFwvNVxcQHdpZGUge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS01XFwvNVxcQHdpZGUge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMGVtKSB7XG4gIC51LTFcXC8xXFxAdS13aWRlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTFcXC8yXFxAdS13aWRlIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzJcXEB1LXdpZGUge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMVxcLzNcXEB1LXdpZGUge1xuICAgIHdpZHRoOiAzMy4zMzMzMzMzMyUgIWltcG9ydGFudDtcbiAgfVxuICAudS0yXFwvM1xcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDY2LjY2NjY2NjY3JSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTNcXC8zXFxAdS13aWRlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTFcXC80XFxAdS13aWRlIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzRcXEB1LXdpZGUge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0zXFwvNFxcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTRcXC80XFxAdS13aWRlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTFcXC81XFxAdS13aWRlIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtMlxcLzVcXEB1LXdpZGUge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbiAgfVxuICAudS0zXFwvNVxcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICB9XG4gIC51LTRcXC81XFxAdS13aWRlIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtNVxcLzVcXEB1LXdpZGUge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNTUEFDSU5HU1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogVXRpbGl0eSBjbGFzc2VzIHRvIHB1dCBzcGVjaWZpYyBzcGFjaW5nIHZhbHVlcyBvbnRvIGVsZW1lbnRzLiBUaGUgYmVsb3cgbG9vcFxuICogd2lsbCBnZW5lcmF0ZSB1cyBhIHN1aXRlIG9mIGNsYXNzZXMgbGlrZTpcbiAqXG4gKiAgIC51LW1hcmdpbi10b3Age31cbiAqICAgLnUtcGFkZGluZy1sZWZ0LWxhcmdlIHt9XG4gKiAgIC51LW1hcmdpbi1yaWdodC1zbWFsbCB7fVxuICogICAudS1wYWRkaW5nIHt9XG4gKiAgIC51LXBhZGRpbmctcmlnaHQtbm9uZSB7fVxuICogICAudS1wYWRkaW5nLWhvcml6b250YWwge31cbiAqICAgLnUtcGFkZGluZy12ZXJ0aWNhbC1zbWFsbCB7fVxuICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBzdHJpbmctcXVvdGVzICovXG4udS1wYWRkaW5nIHtcbiAgcGFkZGluZzogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXRpbnkge1xuICBwYWRkaW5nOiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1zbWFsbCB7XG4gIHBhZGRpbmc6IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1sYXJnZSB7XG4gIHBhZGRpbmc6IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1odWdlIHtcbiAgcGFkZGluZzogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLW5vbmUge1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdG9wIHtcbiAgcGFkZGluZy10b3A6IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy10b3AtdGlueSB7XG4gIHBhZGRpbmctdG9wOiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy10b3Atc21hbGwge1xuICBwYWRkaW5nLXRvcDogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXRvcC1sYXJnZSB7XG4gIHBhZGRpbmctdG9wOiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdG9wLWh1Z2Uge1xuICBwYWRkaW5nLXRvcDogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXRvcC1ub25lIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1yaWdodCB7XG4gIHBhZGRpbmctcmlnaHQ6IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1yaWdodC10aW55IHtcbiAgcGFkZGluZy1yaWdodDogNnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctcmlnaHQtc21hbGwge1xuICBwYWRkaW5nLXJpZ2h0OiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctcmlnaHQtbGFyZ2Uge1xuICBwYWRkaW5nLXJpZ2h0OiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctcmlnaHQtaHVnZSB7XG4gIHBhZGRpbmctcmlnaHQ6IDk2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1yaWdodC1ub25lIHtcbiAgcGFkZGluZy1yaWdodDogMCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWJvdHRvbSB7XG4gIHBhZGRpbmctYm90dG9tOiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctYm90dG9tLXRpbnkge1xuICBwYWRkaW5nLWJvdHRvbTogNnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctYm90dG9tLXNtYWxsIHtcbiAgcGFkZGluZy1ib3R0b206IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ib3R0b20tbGFyZ2Uge1xuICBwYWRkaW5nLWJvdHRvbTogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWJvdHRvbS1odWdlIHtcbiAgcGFkZGluZy1ib3R0b206IDk2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ib3R0b20tbm9uZSB7XG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctbGVmdCB7XG4gIHBhZGRpbmctbGVmdDogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWxlZnQtdGlueSB7XG4gIHBhZGRpbmctbGVmdDogNnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctbGVmdC1zbWFsbCB7XG4gIHBhZGRpbmctbGVmdDogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWxlZnQtbGFyZ2Uge1xuICBwYWRkaW5nLWxlZnQ6IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1sZWZ0LWh1Z2Uge1xuICBwYWRkaW5nLWxlZnQ6IDk2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1sZWZ0LW5vbmUge1xuICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ob3Jpem9udGFsIHtcbiAgcGFkZGluZy1sZWZ0OiAyNHB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ob3Jpem9udGFsLXRpbnkge1xuICBwYWRkaW5nLWxlZnQ6IDZweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ob3Jpem9udGFsLXNtYWxsIHtcbiAgcGFkZGluZy1sZWZ0OiAxMnB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ob3Jpem9udGFsLWxhcmdlIHtcbiAgcGFkZGluZy1sZWZ0OiA0OHB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ob3Jpem9udGFsLWh1Z2Uge1xuICBwYWRkaW5nLWxlZnQ6IDk2cHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWhvcml6b250YWwtbm9uZSB7XG4gIHBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdmVydGljYWwge1xuICBwYWRkaW5nLXRvcDogMjRweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXZlcnRpY2FsLXRpbnkge1xuICBwYWRkaW5nLXRvcDogNnB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy12ZXJ0aWNhbC1zbWFsbCB7XG4gIHBhZGRpbmctdG9wOiAxMnB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdmVydGljYWwtbGFyZ2Uge1xuICBwYWRkaW5nLXRvcDogNDhweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXZlcnRpY2FsLWh1Z2Uge1xuICBwYWRkaW5nLXRvcDogOTZweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXZlcnRpY2FsLW5vbmUge1xuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4ge1xuICBtYXJnaW46IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXRpbnkge1xuICBtYXJnaW46IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tc21hbGwge1xuICBtYXJnaW46IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWxhcmdlIHtcbiAgbWFyZ2luOiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1odWdlIHtcbiAgbWFyZ2luOiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1ub25lIHtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi10b3Age1xuICBtYXJnaW4tdG9wOiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi10b3AtdGlueSB7XG4gIG1hcmdpbi10b3A6IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tdG9wLXNtYWxsIHtcbiAgbWFyZ2luLXRvcDogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tdG9wLWxhcmdlIHtcbiAgbWFyZ2luLXRvcDogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tdG9wLWh1Z2Uge1xuICBtYXJnaW4tdG9wOiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi10b3Atbm9uZSB7XG4gIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXJpZ2h0IHtcbiAgbWFyZ2luLXJpZ2h0OiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1yaWdodC10aW55IHtcbiAgbWFyZ2luLXJpZ2h0OiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXJpZ2h0LXNtYWxsIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1yaWdodC1sYXJnZSB7XG4gIG1hcmdpbi1yaWdodDogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tcmlnaHQtaHVnZSB7XG4gIG1hcmdpbi1yaWdodDogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tcmlnaHQtbm9uZSB7XG4gIG1hcmdpbi1yaWdodDogMCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tYm90dG9tIHtcbiAgbWFyZ2luLWJvdHRvbTogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tYm90dG9tLXRpbnkge1xuICBtYXJnaW4tYm90dG9tOiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWJvdHRvbS1zbWFsbCB7XG4gIG1hcmdpbi1ib3R0b206IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWJvdHRvbS1sYXJnZSB7XG4gIG1hcmdpbi1ib3R0b206IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWJvdHRvbS1odWdlIHtcbiAgbWFyZ2luLWJvdHRvbTogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tYm90dG9tLW5vbmUge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1sZWZ0IHtcbiAgbWFyZ2luLWxlZnQ6IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWxlZnQtdGlueSB7XG4gIG1hcmdpbi1sZWZ0OiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWxlZnQtc21hbGwge1xuICBtYXJnaW4tbGVmdDogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tbGVmdC1sYXJnZSB7XG4gIG1hcmdpbi1sZWZ0OiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1sZWZ0LWh1Z2Uge1xuICBtYXJnaW4tbGVmdDogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tbGVmdC1ub25lIHtcbiAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWhvcml6b250YWwge1xuICBtYXJnaW4tbGVmdDogMjRweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWhvcml6b250YWwtdGlueSB7XG4gIG1hcmdpbi1sZWZ0OiA2cHggIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWhvcml6b250YWwtc21hbGwge1xuICBtYXJnaW4tbGVmdDogMTJweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWhvcml6b250YWwtbGFyZ2Uge1xuICBtYXJnaW4tbGVmdDogNDhweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWhvcml6b250YWwtaHVnZSB7XG4gIG1hcmdpbi1sZWZ0OiA5NnB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1yaWdodDogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4taG9yaXpvbnRhbC1ub25lIHtcbiAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi12ZXJ0aWNhbCB7XG4gIG1hcmdpbi10b3A6IDI0cHggIWltcG9ydGFudDtcbiAgbWFyZ2luLWJvdHRvbTogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tdmVydGljYWwtdGlueSB7XG4gIG1hcmdpbi10b3A6IDZweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXZlcnRpY2FsLXNtYWxsIHtcbiAgbWFyZ2luLXRvcDogMTJweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi12ZXJ0aWNhbC1sYXJnZSB7XG4gIG1hcmdpbi10b3A6IDQ4cHggIWltcG9ydGFudDtcbiAgbWFyZ2luLWJvdHRvbTogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tdmVydGljYWwtaHVnZSB7XG4gIG1hcmdpbi10b3A6IDk2cHggIWltcG9ydGFudDtcbiAgbWFyZ2luLWJvdHRvbTogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tdmVydGljYWwtbm9uZSB7XG4gIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcbiAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuXG4vKiBzdHlsZWxpbnQtZW5hYmxlIHN0cmluZy1xdW90ZXMgKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjUkVTUE9OU0lWRS1TUEFDSU5HU1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogVXRpbGl0eSBjbGFzc2VzIGVuaGFuY2luZyB0aGUgbm9ybWFsIHNwYWNpbmcgY2xhc3NlcyBieSBhZGRpbmcgcmVzcG9uc2l2ZW5lc3NcbiAqIHRvIHRoZW0uIEJ5IGRlZmF1bHQgdGhpcyBicmluZ3MgdXMgdGhlIGZvbGxvd2luZyBjbGFzc2VzOlxuICpcbiAqICAgLnUtbWFyZ2luLWJvdHRvbS1ub25lQG1vYmlsZSB7fVxuICogICAudS1tYXJnaW4tYm90dG9tLW5vbmVAdGFibGV0IHt9XG4gKiAgIC51LW1hcmdpbi1ib3R0b20tbm9uZUBkZXNrdG9wIHt9XG4gKiAgIC51LW1hcmdpbi1ib3R0b20tbm9uZUB3aWRlIHt9XG4gKlxuICogQnV0IHdlIGNhbiBhZmZlY3QgdGhlIGNsYXNzZXMgdGhhdCBnZXQgZ2VuZXJhdGVkIGJ5IGFsdGVyaW5nIHRoZSBhcHByb3ByaWF0ZVxuICogU2FzcyBtYXBzIGJlbG93LlxuICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBtYXgtbmVzdGluZy1kZXB0aCAqL1xuQG1lZGlhIChtaW4td2lkdGg6IDIwZW0pIHtcbiAgLnUtbWFyZ2luLWJvdHRvbS1ub25lXFxAbW9iaWxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ2LjI1ZW0pIHtcbiAgLnUtbWFyZ2luLWJvdHRvbS1ub25lXFxAdGFibGV0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDYxLjI1ZW0pIHtcbiAgLnUtbWFyZ2luLWJvdHRvbS1ub25lXFxAZGVza3RvcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4MS4yNWVtKSB7XG4gIC51LW1hcmdpbi1ib3R0b20tbm9uZVxcQHdpZGUge1xuICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAwZW0pIHtcbiAgLnUtbWFyZ2luLWJvdHRvbS1ub25lXFxAdS13aWRlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLyogc3R5bGVsaW50LWVuYWJsZSBtYXgtbmVzdGluZy1kZXB0aCAqL1xuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNQUklOVFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogVmVyeSBjcnVkZSwgcmVzZXQtbGlrZSBzdHlsZXMgdGFrZW4gZnJvbSB0aGUgSFRNTDUgQm9pbGVycGxhdGU6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vaDVicC9odG1sNS1ib2lsZXJwbGF0ZS9ibG9iLzUuMy4wL2Rpc3QvZG9jL2Nzcy5tZCNwcmludC1zdHlsZXNcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9oNWJwL2h0bWw1LWJvaWxlcnBsYXRlL2Jsb2IvbWFzdGVyL2Rpc3QvY3NzL21haW4uY3NzI0wyMDUtTDI4MlxuICovXG5AbWVkaWEgcHJpbnQge1xuICAvKipcbiAgICogMS4gQmxhY2sgcHJpbnRzIGZhc3RlcjogaHR0cDovL3d3dy5zYW5iZWlqaS5jb20vYXJjaGl2ZXMvOTUzXG4gICAqL1xuICAqLFxuICAqOmJlZm9yZSxcbiAgKjphZnRlcixcbiAgKjpmaXJzdC1sZXR0ZXIsXG4gICo6Zmlyc3QtbGluZSB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgIC8qIFsxXSAqL1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIGEsXG4gIGE6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cbiAgYVtocmVmXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XG4gIH1cbiAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgfVxuICAvKipcbiAgICogRG9uJ3Qgc2hvdyBsaW5rcyB0aGF0IGFyZSBmcmFnbWVudCBpZGVudGlmaWVycywgb3IgdXNlIHRoZSBgamF2YXNjcmlwdDpgXG4gICAqIHBzZXVkbyBwcm90b2NvbC5cbiAgICovXG4gIGFbaHJlZl49XCIjXCJdOmFmdGVyLFxuICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuICAvKipcbiAgICogUHJpbnRpbmcgVGFibGVzOiBodHRwOi8vY3NzLWRpc2N1c3MuaW5jdXRpby5jb20vd2lraS9QcmludGluZ19UYWJsZXNcbiAgICovXG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIH1cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgcCxcbiAgaDIsXG4gIGgzIHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMztcbiAgfVxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjSElERVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogSGlkZSBvbmx5IHZpc3VhbGx5LCBidXQgaGF2ZSBpdCBhdmFpbGFibGUgZm9yIHNjcmVlbiByZWFkZXJzOlxuICogaHR0cDovL3Nub29rLmNhL2FyY2hpdmVzL2h0bWxfYW5kX2Nzcy9oaWRpbmctY29udGVudC1mb3ItYWNjZXNzaWJpbGl0eVxuICovXG4udS1oaWRkZW4tdmlzdWFsbHkge1xuICBib3JkZXI6IDAgIWltcG9ydGFudDtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKSAhaW1wb3J0YW50O1xuICBjbGlwLXBhdGg6IGluc2V0KDUwJSkgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxcHggIWltcG9ydGFudDtcbiAgbWFyZ2luOiAtMXB4ICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuICB3aWR0aDogMXB4ICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogSGlkZSB2aXN1YWxseSBhbmQgZnJvbSBzY3JlZW4gcmVhZGVycy5cbiAqL1xuLnUtaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgVXRpbGl0aWVzL0hpZGUgUmVzcG9uc2l2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbkBtZWRpYSAobWluLXdpZHRoOiAyMGVtKSB7XG4gIC51LWhpZGRlblxcQG1vYmlsZSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIC51LXNob3duXFxAbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtZGlzcGxheS1ibG9jay51LXNob3duXFxAbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG4gIC51LWRpc3BsYXktaW5saW5lLWJsb2NrLnUtc2hvd25cXEBtb2JpbGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xuICB9XG4gIC51LWRpc3BsYXktaW5saW5lLnUtc2hvd25cXEBtb2JpbGUge1xuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gIC51LWhpZGRlblxcQHRhYmxldCB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIC51LXNob3duXFxAdGFibGV0IHtcbiAgICBkaXNwbGF5OiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtZGlzcGxheS1ibG9jay51LXNob3duXFxAdGFibGV0IHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG4gIC51LWRpc3BsYXktaW5saW5lLWJsb2NrLnUtc2hvd25cXEB0YWJsZXQge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xuICB9XG4gIC51LWRpc3BsYXktaW5saW5lLnUtc2hvd25cXEB0YWJsZXQge1xuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gIC51LWhpZGRlblxcQGRlc2t0b3Age1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAudS1zaG93blxcQGRlc2t0b3Age1xuICAgIGRpc3BsYXk6IGluaGVyaXQgIWltcG9ydGFudDtcbiAgfVxuICAudS1kaXNwbGF5LWJsb2NrLnUtc2hvd25cXEBkZXNrdG9wIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG4gIC51LWRpc3BsYXktaW5saW5lLWJsb2NrLnUtc2hvd25cXEBkZXNrdG9wIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcbiAgfVxuICAudS1kaXNwbGF5LWlubGluZS51LXNob3duXFxAZGVza3RvcCB7XG4gICAgZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDgxLjI1ZW0pIHtcbiAgLnUtaGlkZGVuXFxAd2lkZSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIC51LXNob3duXFxAd2lkZSB7XG4gICAgZGlzcGxheTogaW5oZXJpdCAhaW1wb3J0YW50O1xuICB9XG4gIC51LWRpc3BsYXktYmxvY2sudS1zaG93blxcQHdpZGUge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtZGlzcGxheS1pbmxpbmUtYmxvY2sudS1zaG93blxcQHdpZGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xuICB9XG4gIC51LWRpc3BsYXktaW5saW5lLnUtc2hvd25cXEB3aWRlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAwZW0pIHtcbiAgLnUtaGlkZGVuXFxAdS13aWRlIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtc2hvd25cXEB1LXdpZGUge1xuICAgIGRpc3BsYXk6IGluaGVyaXQgIWltcG9ydGFudDtcbiAgfVxuICAudS1kaXNwbGF5LWJsb2NrLnUtc2hvd25cXEB1LXdpZGUge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtZGlzcGxheS1pbmxpbmUtYmxvY2sudS1zaG93blxcQHUtd2lkZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnUtZGlzcGxheS1pbmxpbmUudS1zaG93blxcQHUtd2lkZSB7XG4gICAgZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFV0aWxpdGllcy9Db25zdHJhaW5cbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG4udS1jb25zdHJhaW4tLWh1Z2Uge1xuICBtYXgtd2lkdGg6IDE0MDBweDtcbn1cblxuLnUtY29uc3RyYWluLS1sYXJnZSB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xufVxuXG4udS1jb25zdHJhaW4ge1xuICBtYXgtd2lkdGg6IDEwMjRweDtcbn1cblxuLnUtY29uc3RyYWluLS1zbWFsbCB7XG4gIG1heC13aWR0aDogNzY4cHg7XG59XG5cbi51LWNvbnN0cmFpbi0tdGlueSB7XG4gIG1heC13aWR0aDogNjAwcHg7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBVdGlsaXRpZXMvRmxleFxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi51LWZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4udS1mbGV4LS1jZW50ZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnUtZmxleC0tcmlnaHQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4udS1mbGV4LS1jZW50ZXItbWlkZGxlIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi51LWZsZXgtLWJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFNoYW1lXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5KbGMyOTFjbU5sY3k5emRIbHNaWE12YldGcGJpNXpZM056SWl3aWJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMM05sZEhScGJtZHpMMTl6WlhSMGFXNW5jeTVqYjNKbExuTmpjM01pTENKeVpYTnZkWEpqWlhNdmMzUjViR1Z6TDE5elpYUjBhVzVuY3k1amIyeHZjbk11YzJOemN5SXNJbkpsYzI5MWNtTmxjeTl6ZEhsc1pYTXZYM05sZEhScGJtZHpMblJ5WVc1emFYUnBiMjV6TG5OamMzTWlMQ0p5WlhOdmRYSmpaWE12YzNSNWJHVnpMMTl6WlhSMGFXNW5jeTV0WldGemRYSmxiV1Z1ZEhNdWMyTnpjeUlzSW5KbGMyOTFjbU5sY3k5emRIbHNaWE12YkdsaWN5OWliR0ZqYXkxMGFXVXVjMk56Y3lJc0ltNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WTNOekwzQnNlWEl1YzJOemN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5elkzTnpMM1poY21saFlteGxjeTV6WTNOeklpd2libTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOamMzTXZiV2w0YVc1ekxuTmpjM01pTENKdWIyUmxYMjF2WkhWc1pYTXZhVzUxYVhSamMzTXZkRzl2YkhNdlgzUnZiMnh6TG1admJuUXRjMmw2WlM1elkzTnpJaXdpY21WemIzVnlZMlZ6TDNOMGVXeGxjeTlmZEc5dmJITXVabTl1ZEhNdWMyTnpjeUlzSW01dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OTBiMjlzY3k5ZmRHOXZiSE11WTJ4bFlYSm1hWGd1YzJOemN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5cGJuVnBkR056Y3k5MGIyOXNjeTlmZEc5dmJITXVhR2xrWkdWdUxuTmpjM01pTENKdWIyUmxYMjF2WkhWc1pYTXZjMkZ6Y3kxdGNTOWZiWEV1YzJOemN5SXNJbkpsYzI5MWNtTmxjeTl6ZEhsc1pYTXZYM1J2YjJ4ekxtRnNhV0Z6WlhNdWMyTnpjeUlzSW5KbGMyOTFjbU5sY3k5emRIbHNaWE12WDNSdmIyeHpMbTFwZUdsdWN5NXpZM056SWl3aWNtVnpiM1Z5WTJWekwzTjBlV3hsY3k5ZmRHOXZiSE11WTI5c2IzSXVjMk56Y3lJc0luSmxjMjkxY21ObGN5OXpkSGxzWlhNdlgzUnZiMnh6TG1KMWRIUnZiaTV6WTNOeklpd2libTlrWlY5dGIyUjFiR1Z6TDJsdWRXbDBZM056TDJkbGJtVnlhV012WDJkbGJtVnlhV011WW05NExYTnBlbWx1Wnk1elkzTnpJaXdpYm05a1pWOXRiMlIxYkdWekwybHVkV2wwWTNOekwyZGxibVZ5YVdNdlgyZGxibVZ5YVdNdWJtOXliV0ZzYVhwbExuTmpjM01pTENKdWIyUmxYMjF2WkhWc1pYTXZhVzUxYVhSamMzTXZaMlZ1WlhKcFl5OWZaMlZ1WlhKcFl5NXlaWE5sZEM1elkzTnpJaXdpYm05a1pWOXRiMlIxYkdWekwybHVkV2wwWTNOekwyZGxibVZ5YVdNdlgyZGxibVZ5YVdNdWMyaGhjbVZrTG5OamMzTWlMQ0p1YjJSbFgyMXZaSFZzWlhNdmFXNTFhWFJqYzNNdlpXeGxiV1Z1ZEhNdlgyVnNaVzFsYm5SekxuQmhaMlV1YzJOemN5SXNJbkpsYzI5MWNtTmxjeTl6ZEhsc1pYTXZYMlZzWlcxbGJuUnpMbkJoWjJVdWMyTnpjeUlzSW01dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OWxiR1Z0Wlc1MGN5OWZaV3hsYldWdWRITXVhVzFoWjJWekxuTmpjM01pTENKdWIyUmxYMjF2WkhWc1pYTXZhVzUxYVhSamMzTXZaV3hsYldWdWRITXZYMlZzWlcxbGJuUnpMblJoWW14bGN5NXpZM056SWl3aWNtVnpiM1Z5WTJWekwzTjBlV3hsY3k5ZlpXeGxiV1Z1ZEhNdWJHbHVhM011YzJOemN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5cGJuVnBkR056Y3k5dlltcGxZM1J6TDE5dlltcGxZM1J6TG5keVlYQndaWEl1YzJOemN5SXNJbkpsYzI5MWNtTmxjeTl6ZEhsc1pYTXZYMjlpYW1WamRITXVkM0poY0hCbGNpNXpZM056SWl3aWJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMMjlpYW1WamRITXZYMjlpYW1WamRITXViR0Y1YjNWMExuTmpjM01pTENKeVpYTnZkWEpqWlhNdmMzUjViR1Z6TDE5dlltcGxZM1J6TG14aGVXOTFkQzV6WTNOeklpd2libTlrWlY5dGIyUjFiR1Z6TDJsdWRXbDBZM056TDI5aWFtVmpkSE12WDI5aWFtVmpkSE11YldWa2FXRXVjMk56Y3lJc0ltNXZaR1ZmYlc5a2RXeGxjeTlwYm5WcGRHTnpjeTl2WW1wbFkzUnpMMTl2WW1wbFkzUnpMbVpzWVdjdWMyTnpjeUlzSW01dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OXZZbXBsWTNSekwxOXZZbXBsWTNSekxteHBjM1F0WW1GeVpTNXpZM056SWl3aWJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMMjlpYW1WamRITXZYMjlpYW1WamRITXViR2x6ZEMxcGJteHBibVV1YzJOemN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5cGJuVnBkR056Y3k5dlltcGxZM1J6TDE5dlltcGxZM1J6TG1Kc2IyTnJMbk5qYzNNaUxDSnlaWE52ZFhKalpYTXZjM1I1YkdWekwxOXZZbXBsWTNSekxtaGxZV1JwYm1jdWMyTnpjeUlzSW5KbGMyOTFjbU5sY3k5emRIbHNaWE12WDJOdmJYQnZibVZ1ZEhNdVluVjBkRzl1TG5OamMzTWlMQ0p1YjJSbFgyMXZaSFZzWlhNdmFXNTFhWFJqYzNNdmRYUnBiR2wwYVdWekwxOTFkR2xzYVhScFpYTXVZMnhsWVhKbWFYZ3VjMk56Y3lJc0ltNXZaR1ZmYlc5a2RXeGxjeTlwYm5WcGRHTnpjeTkxZEdsc2FYUnBaWE12WDNWMGFXeHBkR2xsY3k1M2FXUjBhSE11YzJOemN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5cGJuVnBkR056Y3k5MWRHbHNhWFJwWlhNdlgzVjBhV3hwZEdsbGN5NXpjR0ZqYVc1bmN5NXpZM056SWl3aWJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMM1YwYVd4cGRHbGxjeTlmZFhScGJHbDBhV1Z6TG5KbGMzQnZibk5wZG1VdGMzQmhZMmx1WjNNdWMyTnpjeUlzSW01dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OTFkR2xzYVhScFpYTXZYM1YwYVd4cGRHbGxjeTV3Y21sdWRDNXpZM056SWl3aWJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMM1YwYVd4cGRHbGxjeTlmZFhScGJHbDBhV1Z6TG1ocFpHVXVjMk56Y3lJc0luSmxjMjkxY21ObGN5OXpkSGxzWlhNdlgzVjBhV3hwZEdsbGN5NW9hV1JsTFhKbGMzQnZibk5wZG1VdWMyTnpjeUlzSW5KbGMyOTFjbU5sY3k5emRIbHNaWE12WDNWMGFXeHBkR2xsY3k1amIyNXpkSEpoYVc0dWMyTnpjeUlzSW5KbGMyOTFjbU5sY3k5emRIbHNaWE12WDNWMGFXeHBkR2xsY3k1bWJHVjRMbk5qYzNNaUxDSnlaWE52ZFhKalpYTXZjM1I1YkdWekwxOXphR0Z0WlM1elkzTnpJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4dklGTkZWRlJKVGtkVFhHNUFhVzF3YjNKMElGd2lMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMM05sZEhScGJtZHpMM05sZEhScGJtZHpMbU52Y21WY0lqdGNia0JwYlhCdmNuUWdYQ0p6WlhSMGFXNW5jeTVqYjJ4dmNuTmNJanRjYmtCcGJYQnZjblFnWENKelpYUjBhVzVuY3k1MGNtRnVjMmwwYVc5dWMxd2lPMXh1UUdsdGNHOXlkQ0JjSW5ObGRIUnBibWR6TG0xbFlYTjFjbVZ0Wlc1MGMxd2lPMXh1WEc1Y2JpOHZJRXhKUWxKQlVrbEZVMXh1SkdKMExXWnZiblF0Y0dGMGFEb2dKeTltYjI1MGN5OWliR0ZqYXkxMGFXVXZabTl1ZEhNbk8xeHVRR2x0Y0c5eWRDQmNJbXhwWW5NdllteGhZMnN0ZEdsbExuTmpjM05jSWp0Y2JrQnBiWEJ2Y25RZ1hDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZjR3g1Y2k5emNtTXZjMk56Y3k5d2JIbHlMbk5qYzNOY0lqdGNibHh1WEc0dkx5QlVUMDlNVTF4dVFHbHRjRzl5ZENCY0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OTBiMjlzY3k5MGIyOXNjeTVtYjI1MExYTnBlbVZjSWp0Y2JrQnBiWEJ2Y25RZ1hDSjBiMjlzY3k1bWIyNTBjMXdpTzF4dVFHbHRjRzl5ZENCY0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OTBiMjlzY3k5MGIyOXNjeTVqYkdWaGNtWnBlRndpTzF4dVFHbHRjRzl5ZENCY0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OTBiMjlzY3k5MGIyOXNjeTVvYVdSa1pXNWNJanRjYmlSdGNTMWljbVZoYTNCdmFXNTBjem9nS0Z4dUlDQnRiMkpwYkdVNklDQXpNakJ3ZUN4Y2JpQWdkR0ZpYkdWME9pQWdOelF3Y0hnc1hHNGdJR1JsYzJ0MGIzQTZJRGs0TUhCNExGeHVJQ0IzYVdSbE9pQWdJQ0F4TXpBd2NIZ3NYRzRnSUhVdGQybGtaVG9nSURFMk1EQndlRnh1S1R0Y2JrQnBiWEJ2Y25RZ1hDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZjMkZ6Y3kxdGNTOXRjVndpTzF4dVFHbHRjRzl5ZENCY0luUnZiMnh6TG1Gc2FXRnpaWE5jSWp0Y2JrQnBiWEJ2Y25RZ1hDSjBiMjlzY3k1dGFYaHBibk5jSWp0Y2JrQnBiWEJ2Y25RZ1hDSjBiMjlzY3k1amIyeHZjbHdpTzF4dVFHbHRjRzl5ZENCY0luUnZiMnh6TG1KMWRIUnZibHdpTzF4dVhHNWNiaTh2SUVkRlRrVlNTVU5jYmtCcGJYQnZjblFnWENJdUxpOHVMaTl1YjJSbFgyMXZaSFZzWlhNdmFXNTFhWFJqYzNNdloyVnVaWEpwWXk5blpXNWxjbWxqTG1KdmVDMXphWHBwYm1kY0lqdGNia0JwYlhCdmNuUWdYQ0l1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YVc1MWFYUmpjM012WjJWdVpYSnBZeTluWlc1bGNtbGpMbTV2Y20xaGJHbDZaVndpTzF4dVFHbHRjRzl5ZENCY0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OW5aVzVsY21sakwyZGxibVZ5YVdNdWNtVnpaWFJjSWp0Y2JrQnBiWEJ2Y25RZ1hDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZhVzUxYVhSamMzTXZaMlZ1WlhKcFl5OW5aVzVsY21sakxuTm9ZWEpsWkZ3aU8xeHVYRzVjYmk4dklFVk1SVTFGVGxSVFhHNUFhVzF3YjNKMElGd2lMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMMlZzWlcxbGJuUnpMMlZzWlcxbGJuUnpMbkJoWjJWY0lqdGNia0JwYlhCdmNuUWdYQ0psYkdWdFpXNTBjeTV3WVdkbFhDSTdYRzVBYVcxd2IzSjBJRndpTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDJsdWRXbDBZM056TDJWc1pXMWxiblJ6TDJWc1pXMWxiblJ6TG1sdFlXZGxjMXdpTzF4dVFHbHRjRzl5ZENCY0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OWxiR1Z0Wlc1MGN5OWxiR1Z0Wlc1MGN5NTBZV0pzWlhOY0lqdGNia0JwYlhCdmNuUWdYQ0psYkdWdFpXNTBjeTVzYVc1cmMxd2lPMXh1WEc1Y2JpOHZJRTlDU2tWRFZGTmNia0JwYlhCdmNuUWdYQ0l1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YVc1MWFYUmpjM012YjJKcVpXTjBjeTl2WW1wbFkzUnpMbmR5WVhCd1pYSmNJanRjYmtCcGJYQnZjblFnWENKdlltcGxZM1J6TG5keVlYQndaWEpjSWp0Y2JrQnBiWEJ2Y25RZ1hDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZhVzUxYVhSamMzTXZiMkpxWldOMGN5OXZZbXBsWTNSekxteGhlVzkxZEZ3aU8xeHVRR2x0Y0c5eWRDQmNJbTlpYW1WamRITXViR0Y1YjNWMFhDSTdYRzVBYVcxd2IzSjBJRndpTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDJsdWRXbDBZM056TDI5aWFtVmpkSE12YjJKcVpXTjBjeTV0WldScFlWd2lPMXh1UUdsdGNHOXlkQ0JjSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5cGJuVnBkR056Y3k5dlltcGxZM1J6TDI5aWFtVmpkSE11Wm14aFoxd2lPMXh1UUdsdGNHOXlkQ0JjSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5cGJuVnBkR056Y3k5dlltcGxZM1J6TDI5aWFtVmpkSE11YkdsemRDMWlZWEpsWENJN1hHNUFhVzF3YjNKMElGd2lMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMMjlpYW1WamRITXZiMkpxWldOMGN5NXNhWE4wTFdsdWJHbHVaVndpTzF4dVFHbHRjRzl5ZENCY0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OXZZbXBsWTNSekwyOWlhbVZqZEhNdVlteHZZMnRjSWp0Y2JrQnBiWEJ2Y25RZ1hDSnZZbXBsWTNSekxtaGxZV1JwYm1kY0lqdGNibHh1WEc0dkx5QkRUMDFRVDA1RlRsUlRYRzVBYVcxd2IzSjBJRndpWTI5dGNHOXVaVzUwY3k1aWRYUjBiMjVjSWp0Y2JseHVYRzR2THlCVlZFbE1TVlJKUlZOY2JrQnBiWEJ2Y25RZ1hDSXVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZhVzUxYVhSamMzTXZkWFJwYkdsMGFXVnpMM1YwYVd4cGRHbGxjeTVqYkdWaGNtWnBlRndpTzF4dVFHbHRjRzl5ZENCY0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXBiblZwZEdOemN5OTFkR2xzYVhScFpYTXZkWFJwYkdsMGFXVnpMbmRwWkhSb2Mxd2lPMXh1UUdsdGNHOXlkQ0JjSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5cGJuVnBkR056Y3k5MWRHbHNhWFJwWlhNdmRYUnBiR2wwYVdWekxuTndZV05wYm1kelhDSTdYRzVBYVcxd2IzSjBJRndpTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDJsdWRXbDBZM056TDNWMGFXeHBkR2xsY3k5MWRHbHNhWFJwWlhNdWNtVnpjRzl1YzJsMlpTMXpjR0ZqYVc1bmMxd2lPMXh1UUdsdGNHOXlkQ0JjSWk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5cGJuVnBkR056Y3k5MWRHbHNhWFJwWlhNdmRYUnBiR2wwYVdWekxuQnlhVzUwWENJN1hHNUFhVzF3YjNKMElGd2lMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMMmx1ZFdsMFkzTnpMM1YwYVd4cGRHbGxjeTkxZEdsc2FYUnBaWE11YUdsa1pWd2lPMXh1UUdsdGNHOXlkQ0JjSW5WMGFXeHBkR2xsY3k1b2FXUmxMWEpsYzNCdmJuTnBkbVZjSWp0Y2JrQnBiWEJ2Y25RZ1hDSjFkR2xzYVhScFpYTXVZMjl1YzNSeVlXbHVYQ0k3WEc1QWFXMXdiM0owSUZ3aWRYUnBiR2wwYVdWekxtWnNaWGhjSWp0Y2JseHVRR2x0Y0c5eWRDQmNJbk5vWVcxbFhDSTdYRzRpTENJdkx5OHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z0lDQWpRMDlTUlZ4dUx5OGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeThnVkdocGN5QmpiM0psSUdacGJHVWdjMlYwY3lCMWNDQnBiblZwZEdOemMrS0FtU0J0YjNOMElHbHRjRzl5ZEdGdWRDQnpaWFIxY0NCMllYSnBZV0pzWlhNdUlGUm9aWGxjYmk4dklIVnVaR1Z5Y0dsdUlHRWdiRzkwSUc5bUlHaHZkeUIwYUdVZ1puSmhiV1YzYjNKcklHWjFibU4wYVc5dWN5QmhibVFnYzJodmRXeGtJR0psSUcxdlpHbG1hV1ZrSUdGdVpGeHVMeThnY0hKbFkyOXVabWxuZFhKbFpDQjNhWFJvSUdOaGRYUnBiMjR1WEc1Y2JseHVMeThnUW1GelpTQjBlWEJ2WjNKaGNHaHBZMkZzSUhOMGVXeGxjeUJoYm1RZ1ltRnpaV3hwYm1VZ1ozSnBaQzRnV1c5MUlHNWxaV1FnZEc4Z1pHVm1hVzVsSUhSb1pYTmxJSFpoYkhWbGMxeHVMeThnYVc0Z2NHbDRaV3h6T2lCcGJuVnBkR056Y3lCM2FXeHNJR052Ym5abGNuUWdkR2hsYlNCMGJ5QnRiM0psSUdGd2NISnZjSEpwWVhSbElIVnVhWFJ6TGx4dVhHNGthVzUxYVhRdFoyeHZZbUZzTFdadmJuUXRjMmw2WlRvZ0lDQWdNVFp3ZUNBaFpHVm1ZWFZzZER0Y2JpUnBiblZwZEMxbmJHOWlZV3d0YkdsdVpTMW9aV2xuYUhRNklDQXlOSEI0SUNGa1pXWmhkV3gwTzF4dVhHNWNibHh1WEc1Y2JpOHZJRk53WVdOcGJtY2dkbUZzZFdWeklHRnlaU0JrWlhSbGNtMXBibVZrSUdKaGMyVmtJRzl1SUhsdmRYSWdjSEp2YW1WamRPS0FtWE1nWjJ4dlltRnNJR3hwYm1VZ2FHVnBaMmgwSUNocExtVmNiaTh2SUhsdmRYSWdZbUZ6Wld4cGJtVWdaM0pwWkNrdUlFbDBJR2x6SUc1dmRDQnlaV052YlcxbGJtUmxaQ0IwYUdGMElIbHZkU0J0YjJScFpua2dkR2hsYzJVZ1ptOXNiRzkzYVc1blhHNHZMeUIyWVhKcFlXSnNaWE1nS0dsMElHTmhiaUJpY21WaGF5QjViM1Z5SUhabGNuUnBZMkZzSUhKb2VYUm9iU2tzSUdKMWRDQnBaaUI1YjNVZ2JtVmxaQ0IwYnl3Z2VXOTFJR05oYmk1Y2JseHVKR2x1ZFdsMExXZHNiMkpoYkMxemNHRmphVzVuTFhWdWFYUTZJSEp2ZFc1a0tDUnBiblZwZEMxbmJHOWlZV3d0YkdsdVpTMW9aV2xuYUhRcElDRmtaV1poZFd4ME8xeHVYRzVjYmk4dklFaHZkeUJ0WVc1NUlIUnBiV1Z6SUd4aGNtZGxjaTl6YldGc2JHVnlJSFJvWVc0Z2RHaGxJR1JsWm1GMWJIUWdjMmh2ZFd4a0lHOTFjaUJ6Y0dGamFXNW5JSFZ1YVhSY2JpOHZJSFpoY21saGJuUnpJR0psUDF4dVhHNGthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMW1ZV04wYjNJdGRHbHVlVG9nSUNBd0xqSTFJQ0ZrWldaaGRXeDBPMXh1SkdsdWRXbDBMV2RzYjJKaGJDMXpjR0ZqYVc1bkxYVnVhWFF0Wm1GamRHOXlMWE50WVd4c09pQWdNQzQxSUNBaFpHVm1ZWFZzZER0Y2JpUnBiblZwZEMxbmJHOWlZV3d0YzNCaFkybHVaeTExYm1sMExXWmhZM1J2Y2kxc1lYSm5aVG9nSURJZ0lDQWdJV1JsWm1GMWJIUTdYRzRrYVc1MWFYUXRaMnh2WW1Gc0xYTndZV05wYm1jdGRXNXBkQzFtWVdOMGIzSXRhSFZuWlRvZ0lDQTBJQ0FnSUNGa1pXWmhkV3gwTzF4dVhHNWNibHh1WEc1Y2JpOHZJRU5vWldOcklIUm9ZWFFnZEdobElHTm9iM05sYmlCbWIyNTBJSEoxYkdWeklHRnlaU0J3YVhobGJDQnVkVzFpWlhKekxseHVYRzVBWldGamFDQWtYMmx1ZFdsMExXWnZiblF0WjJ4dlltRnNjeUJwYmx4dUlDQWdJQ0FnSkdsdWRXbDBMV2RzYjJKaGJDMW1iMjUwTFhOcGVtVmNiaUFnSUNBZ0lDUnBiblZwZEMxbmJHOWlZV3d0YkdsdVpTMW9aV2xuYUhRZ2UxeHVYRzRnSUVCcFppQW9kSGx3WlMxdlppZ2tYMmx1ZFdsMExXWnZiblF0WjJ4dlltRnNjeWtnUFQwZ2JuVnRZbVZ5S1NCN1hHNWNiaUFnSUNCQWFXWWdLSFZ1YVhRb0pGOXBiblZwZEMxbWIyNTBMV2RzYjJKaGJITXBJQ0U5SUZ3aWNIaGNJaWtnZTF4dUlDQWdJQ0FnUUdWeWNtOXlJRndpWUNON0pGOXBiblZwZEMxbWIyNTBMV2RzYjJKaGJITjlZQ0J1WldWa2N5QjBieUJpWlNCaElIQnBlR1ZzSUhaaGJIVmxMbHdpTzF4dUlDQWdJSDFjYmx4dUlDQjlJRUJsYkhObElIdGNiaUFnSUNCQVpYSnliM0lnWENKZ0kzc2tYMmx1ZFdsMExXWnZiblF0WjJ4dlltRnNjMzFnSUc1bFpXUnpJSFJ2SUdKbElHRWdiblZ0WW1WeUxsd2lPMXh1SUNCOVhHNWNibjFjYmx4dVhHNHZMeUJEYUdWamF5QjBhR0YwSUhSb1pTQmphRzl6Wlc0Z2MybDZaU0JtWVdOMGIzSnpJR0Z5WlNCMWJtbDBiR1Z6Y3lCdWRXMWlaWEp6TGx4dVhHNUFaV0ZqYUNBa1gybHVkV2wwTFhOd1lXTnBibWN0ZFc1cGRDQnBibHh1SUNBZ0lDQWdKR2x1ZFdsMExXZHNiMkpoYkMxemNHRmphVzVuTFhWdWFYUXRabUZqZEc5eUxYUnBibmxjYmlBZ0lDQWdJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMV1poWTNSdmNpMXpiV0ZzYkZ4dUlDQWdJQ0FnSkdsdWRXbDBMV2RzYjJKaGJDMXpjR0ZqYVc1bkxYVnVhWFF0Wm1GamRHOXlMV3hoY21kbFhHNGdJQ0FnSUNBa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZEMxbVlXTjBiM0l0YUhWblpTQjdYRzVjYmlBZ1FHbG1JQ2gwZVhCbExXOW1LQ1JmYVc1MWFYUXRjM0JoWTJsdVp5MTFibWwwS1NBOVBTQnVkVzFpWlhJcElIdGNibHh1SUNBZ0lFQnBaaUFvZFc1cGRHeGxjM01vSkY5cGJuVnBkQzF6Y0dGamFXNW5MWFZ1YVhRcElEMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQkFaWEp5YjNJZ1hDSmdJM3NrWDJsdWRXbDBMWE53WVdOcGJtY3RkVzVwZEgxZ0lHNWxaV1J6SUhSdklHSmxJSFZ1YVhSc1pYTnpMbHdpTzF4dUlDQWdJSDFjYmx4dUlDQjlJRUJsYkhObElIdGNiaUFnSUNCQVpYSnliM0lnWENKZ0kzc2tYMmx1ZFdsMExYTndZV05wYm1jdGRXNXBkSDFnSUc1bFpXUnpJSFJ2SUdKbElHRWdiblZ0WW1WeUxsd2lPMXh1SUNCOVhHNWNibjFjYmx4dVhHNHZMeUJRY21sMllYUmxMMlp5WVcxbGQyOXlheTF2Ym14NUlISmxZWE56YVdkdWJXVnVkQzRnUkc4Z2JtOTBJR0ZzZEdWeUlHRnVlWFJvYVc1bklHSmxiRzkzTGx4dVhHNGthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMTBhVzU1T2lBZ2NtOTFibVFvSkdsdWRXbDBMV2RzYjJKaGJDMXpjR0ZqYVc1bkxYVnVhWFFnS2lBa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZEMxbVlXTjBiM0l0ZEdsdWVTazdYRzRrYVc1MWFYUXRaMnh2WW1Gc0xYTndZV05wYm1jdGRXNXBkQzF6YldGc2JEb2djbTkxYm1Rb0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRZ0tpQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMW1ZV04wYjNJdGMyMWhiR3dwTzF4dUpHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGJHRnlaMlU2SUhKdmRXNWtLQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBJQ29nSkdsdWRXbDBMV2RzYjJKaGJDMXpjR0ZqYVc1bkxYVnVhWFF0Wm1GamRHOXlMV3hoY21kbEtUdGNiaVJwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMV2gxWjJVNklDQnliM1Z1WkNna2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZENBcUlDUnBiblZwZEMxbmJHOWlZV3d0YzNCaFkybHVaeTExYm1sMExXWmhZM1J2Y2kxb2RXZGxLVHRjYmlJc0lpOHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNGdJQ0JUWlhSMGFXNW5jeTlEYjJ4dmNuTmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpUmpiMnh2Y25NNklDaGNiaUFnZDJocGRHVTZJQ05tWm1abVptWXNYRzRnSUdKc1lXTnJPaUFqTURBd01EQXdYRzRwTzF4dVhHNGtZbUZ6WlMxMFpYaDBMV052Ykc5eUxXUmhjbXM2SUcxaGNDMW5aWFFvSkdOdmJHOXljeXdnSjJKc1lXTnJKeWs3WEc0a1ltRnpaUzEwWlhoMExXTnZiRzl5TFd4cFoyaDBPaUJ0WVhBdFoyVjBLQ1JqYjJ4dmNuTXNJQ2QzYUdsMFpTY3BPMXh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJRk5sZEhScGJtY3ZWSEpoYm5OcGRHbHZibk5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNGtZbUZ6WlMxMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpOeklHVmhjMlV0YVc0dGIzVjBPMXh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJRk5sZEhScGJtZHpMMDFsWVhOMWNtVnRaVzUwYzF4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1SkdobFlXUmxjaTFvWldsbmFIUXRiVzlpYVd4bE9pQTJNSEI0TzF4dUpHaGxZV1JsY2kxb1pXbG5hSFF0ZEdGaWJHVjBPaUE1TUhCNE8xeHVKR2hsWVdSbGNpMW9aV2xuYUhRdFpHVnphM1J2Y0RvZ01URXdjSGc3WEc0aUxDSXZLaUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVJQ0FnVkdobElFSnNZV05ySUZScFpTQkdiMjUwSUdseklHTnZiVzFsY21OcFlXd2djMjltZEhkaGNtVXVJRkJzWldGelpTQmtieUJ1YjNRZ1pHbHpkSEpwWW5WMFpTNWNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1QVptOXVkQzFtWVdObElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKMEpzWVdOcklGUnBaU2M3WEc0Z0lDQWdjM0pqT2lCMWNtd29KeTltYjI1MGN5OWliR0ZqYXkxMGFXVXZabTl1ZEhNdmMyOXNhV1F2UW14aFkydFVhV1V0VTI5c2FXUXRkMlZpWm05dWRDNWxiM1EvZGoweExqQXVNQ2NwTzF4dUlDQWdJSE55WXpvZ2RYSnNLQ2N2Wm05dWRITXZZbXhoWTJzdGRHbGxMMlp2Ym5SekwzTnZiR2xrTDBKc1lXTnJWR2xsTFZOdmJHbGtMWGRsWW1admJuUXVaVzkwUHlOcFpXWnBlQ1oyUFRFdU1DNHdKeWtnWm05eWJXRjBLQ2RsYldKbFpHUmxaQzF2Y0dWdWRIbHdaU2NwTEZ4dUlDQWdJQ0FnSUNBZ2RYSnNLQ2N2Wm05dWRITXZZbXhoWTJzdGRHbGxMMlp2Ym5SekwzTnZiR2xrTDBKc1lXTnJWR2xsTFZOdmJHbGtMWGRsWW1admJuUXVkMjltWmpJL2RqMHhMakF1TUNjcElHWnZjbTFoZENnbmQyOW1aakluS1N4Y2JpQWdJQ0FnSUNBZ0lIVnliQ2duTDJadmJuUnpMMkpzWVdOckxYUnBaUzltYjI1MGN5OXpiMnhwWkM5Q2JHRmphMVJwWlMxVGIyeHBaQzEzWldKbWIyNTBMbmR2Wm1ZL2RqMHhMakF1TUNjcElHWnZjbTFoZENnbmQyOW1aaWNwTEZ4dUlDQWdJQ0FnSUNBZ2RYSnNLQ2N2Wm05dWRITXZZbXhoWTJzdGRHbGxMMlp2Ym5SekwzTnZiR2xrTDBKc1lXTnJWR2xsTFZOdmJHbGtMWGRsWW1admJuUXVkSFJtUDNZOU1TNHdMakFuS1NCbWIzSnRZWFFvSjNSeWRXVjBlWEJsSnlrc1hHNGdJQ0FnSUNBZ0lDQjFjbXdvSnk5bWIyNTBjeTlpYkdGamF5MTBhV1V2Wm05dWRITXZjMjlzYVdRdlFteGhZMnRVYVdVdFUyOXNhV1F0ZDJWaVptOXVkQzV6ZG1jL2RqMHhMakF1TUNOaWJHRmphMTkwYVdWemIyeHBaQ2NwSUdadmNtMWhkQ2duYzNabkp5azdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGt3TUR0Y2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc1OVhHNUFabTl1ZEMxbVlXTmxJSHRjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjBKc1lXTnJJRlJwWlNjN1hHNGdJQ0FnYzNKak9pQjFjbXdvSnk5bWIyNTBjeTlpYkdGamF5MTBhV1V2Wm05dWRITXZZbTlzWkM5Q2JHRmphMVJwWlMxQ2IyeGtMWGRsWW1admJuUXVaVzkwUDNZOU1TNHdMakFuS1R0Y2JpQWdJQ0J6Y21NNklIVnliQ2duTDJadmJuUnpMMkpzWVdOckxYUnBaUzltYjI1MGN5OWliMnhrTDBKc1lXTnJWR2xsTFVKdmJHUXRkMlZpWm05dWRDNWxiM1EvSTJsbFptbDRKblk5TVM0d0xqQW5LU0JtYjNKdFlYUW9KMlZ0WW1Wa1pHVmtMVzl3Wlc1MGVYQmxKeWtzWEc0Z0lDQWdJQ0FnSUNCMWNtd29KeTltYjI1MGN5OWliR0ZqYXkxMGFXVXZabTl1ZEhNdlltOXNaQzlDYkdGamExUnBaUzFDYjJ4a0xYZGxZbVp2Ym5RdWQyOW1aakkvZGoweExqQXVNQ2NwSUdadmNtMWhkQ2duZDI5bVpqSW5LU3hjYmlBZ0lDQWdJQ0FnSUhWeWJDZ25MMlp2Ym5SekwySnNZV05yTFhScFpTOW1iMjUwY3k5aWIyeGtMMEpzWVdOclZHbGxMVUp2YkdRdGQyVmlabTl1ZEM1M2IyWm1QM1k5TVM0d0xqQW5LU0JtYjNKdFlYUW9KM2R2Wm1ZbktTeGNiaUFnSUNBZ0lDQWdJSFZ5YkNnbkwyWnZiblJ6TDJKc1lXTnJMWFJwWlM5bWIyNTBjeTlpYjJ4a0wwSnNZV05yVkdsbExVSnZiR1F0ZDJWaVptOXVkQzUwZEdZL2RqMHhMakF1TUNjcElHWnZjbTFoZENnbmRISjFaWFI1Y0dVbktTeGNiaUFnSUNBZ0lDQWdJSFZ5YkNnbkwyWnZiblJ6TDJKc1lXTnJMWFJwWlM5bWIyNTBjeTlpYjJ4a0wwSnNZV05yVkdsbExVSnZiR1F0ZDJWaVptOXVkQzV6ZG1jL2RqMHhMakF1TUNOaWJHRmphMTkwYVdWaWIyeGtKeWtnWm05eWJXRjBLQ2R6ZG1jbktUdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYm4xY2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFuUW14aFkyc2dWR2xsSnp0Y2JpQWdJQ0J6Y21NNklIVnliQ2duTDJadmJuUnpMMkpzWVdOckxYUnBaUzltYjI1MGN5OXlaV2QxYkdGeUwwSnNZV05yVkdsbExWSmxaM1ZzWVhJdGQyVmlabTl1ZEM1bGIzUS9kajB4TGpBdU1DY3BPMXh1SUNBZ0lITnlZem9nZFhKc0tDY3ZabTl1ZEhNdllteGhZMnN0ZEdsbEwyWnZiblJ6TDNKbFozVnNZWEl2UW14aFkydFVhV1V0VW1WbmRXeGhjaTEzWldKbWIyNTBMbVZ2ZEQ4amFXVm1hWGdtZGoweExqQXVNQ2NwSUdadmNtMWhkQ2duWlcxaVpXUmtaV1F0YjNCbGJuUjVjR1VuS1N4Y2JpQWdJQ0FnSUNBZ0lIVnliQ2duTDJadmJuUnpMMkpzWVdOckxYUnBaUzltYjI1MGN5OXlaV2QxYkdGeUwwSnNZV05yVkdsbExWSmxaM1ZzWVhJdGQyVmlabTl1ZEM1M2IyWm1NajkyUFRFdU1DNHdKeWtnWm05eWJXRjBLQ2QzYjJabU1pY3BMRnh1SUNBZ0lDQWdJQ0FnZFhKc0tDY3ZabTl1ZEhNdllteGhZMnN0ZEdsbEwyWnZiblJ6TDNKbFozVnNZWEl2UW14aFkydFVhV1V0VW1WbmRXeGhjaTEzWldKbWIyNTBMbmR2Wm1ZL2RqMHhMakF1TUNjcElHWnZjbTFoZENnbmQyOW1aaWNwTEZ4dUlDQWdJQ0FnSUNBZ2RYSnNLQ2N2Wm05dWRITXZZbXhoWTJzdGRHbGxMMlp2Ym5SekwzSmxaM1ZzWVhJdlFteGhZMnRVYVdVdFVtVm5kV3hoY2kxM1pXSm1iMjUwTG5SMFpqOTJQVEV1TUM0d0p5a2dabTl5YldGMEtDZDBjblZsZEhsd1pTY3BMRnh1SUNBZ0lDQWdJQ0FnZFhKc0tDY3ZabTl1ZEhNdllteGhZMnN0ZEdsbEwyWnZiblJ6TDNKbFozVnNZWEl2UW14aFkydFVhV1V0VW1WbmRXeGhjaTEzWldKbWIyNTBMbk4yWno5MlBURXVNQzR3STJKc1lXTnJYM1JwWlhKbFozVnNZWEluS1NCbWIzSnRZWFFvSjNOMlp5Y3BPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hHNGdJQ0FnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4dWZWeHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkQ2JHRmpheUJVYVdVbk8xeHVJQ0FnSUhOeVl6b2dkWEpzS0NjdlptOXVkSE12WW14aFkyc3RkR2xsTDJadmJuUnpMMnhwWjJoMEwwSnNZV05yVkdsbExVeHBaMmgwTFhkbFltWnZiblF1Wlc5MFAzWTlNUzR3TGpBbktUdGNiaUFnSUNCemNtTTZJSFZ5YkNnbkwyWnZiblJ6TDJKc1lXTnJMWFJwWlM5bWIyNTBjeTlzYVdkb2RDOUNiR0ZqYTFScFpTMU1hV2RvZEMxM1pXSm1iMjUwTG1WdmREOGphV1ZtYVhnbWRqMHhMakF1TUNjcElHWnZjbTFoZENnblpXMWlaV1JrWldRdGIzQmxiblI1Y0dVbktTeGNiaUFnSUNBZ0lDQWdJSFZ5YkNnbkwyWnZiblJ6TDJKc1lXTnJMWFJwWlM5bWIyNTBjeTlzYVdkb2RDOUNiR0ZqYTFScFpTMU1hV2RvZEMxM1pXSm1iMjUwTG5kdlptWXlQM1k5TVM0d0xqQW5LU0JtYjNKdFlYUW9KM2R2Wm1ZeUp5a3NYRzRnSUNBZ0lDQWdJQ0IxY213b0p5OW1iMjUwY3k5aWJHRmpheTEwYVdVdlptOXVkSE12YkdsbmFIUXZRbXhoWTJ0VWFXVXRUR2xuYUhRdGQyVmlabTl1ZEM1M2IyWm1QM1k5TVM0d0xqQW5LU0JtYjNKdFlYUW9KM2R2Wm1ZbktTeGNiaUFnSUNBZ0lDQWdJSFZ5YkNnbkwyWnZiblJ6TDJKc1lXTnJMWFJwWlM5bWIyNTBjeTlzYVdkb2RDOUNiR0ZqYTFScFpTMU1hV2RvZEMxM1pXSm1iMjUwTG5SMFpqOTJQVEV1TUM0d0p5a2dabTl5YldGMEtDZDBjblZsZEhsd1pTY3BMRnh1SUNBZ0lDQWdJQ0FnZFhKc0tDY3ZabTl1ZEhNdllteGhZMnN0ZEdsbEwyWnZiblJ6TDJ4cFoyaDBMMEpzWVdOclZHbGxMVXhwWjJoMExYZGxZbVp2Ym5RdWMzWm5QM1k5TVM0d0xqQWpZbXhoWTJ0ZmRHbGxiR2xuYUhRbktTQm1iM0p0WVhRb0ozTjJaeWNwTzF4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBeU1EQTdYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVmVnh1UUdadmJuUXRabUZqWlNCN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZEdiMjUwSUVGM1pYTnZiV1VnUW5KaGJtUnpKenRjYmlBZ0lDQnpjbU02SUhWeWJDZ25MMlp2Ym5SekwySnNZV05yTFhScFpTOW1iMjUwY3k5aWNtRnVaSE12Um05dWRFRjNaWE52YldWQ2NtRnVaSE10VW1WbmRXeGhjaTEzWldKbWIyNTBMbVZ2ZEQ5MlBURXVNQzR3SnlrN1hHNGdJQ0FnYzNKak9pQjFjbXdvSnk5bWIyNTBjeTlpYkdGamF5MTBhV1V2Wm05dWRITXZZbkpoYm1SekwwWnZiblJCZDJWemIyMWxRbkpoYm1SekxWSmxaM1ZzWVhJdGQyVmlabTl1ZEM1bGIzUS9JMmxsWm1sNEpuWTlNUzR3TGpBbktTQm1iM0p0WVhRb0oyVnRZbVZrWkdWa0xXOXdaVzUwZVhCbEp5a3NYRzRnSUNBZ2RYSnNLQ2N2Wm05dWRITXZZbXhoWTJzdGRHbGxMMlp2Ym5SekwySnlZVzVrY3k5R2IyNTBRWGRsYzI5dFpVSnlZVzVrY3kxU1pXZDFiR0Z5TFhkbFltWnZiblF1ZDI5bVpqSS9kajB4TGpBdU1DY3BJR1p2Y20xaGRDZ25kMjltWmpJbktTeGNiaUFnSUNCMWNtd29KeTltYjI1MGN5OWliR0ZqYXkxMGFXVXZabTl1ZEhNdlluSmhibVJ6TDBadmJuUkJkMlZ6YjIxbFFuSmhibVJ6TFZKbFozVnNZWEl0ZDJWaVptOXVkQzUzYjJabVAzWTlNUzR3TGpBbktTQm1iM0p0WVhRb0ozZHZabVluS1N4Y2JpQWdJQ0IxY213b0p5OW1iMjUwY3k5aWJHRmpheTEwYVdVdlptOXVkSE12WW5KaGJtUnpMMFp2Ym5SQmQyVnpiMjFsUW5KaGJtUnpMVkpsWjNWc1lYSXRkMlZpWm05dWRDNTBkR1kvZGoweExqQXVNQ2NwSUdadmNtMWhkQ2duZEhKMVpYUjVjR1VuS1N4Y2JpQWdJQ0IxY213b0p5OW1iMjUwY3k5aWJHRmpheTEwYVdVdlptOXVkSE12WW5KaGJtUnpMMFp2Ym5SQmQyVnpiMjFsUW5KaGJtUnpMVkpsWjNWc1lYSXRkMlZpWm05dWRDNXpkbWMvZGoweExqQXVNQ05tYjI1MFgyRjNaWE52YldWZlluSmhibVJ6Y21WbmRXeGhjaWNwSUdadmNtMWhkQ2duYzNabkp5azdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRzV2Y20xaGJEdGNiaUFnSUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hHNTlYRzR1WW5SekxGeHVMbUowWWl4Y2JpNWlkSElzWEc0dVluUnNMRnh1TG1aaFlpQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNBZ0lHWnZiblE2SUc1dmNtMWhiQ0J1YjNKdFlXd2dibTl5YldGc0lERTBjSGd2TVNCY0lrSnNZV05ySUZScFpWd2lPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dhVzVvWlhKcGREdGNiaUFnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nTFRFMExqSTROVGN4TkRJNUpUdGNiaUFnSUNCMFpYaDBMWEpsYm1SbGNtbHVaem9nWVhWMGJ6dGNiaUFnSUNBdGQyVmlhMmwwTFdadmJuUXRjMjF2YjNSb2FXNW5PaUJoYm5ScFlXeHBZWE5sWkR0Y2JpQWdJQ0F0Ylc5NkxXOXplQzFtYjI1MExYTnRiMjkwYUdsdVp6b2daM0poZVhOallXeGxPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLREFzSURBcE8xeHVmVnh1TG1KMGN5QjdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGt3TUR0Y2JuMWNiaTVpZEdJZ2UxeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc1OVhHNHVZblJzSUh0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ01qQXdPMXh1ZlZ4dUxtWmhZaUI3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVJtOXVkQ0JCZDJWemIyMWxJRUp5WVc1a2Mxd2lPMXh1ZlZ4dUx5b2diV0ZyWlhNZ2RHaGxJR1p2Ym5RZ01qVWxJSE50WVd4c1pYSWdjbVZzWVhScGRtVWdkRzhnZEdobElHbGpiMjRnWTI5dWRHRnBibVZ5SUNvdlhHNHVZblF0YzIwZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ0xqZGxiVHRjYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hHNTlYRzR2S2lCdFlXdGxjeUIwYUdVZ1ptOXVkQ0F6TXlVZ2JHRnlaMlZ5SUhKbGJHRjBhWFpsSUhSdklIUm9aU0JwWTI5dUlHTnZiblJoYVc1bGNpQXFMMXh1TG1KMExXeG5JSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREV1TXpNek16TXpNek5sYlR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01DNDNOV1Z0TzF4dWZWeHVMbUowTFRKNElIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklESmxiVHRjYm4xY2JpNWlkQzB6ZUNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBelpXMDdYRzU5WEc0dVluUXROSGdnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTkdWdE8xeHVmVnh1TG1KMExUVjRJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJRFZsYlR0Y2JuMWNiaTVpZEMxc1p5eGNiaTVpZEMweWVDeGNiaTVpZEMwemVDeGNiaTVpZEMwMGVDeGNiaTVpZEMwMWVDQjdYRzRnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUMwek1DVTdYRzU5WEc0dVluUXRabmNnZTF4dUlDQWdJSGRwWkhSb09pQXhMakk0TlRjeE5ESTVaVzA3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1ZlZ4dUxtSjBMWFZzSUh0Y2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklEQTdYRzRnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREl1TVRReU9EVTNNVFJsYlR0Y2JpQWdJQ0JzYVhOMExYTjBlV3hsTFhSNWNHVTZJRzV2Ym1VN1hHNTlYRzR1WW5RdGRXd2dQaUJzYVNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dWZWeHVMbUowTFd4cElIdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnYkdWbWREb2dMVEl1TVRReU9EVTNNVFJsYlR0Y2JpQWdJQ0IzYVdSMGFEb2dNaTR4TkRJNE5UY3hOR1Z0TzF4dUlDQWdJSFJ2Y0RvZ01DNHhOREk0TlRjeE5HVnRPMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNibjFjYmk1aWRDMXNhUzVpZEMxc1p5QjdYRzRnSUNBZ2JHVm1kRG9nTFRKbGJUdGNibjFjYmk1aWRDMWliM0prWlhJZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SUM0eVpXMDdYRzRnSUNBZ1ltOXlaR1Z5T2lCemIyeHBaQ0F3TGpBNFpXMGdJMlZsWldWbFpUdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF1TVdWdE8xeHVmVnh1TG5CMWJHd3RjbWxuYUhRZ2UxeHVJQ0FnSUdac2IyRjBPaUJ5YVdkb2REdGNibjFjYmk1d2RXeHNMV3hsWm5RZ2UxeHVJQ0FnSUdac2IyRjBPaUJzWldaME8xeHVmVnh1TG1KMGN5NXdkV3hzTFd4bFpuUXNYRzR1WW5SaUxuQjFiR3d0YkdWbWRDeGNiaTVpZEhJdWNIVnNiQzFzWldaMExGeHVMbUowYkM1d2RXeHNMV3hsWm5Rc1hHNHVabUZpTG5CMWJHd3RiR1ZtZENCN1hHNGdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXVNMlZ0TzF4dWZWeHVMbUowY3k1d2RXeHNMWEpwWjJoMExGeHVMbUowWWk1d2RXeHNMWEpwWjJoMExGeHVMbUowY2k1d2RXeHNMWEpwWjJoMExGeHVMbUowYkM1d2RXeHNMWEpwWjJoMExGeHVMbVpoWWk1d2RXeHNMWEpwWjJoMElIdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dMak5sYlR0Y2JuMWNiaTVpZEMxemNHbHVJSHRjYmlBZ0lDQXRkMlZpYTJsMExXRnVhVzFoZEdsdmJqb2dZblF0YzNCcGJpQXljeUJwYm1acGJtbDBaU0JzYVc1bFlYSTdYRzRnSUNBZ1lXNXBiV0YwYVc5dU9pQmlkQzF6Y0dsdUlESnpJR2x1Wm1sdWFYUmxJR3hwYm1WaGNqdGNibjFjYmk1aWRDMXdkV3h6WlNCN1hHNGdJQ0FnTFhkbFltdHBkQzFoYm1sdFlYUnBiMjQ2SUdKMExYTndhVzRnTVhNZ2FXNW1hVzVwZEdVZ2MzUmxjSE1vT0NrN1hHNGdJQ0FnWVc1cGJXRjBhVzl1T2lCaWRDMXpjR2x1SURGeklHbHVabWx1YVhSbElITjBaWEJ6S0RncE8xeHVmVnh1UUMxM1pXSnJhWFF0YTJWNVpuSmhiV1Z6SUdKMExYTndhVzRnZTF4dUlDQWdJREFsSUh0Y2JpQWdJQ0FnSUNBZ0xYZGxZbXRwZEMxMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnd1pHVm5LVHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTUdSbFp5azdYRzRnSUNBZ2ZWeHVJQ0FnSURFd01DVWdlMXh1SUNBZ0lDQWdJQ0F0ZDJWaWEybDBMWFJ5WVc1elptOXliVG9nY205MFlYUmxLRE0xT1dSbFp5azdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRE0xT1dSbFp5azdYRzRnSUNBZ2ZWeHVmVnh1UUd0bGVXWnlZVzFsY3lCaWRDMXpjR2x1SUh0Y2JpQWdJQ0F3SlNCN1hHNGdJQ0FnSUNBZ0lDMTNaV0pyYVhRdGRISmhibk5tYjNKdE9pQnliM1JoZEdVb01HUmxaeWs3WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RCa1pXY3BPMXh1SUNBZ0lIMWNiaUFnSUNBeE1EQWxJSHRjYmlBZ0lDQWdJQ0FnTFhkbFltdHBkQzEwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d6TlRsa1pXY3BPMXh1SUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d6TlRsa1pXY3BPMXh1SUNBZ0lIMWNibjFjYmk1aWRDMXliM1JoZEdVdE9UQWdlMXh1SUNBZ0lHWnBiSFJsY2pvZ2NISnZaMmxrT2tSWVNXMWhaMlZVY21GdWMyWnZjbTB1VFdsamNtOXpiMlowTGtKaGMybGpTVzFoWjJVb2NtOTBZWFJwYjI0OU1TazdYRzRnSUNBZ0xYZGxZbXRwZEMxMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnNU1HUmxaeWs3WEc0Z0lDQWdMVzF6TFhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0Rrd1pHVm5LVHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZzVNR1JsWnlrN1hHNTlYRzR1WW5RdGNtOTBZWFJsTFRFNE1DQjdYRzRnSUNBZ1ptbHNkR1Z5T2lCd2NtOW5hV1E2UkZoSmJXRm5aVlJ5WVc1elptOXliUzVOYVdOeWIzTnZablF1UW1GemFXTkpiV0ZuWlNoeWIzUmhkR2x2YmoweUtUdGNiaUFnSUNBdGQyVmlhMmwwTFhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RFNE1HUmxaeWs3WEc0Z0lDQWdMVzF6TFhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RFNE1HUmxaeWs3WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9NVGd3WkdWbktUdGNibjFjYmk1aWRDMXliM1JoZEdVdE1qY3dJSHRjYmlBZ0lDQm1hV3gwWlhJNklIQnliMmRwWkRwRVdFbHRZV2RsVkhKaGJuTm1iM0p0TGsxcFkzSnZjMjltZEM1Q1lYTnBZMGx0WVdkbEtISnZkR0YwYVc5dVBUTXBPMXh1SUNBZ0lDMTNaV0pyYVhRdGRISmhibk5tYjNKdE9pQnliM1JoZEdVb01qY3daR1ZuS1R0Y2JpQWdJQ0F0YlhNdGRISmhibk5tYjNKdE9pQnliM1JoZEdVb01qY3daR1ZuS1R0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d5TnpCa1pXY3BPMXh1ZlZ4dUxtSjBMV1pzYVhBdGFHOXlhWHB2Ym5SaGJDQjdYRzRnSUNBZ1ptbHNkR1Z5T2lCd2NtOW5hV1E2UkZoSmJXRm5aVlJ5WVc1elptOXliUzVOYVdOeWIzTnZablF1UW1GemFXTkpiV0ZuWlNoeWIzUmhkR2x2Ymowd0xDQnRhWEp5YjNJOU1TazdYRzRnSUNBZ0xYZGxZbXRwZEMxMGNtRnVjMlp2Y20wNklITmpZV3hsS0MweExDQXhLVHRjYmlBZ0lDQXRiWE10ZEhKaGJuTm1iM0p0T2lCelkyRnNaU2d0TVN3Z01TazdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQnpZMkZzWlNndE1Td2dNU2s3WEc1OVhHNHVZblF0Wm14cGNDMTJaWEowYVdOaGJDQjdYRzRnSUNBZ1ptbHNkR1Z5T2lCd2NtOW5hV1E2UkZoSmJXRm5aVlJ5WVc1elptOXliUzVOYVdOeWIzTnZablF1UW1GemFXTkpiV0ZuWlNoeWIzUmhkR2x2YmoweUxDQnRhWEp5YjNJOU1TazdYRzRnSUNBZ0xYZGxZbXRwZEMxMGNtRnVjMlp2Y20wNklITmpZV3hsS0RFc0lDMHhLVHRjYmlBZ0lDQXRiWE10ZEhKaGJuTm1iM0p0T2lCelkyRnNaU2d4TENBdE1TazdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQnpZMkZzWlNneExDQXRNU2s3WEc1OVhHNDZjbTl2ZENBdVluUXRjbTkwWVhSbExUa3dMRnh1T25KdmIzUWdMbUowTFhKdmRHRjBaUzB4T0RBc1hHNDZjbTl2ZENBdVluUXRjbTkwWVhSbExUSTNNQ3hjYmpweWIyOTBJQzVpZEMxbWJHbHdMV2h2Y21sNmIyNTBZV3dzWEc0NmNtOXZkQ0F1WW5RdFpteHBjQzEyWlhKMGFXTmhiQ0I3WEc0Z0lDQWdabWxzZEdWeU9pQnViMjVsTzF4dWZWeHVMbUowTFhOMFlXTnJJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNBZ0lIZHBaSFJvT2lBeExqSTROVGN4TkRJNVpXMDdYRzRnSUNBZ2FHVnBaMmgwT2lBeFpXMDdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREZsYlR0Y2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbUZ6Wld4cGJtVTdYRzU5WEc0dVluUXRjM1JoWTJzdGMyMGdlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCMGIzQTZJREE3WEc0Z0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dhVzVvWlhKcGREdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklDNDFaVzA3WEc1OVhHNHVZblF0YzNSaFkyc3RNWGdzWEc0dVluUXRjM1JoWTJzdGMyMGdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzU5WEc0dVluUXRhVzUyWlhKelpTQjdYRzRnSUNBZ1kyOXNiM0k2SUNObVptWm1abVk3WEc1OVhHNHZLaUJDYkdGamF5QlVhV1VnZFhObGN5QjBhR1VnVlc1cFkyOWtaU0JRY21sMllYUmxJRlZ6WlNCQmNtVmhJQ2hRVlVFcElIUnZJR1Z1YzNWeVpTQnpZM0psWlc1Y2JpQWdJSEpsWVdSbGNuTWdaRzhnYm05MElISmxZV1FnYjJabUlISmhibVJ2YlNCamFHRnlZV04wWlhKeklIUm9ZWFFnY21Wd2NtVnpaVzUwSUdsamIyNXpJQ292WEc0dVluUXRZbUZ5Y3pwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EQXdYQ0k3WEc1OVhHNHVZblF0Wlc1MlpXeHZjR1U2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBd01Wd2lPMXh1ZlZ4dUxtSjBMWE5sWVhKamFEcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NREF5WENJN1hHNTlYRzR1WW5RdGMyVmhjbU5vTFhCc2RYTTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF3TTF3aU8xeHVmVnh1TG1KMExYTmxZWEpqYUMxdGFXNTFjenBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURBMFhDSTdYRzU5WEc0dVluUXRjR2h2Ym1VNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXdOVndpTzF4dWZWeHVMbUowTFdOdmJXMWxiblE2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBd04xd2lPMXh1ZlZ4dUxtSjBMV052YlcxbGJuUnBibWM2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBd09Gd2lPMXh1ZlZ4dUxtSjBMV052YlcxbGJuUnpPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TURsY0lqdGNibjFjYmk1aWRDMXljM002WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBd1lWd2lPMXh1ZlZ4dUxtSjBMWFJwYldWek9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNR05jSWp0Y2JuMWNiaTVpZEMxMGFXMWxjeTFqYVhKamJHVTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF3WkZ3aU8xeHVmVnh1TG1KMExXTnNiMk5yT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01HVmNJanRjYm4xY2JpNWlkQzF6ZEdGeU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNVEJjSWp0Y2JuMWNiaTVpZEMxemRHRnlMV2hoYkdZNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXhNVndpTzF4dWZWeHVMbUowTFdOb1pXTnJPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TVRKY0lqdGNibjFjYmk1aWRDMWphR1ZqYXkxamFYSmpiR1U2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBeE0xd2lPMXh1ZlZ4dUxtSjBMV05vWldOckxYTnhkV0Z5WlRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ERTBYQ0k3WEc1OVhHNHVZblF0ZEdnNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXhOVndpTzF4dWZWeHVMbUowTFhSb0xXeGhjbWRsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01UWmNJanRjYm4xY2JpNWlkQzFvWldGeWREcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NREUzWENJN1hHNTlYRzR1WW5RdGFHVmhjblF0YUdGc1pqcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NREU0WENJN1hHNTlYRzR1WW5RdFkyRnNaVzVrWVhJNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXhPVndpTzF4dWZWeHVMbUowTFhOb2IzQndhVzVuTFdOaGNuUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF4WVZ3aU8xeHVmVnh1TG1KMExYQnNkWE02WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBeFlsd2lPMXh1ZlZ4dUxtSjBMWEJzZFhNdFkybHlZMnhsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01XTmNJanRjYm4xY2JpNWlkQzF3YkhWekxYTnhkV0Z5WlRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ERmtYQ0k3WEc1OVhHNHVZblF0Y0dWdU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNV1ZjSWp0Y2JuMWNiaTVpZEMxdGFXNTFjenBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURJeFhDSTdYRzU5WEc0dVluUXRiV2x1ZFhNdFkybHlZMnhsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01qSmNJanRjYm4xY2JpNWlkQzF0YVc1MWN5MXpjWFZoY21VNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXlNMXdpTzF4dWZWeHVMbUowTFhCbGJtTnBiRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURJMFhDSTdYRzU5WEc0dVluUXRaV1JwZERwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ESTFYQ0k3WEc1OVhHNHVZblF0ZEdoMWJXSnpMWFZ3T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01qWmNJanRjYm4xY2JpNWlkQzEwYUhWdFluTXRaRzkzYmpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ESTNYQ0k3WEc1OVhHNHVZblF0WjJWaGNqcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NREk0WENJN1hHNTlYRzR1WW5RdGRISmhjMmc2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBeU9Wd2lPMXh1ZlZ4dUxtSjBMV1pwYkdVNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXlZVndpTzF4dWZWeHVMbUowTFdsdVptOHRZMmx5WTJ4bE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNbUpjSWp0Y2JuMWNiaTVpZEMxc1lXSmxiRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURKalhDSTdYRzU5WEc0dVluUXRjbTlqYTJWME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNbVJjSWp0Y2JuMWNiaTVpZEMxaWIyOXJPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TW1WY0lqdGNibjFjYmk1aWRDMWliMjlyTFc5d1pXNDZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF5Wmx3aU8xeHVmVnh1TG1KMExXNXZkR1ZpYjI5ck9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNekJjSWp0Y2JuMWNiaTVpZEMxallXMWxjbUU2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBek1Wd2lPMXh1ZlZ4dUxtSjBMV1p2YkdSbGNqcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRE15WENJN1hHNTlYRzR1WW5RdGNYVnZkR1V0YkdWbWREcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRE0yWENJN1hHNTlYRzR1WW5RdGNYVnZkR1V0Y21sbmFIUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF6TjF3aU8xeHVmVnh1TG1KMExXVjVaVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURNNFhDSTdYRzU5WEc0dVluUXRiRzlqYXpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ETTVYQ0k3WEc1OVhHNHVZblF0Ykc5amF5MXZjR1Z1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd00yRmNJanRjYm4xY2JpNWlkQzFuYVdaME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNMkpjSWp0Y2JuMWNiaTVpZEMxemNHbHVibVZ5TFdOc2IyTnJPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TTJOY0lqdGNibjFjYmk1aWRDMXpjR2x1Ym1WeU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNMlJjSWp0Y2JuMWNiaTVpZEMxM2NtVnVZMmc2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBelpWd2lPMXh1ZlZ4dUxtSjBMV05zYjNWa09tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOREJjSWp0Y2JuMWNiaTVpZEMxamJHOTFaQzExY0d4dllXUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakEwTVZ3aU8xeHVmVnh1TG1KMExXTnNiM1ZrTFdSdmQyNXNiMkZrT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd05ESmNJanRjYm4xY2JpNWlkQzF6ZVc1ak9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdORE5jSWp0Y2JuMWNiaTVpZEMxeGRXVnpkR2x2YmkxamFYSmpiR1U2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBME5Gd2lPMXh1ZlZ4dUxtSjBMWE5vWVhKbE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdORFZjSWp0Y2JuMWNiaTVpZEMxaWNtbGxabU5oYzJVNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTBObHdpTzF4dWZWeHVMbUowTFcxdmJtVjVPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TkRkY0lqdGNibjFjYmk1aWRDMXRaV2RoY0dodmJtVTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakEwT0Z3aU8xeHVmVnh1TG1KMExYTnBaMjR0YVc0NlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTBPVndpTzF4dWZWeHVMbUowTFhOcFoyNHRiM1YwT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd05HRmNJanRjYm4xY2JpNWlkQzFtYVd4dE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOR0pjSWp0Y2JuMWNiaTVpZEMxMGNtOXdhSGs2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMFkxd2lPMXh1ZlZ4dUxtSjBMV052WkdVNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTBaRndpTzF4dWZWeHVMbUowTFd4cFoyaDBMV0oxYkdJNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTBaVndpTzF4dWZWeHVMbUowTFhCeWFXNTBPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TlRCY0lqdGNibjFjYmk1aWRDMW1ZWGc2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMU1Wd2lPMXh1ZlZ4dUxtSjBMWFpwWkdWdk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOVEpjSWp0Y2JuMWNiaTVpZEMxemFXZHVZV3c2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMU0xd2lPMXh1ZlZ4dUxtSjBMWE5wZEdWdFlYQTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakExTkZ3aU8xeHVmVnh1TG1KMExYVndiRzloWkRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EVTFYQ0k3WEc1OVhHNHVZblF0Wkc5M2JteHZZV1E2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMU5sd2lPMXh1ZlZ4dUxtSjBMV3RsZVRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EVTNYQ0k3WEc1OVhHNHVZblF0YlhWbk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOVGhjSWp0Y2JuMWNiaTVpZEMxaWIyOXJiV0Z5YXpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EVTVYQ0k3WEc1OVhHNHVZblF0Wm14aFp6cGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRFZoWENJN1hHNTlYRzR1WW5RdFpYaDBaWEp1WVd3dGJHbHVhenBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURWaVhDSTdYRzU5WEc0dVluUXRjMjFwYkdVNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTFZMXdpTzF4dWZWeHVMbUowTFdaeWIzZHVPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TldSY0lqdGNibjFjYmk1aWRDMXRaV2c2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMVpWd2lPMXh1ZlZ4dUxtSjBMVzFoWjJsak9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOakJjSWp0Y2JuMWNiaTVpZEMxaWIyeDBPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TmpGY0lqdGNibjFjYmk1aWRDMWxlR05zWVcxaGRHbHZiaTEwY21saGJtZHNaVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURZeVhDSTdYRzU5WEc0dVluUXRaWGhqYkdGdFlYUnBiMjR0WTJseVkyeGxPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TmpOY0lqdGNibjFjYmk1aWRDMW1iR0Z6YXpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EWTBYQ0k3WEc1OVhHNHVZblF0YlhWemFXTTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakEyTlZ3aU8xeHVmVnh1TG1KMExYQjFjMmd0Y0dsdU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOalpjSWp0Y2JuMWNiaTVpZEMxemFHbGxiR1E2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMk4xd2lPMXh1ZlZ4dUxtSjBMWE52Y25RNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTJPRndpTzF4dWZWeHVMbUowTFhKbGNHeDVPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TmpsY0lqdGNibjFjYmk1aWRDMW1iM0ozWVhKa09tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdObUZjSWp0Y2JuMWNiaTVpZEMxeVpYQnNlUzFoYkd3NlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTJZbHdpTzF4dWZWeHVMbUowTFdadmNuZGhjbVF0WVd4c09tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdObU5jSWp0Y2JuMWNiaTVpZEMxaVpXeHNPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3Tm1SY0lqdGNibjFjYmk1aWRDMWlaV3hzTFc5bVpqcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRFpsWENJN1hHNTlYRzR1WW5RdFltRnVPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TnpCY0lqdGNibjFjYmk1aWRDMWtZWFJoWW1GelpUcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRGN4WENJN1hHNTlYRzR1WW5RdGFHRnlaQzFrY21sMlpUcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRGN5WENJN1hHNTlYRzR1WW5RdGJXVnlaMlU2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBM00xd2lPMXh1ZlZ4dUxtSjBMV1p2Y21zNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTNORndpTzF4dWZWeHVMbUowTFhkcFptazZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakEzTlZ3aU8xeHVmVnh1TG1KMExYQmhjR1Z5TFhCc1lXNWxPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TnpaY0lqdGNibjFjYmk1aWRDMXBibUp2ZURwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EYzNYQ0k3WEc1OVhHNHVZblF0Wm1seVpUcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRGM0WENJN1hHNTlYRzR1WW5RdGNHeGhlVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURjNVhDSTdYRzU5WEc0dVluUXRjR0YxYzJVNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTNZVndpTzF4dWZWeHVMbUowTFhOMGIzQTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakE0WWx3aU8xeHVmVnh1TG1KMExYQnNZWGt0WTJseVkyeGxPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TjJKY0lqdGNibjFjYmk1aWRDMXVaWGgwT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd04yTmNJanRjYm4xY2JpNWlkQzF3Y21WMmFXOTFjenBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURka1hDSTdYRzU5WEc0dVluUXRjbVZ3WldGME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOMlZjSWp0Y2JuMWNiaTVpZEMxbVlYTjBMV1p2Y25kaGNtUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakE0TUZ3aU8xeHVmVnh1TG1KMExXWmhjM1F0Y21WMlpYSnpaVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURneFhDSTdYRzU5WEc0dVluUXRkbTlzZFcxbE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPREpjSWp0Y2JuMWNiaTVpZEMxMmIyeDFiV1V0YjJabU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPRE5jSWp0Y2JuMWNiaTVpZEMxMmIyeDFiV1V0ZFhBNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTRORndpTzF4dWZWeHVMbUowTFhadmJIVnRaUzFrYjNkdU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPRFZjSWp0Y2JuMWNiaTVpZEMxdFlYaHBiV2w2WlRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EZzJYQ0k3WEc1OVhHNHVZblF0YldsdWFXMXBlbVU2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBNE4xd2lPMXh1ZlZ4dUxtSjBMV05zYjNObFpDMWpZWEIwYVc5dWN6cGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRGc0WENJN1hHNTlYRzR1WW5RdGMyaDFabVpzWlRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EZzVYQ0k3WEc1OVhHNHVZblF0ZEhKcFlXNW5iR1U2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBNFlWd2lPMXh1ZlZ4dUxtSjBMWE54ZFdGeVpUcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRGhpWENJN1hHNTlYRzR1WW5RdFkybHlZMnhsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd09HTmNJanRjYm4xY2JpNWlkQzFvWlhoaFoyOXVPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3T0dSY0lqdGNibjFjYmk1aWRDMXZZM1JoWjI5dU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPR1ZjSWp0Y2JuMWNiaTVpZEMxaGJtZHNaUzExY0RwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1Ea3dYQ0k3WEc1OVhHNHVZblF0WVc1bmJHVXRaRzkzYmpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1Ea3hYQ0k3WEc1OVhHNHVZblF0WVc1bmJHVXRiR1ZtZERwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1Ea3lYQ0k3WEc1OVhHNHVZblF0WVc1bmJHVXRjbWxuYUhRNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTVNMXdpTzF4dWZWeHVMbUowTFdGdVoyeGxjeTExY0RwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EazBYQ0k3WEc1OVhHNHVZblF0WVc1bmJHVnpMV1J2ZDI0NlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTVOVndpTzF4dWZWeHVMbUowTFdGdVoyeGxjeTFzWldaME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPVFpjSWp0Y2JuMWNiaTVpZEMxaGJtZHNaWE10Y21sbmFIUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakE1TjF3aU8xeHVmVnh1TG1KMExXRnljbTkzTFhWd09tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPVGhjSWp0Y2JuMWNiaTVpZEMxaGNuSnZkeTFrYjNkdU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPVGxjSWp0Y2JuMWNiaTVpZEMxaGNuSnZkeTFzWldaME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPV0ZjSWp0Y2JuMWNiaTVpZEMxaGNuSnZkeTF5YVdkb2REcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRGxpWENJN1hHNTlYRzR1WW5RdFltRnlMV05vWVhKME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPV05jSWp0Y2JuMWNiaTVpZEMxd2FXVXRZMmhoY25RNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTVaRndpTzF4dWZWeHVMbUowTFdOcGNtTnNaUzFoY25KdmR5MTFjRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTUdFd1hDSTdYRzU5WEc0dVluUXRZMmx5WTJ4bExXRnljbTkzTFdSdmQyNDZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakJoTVZ3aU8xeHVmVnh1TG1KMExXTnBjbU5zWlMxaGNuSnZkeTFzWldaME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZVEpjSWp0Y2JuMWNiaTVpZEMxamFYSmpiR1V0WVhKeWIzY3RjbWxuYUhRNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQmhNMXdpTzF4dWZWeHVMbUowTFdOaGNtVjBMWFZ3T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1lUUmNJanRjYm4xY2JpNWlkQzFqWVhKbGRDMWtiM2R1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1lUVmNJanRjYm4xY2JpNWlkQzFqWVhKbGRDMXNaV1owT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1lUWmNJanRjYm4xY2JpNWlkQzFqWVhKbGRDMXlhV2RvZERwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1HRTNYQ0k3WEc1OVhHNHVZblF0Ykc5dVp5MWhjbkp2ZHkxMWNEcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NR0U0WENJN1hHNTlYRzR1WW5RdGJHOXVaeTFoY25KdmR5MWtiM2R1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1lUbGNJanRjYm4xY2JpNWlkQzFzYjI1bkxXRnljbTkzTFd4bFpuUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakJoWVZ3aU8xeHVmVnh1TG1KMExXeHZibWN0WVhKeWIzY3RjbWxuYUhRNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQmhZbHdpTzF4dWZWeHVMbUowTFVKdmJHUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakJoWTF3aU8xeHVmVnh1TG1KMExXbDBZV3hwWXpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1HRmtYQ0k3WEc1OVhHNHVZblF0ZFc1a1pYSnNhVzVsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1lXVmNJanRjYm4xY2JpNWlkQzFzYVc1ck9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZakJjSWp0Y2JuMWNiaTVpZEMxd1lYQmxjaTFqYkdsd09tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZakZjSWp0Y2JuMWNiaTVpZEMxaGJHbG5iaTFzWldaME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZakpjSWp0Y2JuMWNiaTVpZEMxaGJHbG5iaTFqWlc1MFpYSTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakJpTTF3aU8xeHVmVnh1TG1KMExXRnNhV2R1TFhKcFoyaDBPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3WWpSY0lqdGNibjFjYmk1aWRDMWhiR2xuYmkxcWRYTjBhV1o1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1lqVmNJanRjYm4xY2JpNWlkQzFqZFhRNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQmlObHdpTzF4dWZWeHVMbUowTFdOdmNIazZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakJpTjF3aU8xeHVmVnh1TG1KMExYQmhjM1JsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1lqaGNJanRjYm4xY2JpNWlkQzF3YUc5MGJ6cGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NR0k1WENJN1hHNTlYRzR1WW5RdGRHRmliR1U2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpCaVlWd2lPMXh1ZlZ4dUxtSjBMWFZzYVhOME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZbUpjSWp0Y2JuMWNiaTVpZEMxdmJHbHpkRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTUdKalhDSTdYRzU5WEc0dVluUXRhVzVrWlc1ME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZbVJjSWp0Y2JuMWNiaTVpZEMxdmRYUmtaVzUwT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1ltVmNJanRjYm4xY2JpNWlkQzExYm1Sdk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZekJjSWp0Y2JuMWNiaTVpZEMxeVpXUnZPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3WXpGY0lqdGNibjFjYmk1aWRDMXpkWEE2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpCak1sd2lPMXh1ZlZ4dUxtSjBMWE4xWWpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1HTXpYQ0k3WEc1OVhHNHVZblF0ZEdWNGRDMXphWHBsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1l6UmNJanRjYm4xY2JpNWlkQzEwWlhoMExXTnZiRzl5T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1l6VmNJanRjYm4xY2JpNWlkQzF5WlcxdmRtVXRabTl5YldGMGRHbHVaenBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTUdNMlhDSTdYRzU5WEc0dVluUXRZbXh2WTJ0eGRXOTBaVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURNMlhDSTdYRzU5WEc0dVluUXRaMnh2WW1VNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQmpOMXdpTzF4dWZWeHVMbUowTFcxaGNEcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NR000WENJN1hHNTlYRzR1WW5RdGJXRndMV0Z5Y205M09tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZemxjSWp0Y2JuMWNiaTVpZEMxdFlYQXRiV0Z5YTJWeU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZMkZjSWp0Y2JuMWNiaTVpZEMxdFlYQXRjR2x1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd1kySmNJanRjYm4xY2JpNWlkQzFvYjIxbE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdZMk5jSWp0Y2JuMWNiaTVpZEMxaWRXbHNaR2x1WnpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1HTmtYQ0k3WEc1OVhHNHVZblF0YVc1a2RYTjBjbms2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpCalpWd2lPMXh1ZlZ4dUxtSjBMV1JsYzJ0MGIzQTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakJrTUZ3aU8xeHVmVnh1TG1KMExXeGhjSFJ2Y0RwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1HUXhYQ0k3WEc1OVhHNHVZblF0ZEdGaWJHVjBPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3WkRKY0lqdGNibjFjYmk1aWRDMXRiMkpwYkdVNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQmtNMXdpTzF4dWZWeHVMbUowTFhSMk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdaRFJjSWp0Y2JuMWNiaTVpZEMxeVlXUnBieTFqYUdWamEyVmtPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3WkRWY0lqdGNibjFjYmk1aWRDMXlZV1JwYnkxMWJtTm9aV05yWldRNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTRZMXdpTzF4dWZWeHVMbUowTFdOb1pXTnJZbTk0TFdOb1pXTnJaV1E2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBeE5Gd2lPMXh1ZlZ4dUxtSjBMV05vWldOclltOTRMWFZ1WTJobFkydGxaRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURoaVhDSTdYRzU5WEc0dVluUXRZMmhsWTJ0aWIzZ3RhVzUwWlhKdFpXUnBZWFJsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01qTmNJanRjYm4xY2JpNWlkQzExYzJWeU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdaRFpjSWp0Y2JuMWNiaTVpZEMxMWMyVnlMVzFoYkdVNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQmtObHdpTzF4dWZWeHVMbUowTFhWelpYSXRabVZ0WVd4bE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdaRGRjSWp0Y2JuMWNiaTVpZEMxamNtOTNianBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTUdRNFhDSTdYRzU5WEc0dVluUXRZM0psWkdsMExXTmhjbVE2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpCa09Wd2lPMXh1ZlZ4dUxtSjBMWE4wY21sclpYUm9jbTkxWjJnNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQmtZVndpTzF4dWZWeHVMbUowTFdWcVpXTjBPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3WkdKY0lqdGNibjFjYmk1aWRDMWxiR3hwY0hOcGN5MW9PbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3WkdOY0lqdGNibjFjYmk1aWRDMWxiR3hwY0hOcGN5MTJPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3WkdSY0lqdGNibjFjYmk1bVlXSXRabUZqWldKdmIyczZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF3TUZ3aU8xeHVmVnh1TG1aaFlpMW1ZV05sWW05dmF5MWhiSFE2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBd01Wd2lPMXh1ZlZ4dUxtWmhZaTEwZDJsMGRHVnlPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TURKY0lqdGNibjFjYmk1bVlXSXRiR2x1YTJWa2FXNDZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF3TTF3aU8xeHVmVnh1TG1aaFlpMXNhVzVyWldScGJpMWhiSFE2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBd05Gd2lPMXh1ZlZ4dUxtWmhZaTFwYm5OMFlXZHlZVzA2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBd05Wd2lPMXh1ZlZ4dUxtWmhZaTFuYVhSb2RXSTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF3Tmx3aU8xeHVmVnh1TG1aaFlpMW5hWFJvZFdJdFlXeDBPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TURkY0lqdGNibjFjYmk1bVlXSXRaMjl2WjJ4bGNHeDFjenBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURBNFhDSTdYRzU5WEc0dVptRmlMV2R2YjJkc1pYQnNkWE10WVd4ME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNRGxjSWp0Y2JuMWNiaTVtWVdJdGNHbHVkR1Z5WlhOME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNR0ZjSWp0Y2JuMWNiaTVtWVdJdGNHbHVkR1Z5WlhOMExXRnNkRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURCaVhDSTdYRzU5WEc0dVptRmlMWFIxYldKc2NqcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NREJqWENJN1hHNTlYRzR1Wm1GaUxYUjFiV0pzY2kxaGJIUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF3WkZ3aU8xeHVmVnh1TG1aaFlpMWlhWFJqYjJsdU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNVEJjSWp0Y2JuMWNiaTVtWVdJdFltbDBZMjlwYmkxaGJIUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF4TVZ3aU8xeHVmVnh1TG1aaFlpMWtjbTl3WW05NE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNVEpjSWp0Y2JuMWNiaTVtWVdJdGMzUmhZMnRsZUdOb1lXNW5aVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURFelhDSTdYRzU5WEc0dVptRmlMWE4wWVdOcmIzWmxjbVpzYjNjNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXhORndpTzF4dWZWeHVMbVpoWWkxbWJHbGphM0k2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBeE5Wd2lPMXh1ZlZ4dUxtWmhZaTFtYkdsamEzSXRZV3gwT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01UWmNJanRjYm4xY2JpNW1ZV0l0WW1sMFluVmphMlYwT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01UZGNJanRjYm4xY2JpNW1ZV0l0YUhSdGJEVTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF4T0Z3aU8xeHVmVnh1TG1aaFlpMWpjM016T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01UbGNJanRjYm4xY2JpNW1ZV0l0WVhCd2JHVTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF4WVZ3aU8xeHVmVnh1TG1aaFlpMTNhVzVrYjNkek9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNV0pjSWp0Y2JuMWNiaTVtWVdJdFlXNWtjbTlwWkRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ERmpYQ0k3WEc1OVhHNHVabUZpTFd4cGJuVjRPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TVdSY0lqdGNibjFjYmk1bVlXSXRaSEpwWW1KaWJHVTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF4WlZ3aU8xeHVmVnh1TG1aaFlpMTViM1YwZFdKbE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNakZjSWp0Y2JuMWNiaTVtWVdJdGMydDVjR1U2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBeU1sd2lPMXh1ZlZ4dUxtWmhZaTFtYjNWeWMzRjFZWEpsT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01qTmNJanRjYm4xY2JpNW1ZV0l0ZEhKbGJHeHZPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TWpSY0lqdGNibjFjYmk1bVlXSXRiV0Y0WTJSdU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNalZjSWp0Y2JuMWNiaTVtWVdJdFoybDBkR2x3T21KbFptOXlaU3hjYmk1bVlXSXRaM0poZEdsd1lYazZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF5Tmx3aU8xeHVmVnh1TG1aaFlpMTJhVzFsYnpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ESTNYQ0k3WEc1OVhHNHVabUZpTFhacGJXVnZMV0ZzZERwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ESTRYQ0k3WEc1OVhHNHVabUZpTFhOc1lXTnJPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TWpsY0lqdGNibjFjYmk1bVlXSXRkMjl5WkhCeVpYTnpPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TW1GY0lqdGNibjFjYmk1bVlXSXRkMjl5WkhCeVpYTnpMV0ZzZERwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ESmlYQ0k3WEc1OVhHNHVabUZpTFc5d1pXNXBaRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURKalhDSTdYRzU5WEc0dVptRmlMWGxoYUc5dk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNbVJjSWp0Y2JuMWNiaTVtWVdJdGVXRm9iMjh0WVd4ME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdNbVZjSWp0Y2JuMWNiaTVtWVdJdGNtVmtaR2wwT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd01tWmNJanRjYm4xY2JpNW1ZV0l0WjI5dloyeGxPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TXpCY0lqdGNibjFjYmk1bVlXSXRaMjl2WjJ4bExXRnNkRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURNeFhDSTdYRzU5WEc0dVptRmlMWE4wZFcxaWJHVjFjRzl1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd016SmNJanRjYm4xY2JpNW1ZV0l0YzNSMWJXSnNaWFZ3YjI0dFlXeDBPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TXpOY0lqdGNibjFjYmk1bVlXSXRaR1ZzYVdOcGIzVnpPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TXpSY0lqdGNibjFjYmk1bVlXSXRaR2xuWnpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ETTFYQ0k3WEc1OVhHNHVabUZpTFhCcFpXUndhWEJsY2pwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ETTJYQ0k3WEc1OVhHNHVabUZpTFhCcFpXUndhWEJsY2kxaGJIUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakF6TjF3aU8xeHVmVnh1TG1aaFlpMWtjblZ3WVd3NlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXpPRndpTzF4dWZWeHVMbVpoWWkxcWIyOXRiR0U2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBek9Wd2lPMXh1ZlZ4dUxtWmhZaTFpWldoaGJtTmxPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TTJGY0lqdGNibjFjYmk1bVlXSXRjM1JsWVcwNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXpZbHdpTzF4dWZWeHVMbVpoWWkxemRHVmhiUzFoYkhRNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQXpZMXdpTzF4dWZWeHVMbVpoWWkxemNHOTBhV1o1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd00yUmNJanRjYm4xY2JpNW1ZV0l0WkdWMmFXRnVkR0Z5ZERwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1ETmxYQ0k3WEc1OVhHNHVabUZpTFhOdmRXNWtZMnh2ZFdRNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTBNRndpTzF4dWZWeHVMbVpoWWkxMmFXNWxPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TkRGY0lqdGNibjFjYmk1bVlXSXRZMjlrWlhCbGJqcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRFF5WENJN1hHNTlYRzR1Wm1GaUxXcHpabWxrWkd4bE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdORE5jSWp0Y2JuMWNiaTVtWVdJdGNtVmlaV3c2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBME5Gd2lPMXh1ZlZ4dUxtWmhZaTFsYlhCcGNtVTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakEwTlZ3aU8xeHVmVnh1TG1aaFlpMW5hWFE2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBME5sd2lPMXh1ZlZ4dUxtWmhZaTFvWVdOclpYSnVaWGR6T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd05EZGNJanRjYm4xY2JpNW1ZV0l0YUdGamEyVnlibVYzY3kxaGJIUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakEwT0Z3aU8xeHVmVnh1TG1aaFlpMXpiR2xrWlhOb1lYSmxPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TkRsY0lqdGNibjFjYmk1bVlXSXRkSGRwZEdOb09tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOR0ZjSWp0Y2JuMWNiaTVtWVdJdGVXVnNjRHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURSaVhDSTdYRzU5WEc0dVptRmlMWEJoZVhCaGJEcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRFJqWENJN1hHNTlYRzR1Wm1GaUxXZHZiMmRzWlMxM1lXeHNaWFE2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMFpGd2lPMXh1ZlZ4dUxtWmhZaTFoYm1kbGJHeHBjM1E2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMFpWd2lPMXh1ZlZ4dUxtWmhZaTFqWXkxMmFYTmhPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TlRCY0lqdGNibjFjYmk1bVlXSXRZMk10YldGemRHVnlZMkZ5WkRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EVXhYQ0k3WEc1OVhHNHVabUZpTFdOakxXUnBjMk52ZG1WeU9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOVEpjSWp0Y2JuMWNiaTVtWVdJdFkyTXRZVzFsZURwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EVXpYQ0k3WEc1OVhHNHVabUZpTFdOakxYQmhlWEJoYkRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EVTBYQ0k3WEc1OVhHNHVabUZpTFdOakxYTjBjbWx3WlRwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EVTFYQ0k3WEc1OVhHNHVabUZpTFd4aGMzUm1iVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURVMlhDSTdYRzU5WEc0dVptRmlMWGRvWVhSellYQndPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3TlRkY0lqdGNibjFjYmk1bVlXSXRiV1ZrYVhWdE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOVGhjSWp0Y2JuMWNiaTVtWVdJdGJXVmhibkJoZEdnNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTFPVndpTzF4dWZWeHVMbVpoWWkxdFpXRnVjR0YwYUMxaGJIUTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakExWVZ3aU8xeHVmVnh1TG1aaFlpMXdZV2RsYkdsdVpYTTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakExWWx3aU8xeHVmVnh1TG1aaFlpMXBiM2hvYjNOME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOakJjSWp0Y2JuMWNiaTVtWVdJdFluVjVjMlZzYkdGa2N6cGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRFl4WENJN1hHNTlYRzR1Wm1GaUxXSjFlWE5sYkd4aFpITXRZV3gwT21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd05qSmNJanRjYm4xY2JpNW1ZV0l0WTI5dWJtVmpkR1JsZG1Wc2IzQTZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakEyTTF3aU8xeHVmVnh1TG1aaFlpMWtZWE5vWTNWaVpUcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRFkwWENJN1hHNTlYRzR1Wm1GaUxXWnZjblZ0WW1WbE9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOalZjSWp0Y2JuMWNiaTVtWVdJdGJHVmhibkIxWWpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EWTJYQ0k3WEc1OVhHNHVabUZpTFhObGJHeHplVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURZM1hDSTdYRzU5WEc0dVptRmlMWE5vYVhKMGMybHVZblZzYXpwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EWTRYQ0k3WEc1OVhHNHVabUZpTFhOcGJYQnNlV0oxYVd4ME9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdOamxjSWp0Y2JuMWNiaTVtWVdJdGMydDVZWFJzWVhNNlltVm1iM0psSUh0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y1pqQTJZVndpTzF4dWZWeHVMbVpoWWkxMmFXRmpiMmx1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd05tSmNJanRjYm4xY2JpNW1ZV0l0WTI5a2FXVndhV1U2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBMlkxd2lPMXh1ZlZ4dUxtWmhZaTF4ZFdWMVpUcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRFprWENJN1hHNTlYRzR1Wm1GaUxYRjFaWFZsTFdGc2REcGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRFpsWENJN1hHNTlYRzR1Wm1GaUxXWnZiblJwWTI5dWN6cGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRGN3WENJN1hHNTlYRzR1Wm1GaUxXWnZiblJwWTI5dWN5MWhiSFE2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiMjUwWlc1ME9pQmNJbHhjWmpBM01Wd2lPMXh1ZlZ4dUxtWmhZaTFpYkdGamEzUnBaVHBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURjeVhDSTdYRzU5WEc0dVptRmlMV0pzWVdOcmRHbGxMV0ZzZERwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWEZ4bU1EY3pYQ0k3WEc1OVhHNHVabUZpTFhocGJtYzZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lseGNaakE1TUZ3aU8xeHVmVnh1TG1aaFlpMTJhenBpWldadmNtVWdlMXh1SUNBZ0lHTnZiblJsYm5RNklGd2lYRnhtTURreFhDSTdYRzU5WEc0dVptRmlMWGRsYVdKdk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nWENKY1hHWXdPVEpjSWp0Y2JuMWNiaTVtWVdJdGNtVnVjbVZ1T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjWEdZd09UTmNJanRjYm4xY2JpNW1ZV0l0ZEdWdVkyVnVkQzEzWldsaWJ6cGlaV1p2Y21VZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhGeG1NRGswWENJN1hHNTlYRzR1Wm1GaUxYRnhPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3T1RWY0lqdGNibjFjYmk1bVlXSXRkMlZqYUdGME9tSmxabTl5WlN4Y2JpNW1ZV0l0ZDJWcGVHbHVPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYR1l3T1RaY0lqdGNibjFjYmlJc0lpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5QlFiSGx5SUhOMGVXeGxjMXh1THk4Z2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzTmxiSG92Y0d4NWNseHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVRR2x0Y0c5eWRDQmNJblpoY21saFlteGxjMXdpTzF4dVFHbHRjRzl5ZENCY0ltMXBlR2x1YzF3aU8xeHVYRzR2THlCQmJtbHRZWFJwYjI1Y2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dVFHdGxlV1p5WVcxbGN5QndiSGx5TFhCeWIyZHlaWE56SUh0Y2JpQWdJQ0IwYnlCN0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJQ1J3YkhseUxYQnliMmR5WlhOekxXeHZZV1JwYm1jdGMybDZaU0F3T3lCOVhHNTlYRzVjYmk4dklGTjBlV3hsYzF4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUx5OGdRbUZ6WlZ4dUxuQnNlWElnZTF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQnRZWGd0ZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnYldsdUxYZHBaSFJvT2lBeU1EQndlRHRjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSkhCc2VYSXRabTl1ZEMxbVlXMXBiSGs3WEc0Z0lDQWdaR2x5WldOMGFXOXVPaUJzZEhJN1hHNWNiaUFnSUNCQWFXWWdKSEJzZVhJdFltOXlaR1Z5TFdKdmVDQTlQU0IwY25WbElIdGNiaUFnSUNBZ0lDQWdMeThnWW05eVpHVnlMV0p2ZUNCbGRtVnllWFJvYVc1blhHNGdJQ0FnSUNBZ0lDOHZJR2gwZEhBNkx5OXdZWFZzYVhKcGMyZ3VZMjl0THpJd01USXZZbTk0TFhOcGVtbHVaeTFpYjNKa1pYSXRZbTk0TFdaMGR5OWNiaUFnSUNBZ0lDQWdKaXhjYmlBZ0lDQWdJQ0FnS2l4Y2JpQWdJQ0FnSUNBZ0tqbzZZV1owWlhJc1hHNGdJQ0FnSUNBZ0lDbzZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdRR2xtSUNSd2JIbHlMWFJ2ZFdOb0xXRmpkR2x2YmlBOVBTQjBjblZsSUh0Y2JpQWdJQ0FnSUM4dklFWnBlQ0F6TURCdGN5QmtaV3hoZVZ4dUlDQWdJQ0FnWVN3Z1luVjBkRzl1TENCcGJuQjFkQ3dnYkdGaVpXd2dlMXh1SUNBZ0lDQWdJQ0IwYjNWamFDMWhZM1JwYjI0NklHMWhibWx3ZFd4aGRHbHZianRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJHYjJOMWMxeHVJQ0FnSUNZNlptOWpkWE1nZTF4dUlDQWdJQ0FnSUNCdmRYUnNhVzVsT2lBd08xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklFMWxaR2xoSUdWc1pXMWxiblJ6WEc0Z0lDQWdkbWxrWlc4c1hHNGdJQ0FnWVhWa2FXOGdlMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCaGRYUnZPMXh1SUNBZ0lDQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lCcGJtaGxjbWwwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUZKaGJtZGxJR2x1Y0hWMGMxeHVJQ0FnSUM4dklGTndaV05wWm1samFYUjVJR2x6SUdadmNpQmliMjkwYzNSeVlYQWdZMjl0Y0dGMGFXSnBiR2wwZVZ4dUlDQWdJR2x1Y0hWMFczUjVjR1U5SjNKaGJtZGxKMTBnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUFvSkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0YUdWcFoyaDBJQ29nSkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0WVdOMGFYWmxMWE5qWVd4bEtUdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnSUNBZ0lDQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHMXBaR1JzWlR0Y2JseHVJQ0FnSUNBZ0lDQmhjSEJsWVhKaGJtTmxPaUJ1YjI1bE8xeHVJQ0FnSUNBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUTdYRzVjYmlBZ0lDQWdJQ0FnTHk4Z1YyVmlTMmwwWEc0Z0lDQWdJQ0FnSUNZNk9pMTNaV0pyYVhRdGMyeHBaR1Z5TFhKMWJtNWhZbXhsTFhSeVlXTnJJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lFQnBibU5zZFdSbElIQnNlWEl0Y21GdVoyVXRkSEpoWTJzb0tUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FtT2pvdGQyVmlhMmwwTFhOc2FXUmxjaTEwYUhWdFlpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF0S0Nna2NHeDVjaTF5WVc1blpTMTBhSFZ0WWkxb1pXbG5hSFFnTFNBa2NHeDVjaTF5WVc1blpTMTBjbUZqYXkxb1pXbG5hSFFwSUM4Z01pazdYRzRnSUNBZ0lDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCd2JIbHlMWEpoYm1kbExYUm9kVzFpS0NrN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0F2THlCTmIzcHBiR3hoWEc0Z0lDQWdJQ0FnSUNZNk9pMXRiM290Y21GdVoyVXRkSEpoWTJzZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnY0d4NWNpMXlZVzVuWlMxMGNtRmpheWdwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDWTZPaTF0YjNvdGNtRnVaMlV0ZEdoMWJXSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2NHeDVjaTF5WVc1blpTMTBhSFZ0WWlncE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnTHk4Z1RXbGpjbTl6YjJaMFhHNGdJQ0FnSUNBZ0lDWTZPaTF0Y3kxMGNtRmpheUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklDUndiSGx5TFhKaGJtZGxMWFJ5WVdOckxXaGxhV2RvZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlPaUF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNZNk9pMXRjeTFtYVd4c0xYVndjR1Z5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSEJzZVhJdGNtRnVaMlV0ZEhKaFkyc29LVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBbU9qb3RiWE10Wm1sc2JDMXNiM2RsY2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J3YkhseUxYSmhibWRsTFhSeVlXTnJLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrY0d4NWNpMXlZVzVuWlMxelpXeGxZM1JsWkMxaVp6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FtT2pvdGJYTXRkR2gxYldJZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnY0d4NWNpMXlZVzVuWlMxMGFIVnRZaWdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnUm05eUlITnZiV1VnY21WaGMyOXVMQ0JGWkdkbElIVnpaWE1nZEdobElDMTNaV0pyYVhRZ2JXRnlaMmx1SUdGaWIzWmxYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXdPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNZNk9pMXRjeTEwYjI5c2RHbHdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQXZMeUJHYjJOMWN5QnpkSGxzWlhOY2JpQWdJQ0FnSUNBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhSc2FXNWxPaUF3TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDWTZPaTF0YjNvdFptOWpkWE10YjNWMFpYSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBd08xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ1l1ZEdGaUxXWnZZM1Z6T21adlkzVnpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkR3hwYm1VdGIyWm1jMlYwT2lBemNIZzdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBdkx5QlFjbVZ6YzJWa0lITjBlV3hsYzF4dUlDQWdJQ0FnSUNBbU9tRmpkR2wyWlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FtT2pvdGQyVmlhMmwwTFhOc2FXUmxjaTEwYUhWdFlpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdjR3g1Y2kxeVlXNW5aUzEwYUhWdFlpMWhZM1JwZG1Vb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ1k2T2kxdGIzb3RjbUZ1WjJVdGRHaDFiV0lnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0WVdOMGFYWmxLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBbU9qb3RiWE10ZEdoMWJXSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSEJzZVhJdGNtRnVaMlV0ZEdoMWJXSXRZV04wYVhabEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNTlYRzVjYmk4dklGWnBaR1Z2SUhKaGJtZGxJR2x1Y0hWMGMxeHVMbkJzZVhJdExYWnBaR1Z2SUdsdWNIVjBXM1I1Y0dVOUozSmhibWRsSjEwdWRHRmlMV1p2WTNWek9tWnZZM1Z6SUh0Y2JpQWdJQ0J2ZFhSc2FXNWxPaUF4Y0hnZ1pHOTBkR1ZrSUhSeVlXNXpjR0Z5Wlc1MGFYcGxLQ1J3YkhseUxYWnBaR1Z2TFdOdmJuUnliMnd0WTI5c2IzSXNJQzQxS1R0Y2JuMWNibHh1THk4Z1FYVmthVzhnY21GdVoyVWdhVzV3ZFhSelhHNHVjR3g1Y2kwdFlYVmthVzhnYVc1d2RYUmJkSGx3WlQwbmNtRnVaMlVuWFM1MFlXSXRabTlqZFhNNlptOWpkWE1nZTF4dUlDQWdJRzkxZEd4cGJtVTZJREZ3ZUNCa2IzUjBaV1FnZEhKaGJuTndZWEpsYm5ScGVtVW9KSEJzZVhJdFlYVmthVzh0WTI5dWRISnZiQzFqYjJ4dmNpd2dMalVwTzF4dWZWeHVYRzR2THlCVFkzSmxaVzRnY21WaFpHVnlJRzl1YkhrZ1pXeGxiV1Z1ZEhOY2JpNXdiSGx5WDE5emNpMXZibXg1SUh0Y2JpQWdJQ0JqYkdsd09pQnlaV04wS0RGd2VDd2dNWEI0TENBeGNIZ3NJREZ3ZUNrN1hHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmx4dUlDQWdJQzh2SUNGcGJYQnZjblJoYm5RZ2FYTWdibTkwSUdGc2QyRjVjeUJ1WldWa1pXUmNiaUFnSUNCQWFXWWdKSEJzZVhJdGMzSXRiMjVzZVMxcGJYQnZjblJoYm5RZ1BUMGdkSEoxWlNCN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpTQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3SUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01DQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREZ3ZUNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01YQjRJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdmU0JBWld4elpTQjdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTUR0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBd08xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERndlRHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREZ3ZUR0Y2JpQWdJQ0I5WEc1OVhHNWNiaTh2SUZacFpHVnZYRzR1Y0d4NWNsOWZkbWxrWlc4dGQzSmhjSEJsY2lCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNNd01EQTdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nYVc1b1pYSnBkRHRjYm4xY2JseHVMeThnUTI5dWRHRnBibVZ5SUdadmNpQmxiV0psWkhOY2JpNXdiSGx5WDE5MmFXUmxieTFsYldKbFpDQjdYRzRnSUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURVMkxqSTFKVHNnTHlvZ01UWTZPU0FxTDF4dUlDQWdJR2hsYVdkb2REb2dNRHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lCcGJtaGxjbWwwTzF4dVhHNGdJQ0FnTHk4Z1VtVnhkV2x5WlNCdmRtVnlabXh2ZHlCaGJtUWdlaTFwYm1SbGVDQjBieUJtYjNKalpTQmliM0prWlhJdGNtRmthWFZ6WEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnSUNCNkxXbHVaR1Y0T2lBd08xeHVYRzRnSUNBZ2FXWnlZVzFsSUh0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQjBiM0E2SURBN1hHNGdJQ0FnSUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREV3TUNVN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01EdGNiaUFnSUNBZ0lDQWdkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdWbWx0Wlc4Z2FHRmphMXh1SUNBZ0lENGdaR2wySUh0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01qQXdKVHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMHpOUzQ1TlNVcE8xeHVJQ0FnSUgxY2JuMWNiaTh2SUZSdklHRnNiRzkzSUcxdmRYTmxJR1YyWlc1MGN5QjBieUJpWlNCallYQjBkWEpsWkNCcFppQm1kV3hzSUhOMWNIQnZjblJjYmk1d2JIbHlJQzV3YkhseVgxOTJhV1JsYnkxbGJXSmxaQ0JwWm5KaGJXVWdlMXh1SUNBZ0lIQnZhVzUwWlhJdFpYWmxiblJ6T2lCdWIyNWxPMXh1ZlZ4dVhHNHZMeUJEWVhCMGFXOXVjMXh1THk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpOHZJRWhwWkdVZ1pHVm1ZWFZzZENCallYQjBhVzl1YzF4dUxuQnNlWElnZG1sa1pXODZPaTEzWldKcmFYUXRiV1ZrYVdFdGRHVjRkQzEwY21GamF5MWpiMjUwWVdsdVpYSWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc1OVhHNHVjR3g1Y2w5ZlkyRndkR2x2Ym5NZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUdKdmRIUnZiVG9nTUR0Y2JpQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lIQmhaR1JwYm1jNklDZ2tjR3g1Y2kxamIyNTBjbTlzTFhOd1lXTnBibWNnS2lBeUtUdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29MU2drY0d4NWNpMWpiMjUwY205c0xYTndZV05wYm1jZ0tpQTJLU2s3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SUM0emN5QmxZWE5sTzF4dUlDQWdJR052Ykc5eU9pQWtjR3g1Y2kxallYQjBhVzl1Y3kxamIyeHZjanRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJQ1J3YkhseUxXWnZiblF0YzJsNlpTMWpZWEIwYVc5dWN5MWlZWE5sTzF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVYRzRnSUNBZ2MzQmhiaUI3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ1pteHZiM0lvSkhCc2VYSXRZMjl1ZEhKdmJDMXpjR0ZqYVc1bklDOGdNeWtnSkhCc2VYSXRZMjl1ZEhKdmJDMXpjR0ZqYVc1bk8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrY0d4NWNpMWpZWEIwYVc5dWN5MWlaenRjYmlBZ0lDQWdJQ0FnWW05NExXUmxZMjl5WVhScGIyNHRZbkpsWVdzNklHTnNiMjVsTzF4dUlDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNVFV3SlR0Y2JpQWdJQ0I5WEc0Z0lDQWdjM0JoYmpwbGJYQjBlU0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklDUndiSGx5TFdKd0xYTmpjbVZsYmkxdFpDa2dlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SUNSd2JIbHlMV1p2Ym5RdGMybDZaUzFqWVhCMGFXOXVjeTF0WldScGRXMDdYRzRnSUNBZ2ZWeHVmVnh1TG5Cc2VYSXRMV05oY0hScGIyNXpMV0ZqZEdsMlpTQXVjR3g1Y2w5ZlkyRndkR2x2Ym5NZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dUxuQnNlWEl0TFdocFpHVXRZMjl1ZEhKdmJITWdMbkJzZVhKZlgyTmhjSFJwYjI1eklIdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29MU2drY0d4NWNpMWpiMjUwY205c0xYTndZV05wYm1jZ0tpQXlLU2s3WEc1OVhHNHZMeUJNWVhKblpTQmpZWEIwYVc5dWN5QnBiaUJtZFd4c0lITmpjbVZsYmlCdmJpQnNZWEpuWlhJZ2MyTnlaV1Z1YzF4dVFHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklDUndiSGx5TFdKd0xYTmpjbVZsYmkxc1p5a2dlMXh1SUNBZ0lDNXdiSGx5TFMxbWRXeHNjMk55WldWdUxXRmpkR2wyWlNBdWNHeDVjbDlmWTJGd2RHbHZibk1nZTF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklDUndiSGx5TFdadmJuUXRjMmw2WlMxallYQjBhVzl1Y3kxc1lYSm5aVHRjYmlBZ0lDQjlYRzU5WEc1Y2JpOHZJRU52Ym5SeWIyeHpYRzR2THlBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUx5OGdTR2xrWlNCdVlYUnBkbVVnWTI5dWRISnZiSE5jYmk1d2JIbHlJRG82TFhkbFltdHBkQzF0WldScFlTMWpiMjUwY205c2N5QjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYm4xY2JseHVMeThnVUd4aGVXSmhZMnNnWTI5dWRISnZiSE5jYmk1d2JIbHlYMTlqYjI1MGNtOXNjeUI3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeE8xeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JseHVJQ0FnSUM4dklGTndZV05wYm1kY2JpQWdJQ0ErSUdKMWRIUnZiaXhjYmlBZ0lDQXVjR3g1Y2w5ZmNISnZaM0psYzNNc1hHNGdJQ0FnTG5Cc2VYSmZYM1JwYldVZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nS0NSd2JIbHlMV052Ym5SeWIyd3RjM0JoWTJsdVp5QXZJRElwTzF4dVhHNGdJQ0FnSUNBZ0lDWTZabWx5YzNRdFkyaHBiR1FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SURBN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnTG5Cc2VYSmZYM1p2YkhWdFpTQjdYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBb0pIQnNlWEl0WTI5dWRISnZiQzF6Y0dGamFXNW5JQzhnTWlrN1hHNGdJQ0FnZlZ4dUlDQWdJRnRrWVhSaExYQnNlWEk5WENKd1lYVnpaVndpWFNCN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF3TzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUVKMWRIUnZibk5jYmlBZ0lDQmlkWFIwYjI0Z2UxeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0FnSUNBZ1pteGxlQzF6YUhKcGJtczZJREE3WEc0Z0lDQWdJQ0FnSUc5MlpYSm1iRzkzT2lCMmFYTnBZbXhsT3lBdkx5QkpSVEV4WEc0Z0lDQWdJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJQ2drY0d4NWNpMWpiMjUwY205c0xYTndZV05wYm1jZ0tpQXVOeWs3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjam9nTUR0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE53ZUR0Y2JpQWdJQ0FnSUNBZ1kzVnljMjl5T2lCd2IybHVkR1Z5TzF4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQmlZV05yWjNKdmRXNWtJQzR6Y3lCbFlYTmxMQ0JqYjJ4dmNpQXVNM01nWldGelpTd2diM0JoWTJsMGVTQXVNM01nWldGelpUdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklHbHVhR1Z5YVhRN1hHNWNiaUFnSUNBZ0lDQWdjM1puSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQWtjR3g1Y2kxamIyNTBjbTlzTFdsamIyNHRjMmw2WlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dKSEJzZVhJdFkyOXVkSEp2YkMxcFkyOXVMWE5wZW1VN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdacGJHdzZJR04xY25KbGJuUkRiMnh2Y2p0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQzh2SUVSbFptRjFiSFFnWm05amRYTmNiaUFnSUNBZ0lDQWdKanBtYjJOMWN5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUnNhVzVsT2lBd08xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdTR2xrWlNCMGIyZG5iR1VnYVdOdmJuTWdZbmtnWkdWbVlYVnNkRnh1SUNBZ0lDNXBZMjl1TFMxbGVHbDBMV1oxYkd4elkzSmxaVzRzWEc0Z0lDQWdMbWxqYjI0dExXMTFkR1ZrTEZ4dUlDQWdJQzVwWTI5dUxTMWpZWEIwYVc5dWN5MXZiaUI3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklDUndiSGx5TFdKd0xYTmpjbVZsYmkxemJTa2dlMXh1SUNBZ0lDQWdJQ0ErSUdKMWRIUnZiaXhjYmlBZ0lDQWdJQ0FnTG5Cc2VYSmZYM0J5YjJkeVpYTnpMRnh1SUNBZ0lDQWdJQ0F1Y0d4NWNsOWZkR2x0WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ0pIQnNlWEl0WTI5dWRISnZiQzF6Y0dGamFXNW5PMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dUx5OGdTR2xrWlNCamIyNTBjbTlzYzF4dUxuQnNlWEl0TFdocFpHVXRZMjl1ZEhKdmJITWdMbkJzZVhKZlgyTnZiblJ5YjJ4eklIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0FnSUhCdmFXNTBaWEl0WlhabGJuUnpPaUJ1YjI1bE8xeHVmVnh1WEc0dkx5QldhV1JsYnlCamIyNTBjbTlzYzF4dUxuQnNlWEl0TFhacFpHVnZJQzV3YkhseVgxOWpiMjUwY205c2N5QjdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdjbWxuYUhRNklEQTdYRzRnSUNBZ1ltOTBkRzl0T2lBd08xeHVJQ0FnSUhCaFpHUnBibWM2SUNna2NHeDVjaTFqYjI1MGNtOXNMWE53WVdOcGJtY2dLaUExS1NBa2NHeDVjaTFqYjI1MGNtOXNMWE53WVdOcGJtY2dKSEJzZVhJdFkyOXVkSEp2YkMxemNHRmphVzVuTzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUd4cGJtVmhjaTFuY21Ga2FXVnVkQ2gwY21GdWMzQmhjbVZ1ZEdsNlpTZ2tjR3g1Y2kxMmFXUmxieTFqYjI1MGNtOXNjeTFpWnl3Z01Ta3NJSFJ5WVc1emNHRnlaVzUwYVhwbEtDUndiSGx5TFhacFpHVnZMV052Ym5SeWIyeHpMV0puTENBdU5Ta3BPMXh1SUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjB0YkdWbWRDMXlZV1JwZFhNNklHbHVhR1Z5YVhRN1hHNGdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJTMXlhV2RvZEMxeVlXUnBkWE02SUdsdWFHVnlhWFE3WEc0Z0lDQWdZMjlzYjNJNklDUndiSGx5TFhacFpHVnZMV052Ym5SeWIyd3RZMjlzYjNJN1hHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBdU0zTWdaV0Z6WlR0Y2JseHVJQ0FnSUdKMWRIUnZiaUI3WEc0Z0lDQWdJQ0FnSUM4dklFaHZkbVZ5SUdGdVpDQjBZV0lnWm05amRYTmNiaUFnSUNBZ0lDQWdKaTUwWVdJdFptOWpkWE02Wm05amRYTXNYRzRnSUNBZ0lDQWdJQ1k2YUc5MlpYSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSEJzZVhJdGRtbGtaVzh0WTI5dWRISnZiQzFpWnkxb2IzWmxjanRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBa2NHeDVjaTEyYVdSbGJ5MWpiMjUwY205c0xXTnZiRzl5TFdodmRtVnlPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJCZFdScGJ5QmpiMjUwY205c2MxeHVMbkJzZVhJdExXRjFaR2x2SUM1d2JIbHlYMTlqYjI1MGNtOXNjeUI3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dKSEJzZVhJdFkyOXVkSEp2YkMxemNHRmphVzVuTzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklHbHVhR1Z5YVhRN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIQnNlWEl0WVhWa2FXOHRZMjl1ZEhKdmJITXRZbWM3WEc0Z0lDQWdZbTl5WkdWeU9pQWtjR3g1Y2kxaGRXUnBieTFqYjI1MGNtOXNjeTFpYjNKa1pYSTdYRzRnSUNBZ1kyOXNiM0k2SUNSd2JIbHlMV0YxWkdsdkxXTnZiblJ5YjJ3dFkyOXNiM0k3WEc1Y2JpQWdJQ0JpZFhSMGIyNGdlMXh1SUNBZ0lDQWdJQ0F2THlCSWIzWmxjaUJoYm1RZ2RHRmlJR1p2WTNWelhHNGdJQ0FnSUNBZ0lDWXVkR0ZpTFdadlkzVnpPbVp2WTNWekxGeHVJQ0FnSUNBZ0lDQW1PbWh2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUndiSGx5TFdGMVpHbHZMV052Ym5SeWIyd3RZbWN0YUc5MlpYSTdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkhCc2VYSXRZWFZrYVc4dFkyOXVkSEp2YkMxamIyeHZjaTFvYjNabGNqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjFjYmx4dUx5OGdUR0Z5WjJVZ2NHeGhlU0JpZFhSMGIyNGdLSFpwWkdWdklHOXViSGtwWEc0dWNHeDVjbDlmY0d4aGVTMXNZWEpuWlNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnZWkxcGJtUmxlRG9nTVR0Y2JpQWdJQ0IwYjNBNklEVXdKVHRjYmlBZ0lDQnNaV1owT2lBMU1DVTdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVW9MVFV3SlN3Z0xUVXdKU2s3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dKSEJzZVhJdFkyOXVkSEp2YkMxemNHRmphVzVuTzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNSd2JIbHlMWFpwWkdWdkxXTnZiblJ5YjJ3dFltY3RhRzkyWlhJN1hHNGdJQ0FnWW05eVpHVnlPaUEwY0hnZ2MyOXNhV1FnWTNWeWNtVnVkRU52Ykc5eU8xeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREV3TUNVN1hHNGdJQ0FnWW05NExYTm9ZV1J2ZHpvZ01DQXhjSGdnTVhCNElIUnlZVzV6Y0dGeVpXNTBhWHBsS0NNd01EQXNJQzQ0TlNrN1hHNGdJQ0FnWTI5c2IzSTZJQ1J3YkhseUxYWnBaR1Z2TFdOdmJuUnliMnd0WTI5c2IzSTdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0emN5QmxZWE5sTzF4dVhHNGdJQ0FnYzNabklIdGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQXljSGc3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF5TUhCNE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklESXdjSGc3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0JtYVd4c09pQmpkWEp5Wlc1MFEyOXNiM0k3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKanBtYjJOMWN5QjdYRzRnSUNBZ0lDQWdJRzkxZEd4cGJtVTZJREZ3ZUNCa2IzUjBaV1FnZEhKaGJuTndZWEpsYm5ScGVtVW9KSEJzZVhJdGRtbGtaVzh0WTI5dWRISnZiQzFqYjJ4dmNpd2dMalVwTzF4dUlDQWdJSDFjYm4xY2JpNXdiSGx5SUM1d2JIbHlYMTl3YkdGNUxXeGhjbWRsSUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNTlYRzR1Y0d4NWNpMHRZWFZrYVc4Z0xuQnNlWEpmWDNCc1lYa3RiR0Z5WjJVZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzU5WEc0dWNHeDVjaTB0Y0d4aGVXbHVaeUF1Y0d4NWNsOWZjR3hoZVMxc1lYSm5aU0I3WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRHRjYmlBZ0lDQjJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNDdYRzU5WEc1Y2JpOHZJRk4wWVhSbGMxeHVMbkJzZVhKZlgyTnZiblJ5YjJ4eklGdGtZWFJoTFhCc2VYSTlKM0JoZFhObEoxMHNYRzR1Y0d4NWNpMHRjR3hoZVdsdVp5QXVjR3g1Y2w5ZlkyOXVkSEp2YkhNZ1cyUmhkR0V0Y0d4NWNqMG5jR3hoZVNkZElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dUxuQnNlWEl0TFhCc1lYbHBibWNnTG5Cc2VYSmZYMk52Ym5SeWIyeHpJRnRrWVhSaExYQnNlWEk5SjNCaGRYTmxKMTBnZTF4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JuMWNibHh1THk4Z1EyaGhibWRsSUdsamIyNXpJRzl1SUhOMFlYUmxJR05vWVc1blpWeHVMbkJzZVhJdExXWjFiR3h6WTNKbFpXNHRZV04wYVhabElDNXBZMjl1TFMxbGVHbDBMV1oxYkd4elkzSmxaVzRzWEc0dWNHeDVjaTB0YlhWMFpXUWdMbkJzZVhKZlgyTnZiblJ5YjJ4eklDNXBZMjl1TFMxdGRYUmxaQ3hjYmk1d2JIbHlMUzFqWVhCMGFXOXVjeTFoWTNScGRtVWdMbkJzZVhKZlgyTnZiblJ5YjJ4eklDNXBZMjl1TFMxallYQjBhVzl1Y3kxdmJpQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc1Y2JpQWdJQ0FtSUNzZ2MzWm5JSHRjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNCOVhHNTlYRzVjYmk4dklGTnZiV1VnYjNCMGFXOXVjeUJoY21VZ2FHbGtaR1Z1SUdKNUlHUmxabUYxYkhSY2JpNXdiSGx5SUZ0a1lYUmhMWEJzZVhJOUoyTmhjSFJwYjI1ekoxMHNYRzR1Y0d4NWNpQmJaR0YwWVMxd2JIbHlQU2RtZFd4c2MyTnlaV1Z1SjEwZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzU5WEc0dWNHeDVjaTB0WTJGd2RHbHZibk10Wlc1aFlteGxaQ0JiWkdGMFlTMXdiSGx5UFNkallYQjBhVzl1Y3lkZExGeHVMbkJzZVhJdExXWjFiR3h6WTNKbFpXNHRaVzVoWW14bFpDQmJaR0YwWVMxd2JIbHlQU2RtZFd4c2MyTnlaV1Z1SjEwZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNibjFjYmx4dUx5OGdWRzl2YkhScGNITmNiaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0dWNHeDVjbDlmZEc5dmJIUnBjQ0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lIb3RhVzVrWlhnNklESTdYRzRnSUNBZ1ltOTBkRzl0T2lBeE1EQWxPMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUNna2NHeDVjaTEwYjI5c2RHbHdMWEJoWkdScGJtY2dLaUF5S1R0Y2JpQWdJQ0J3WVdSa2FXNW5PaUFrY0d4NWNpMTBiMjlzZEdsd0xYQmhaR1JwYm1jZ0tDUndiSGx5TFhSdmIyeDBhWEF0Y0dGa1pHbHVaeUFxSURFdU5TazdYRzRnSUNBZ2NHOXBiblJsY2kxbGRtVnVkSE02SUc1dmJtVTdYRzVjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ1J3YkhseUxYUnZiMngwYVhBdFltYzdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nSkhCc2VYSXRkRzl2YkhScGNDMXlZV1JwZFhNN1hHNWNiaUFnSUNCamIyeHZjam9nSkhCc2VYSXRkRzl2YkhScGNDMWpiMnh2Y2p0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SUNSd2JIbHlMV1p2Ym5RdGMybDZaUzF6YldGc2JEdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dNUzR6TzF4dVhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVb0xUVXdKU3dnTVRCd2VDa2djMk5oYkdVb0xqZ3BPMXh1SUNBZ0lIUnlZVzV6Wm05eWJTMXZjbWxuYVc0NklEVXdKU0F4TURBbE8xeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQXVNbk1nTGpGeklHVmhjMlVzSUc5d1lXTnBkSGtnTGpKeklDNHhjeUJsWVhObE8xeHVYRzRnSUNBZ0pqbzZZbVZtYjNKbElIdGNiaUFnSUNBZ0lDQWdMeThnUVhKeWIzZHpYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJQ2NuTzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBd08xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklEQTdYRzRnSUNBZ0lDQWdJR3hsWm5RNklEVXdKVHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtDMDFNQ1VwTzF4dVhHNGdJQ0FnSUNBZ0lDOHZJRlJvWlNCaVlXTnJaM0p2ZFc1a0lIUnlhV0Z1WjJ4bFhHNGdJQ0FnSUNBZ0lHSnZkSFJ2YlRvZ0xTUndiSGx5TFhSdmIyeDBhWEF0WVhKeWIzY3RjMmw2WlR0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKcFoyaDBPaUFrY0d4NWNpMTBiMjlzZEdsd0xXRnljbTkzTFhOcGVtVWdjMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMTBiM0E2SUNSd2JIbHlMWFJ2YjJ4MGFYQXRZWEp5YjNjdGMybDZaU0J6YjJ4cFpDQWtjR3g1Y2kxMGIyOXNkR2x3TFdKbk8xeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGJHVm1kRG9nSkhCc2VYSXRkRzl2YkhScGNDMWhjbkp2ZHkxemFYcGxJSE52Ykdsa0lIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lDQWdJQ0I2TFdsdVpHVjRPaUF5TzF4dUlDQWdJSDFjYm4xY2JpNXdiSGx5SUdKMWRIUnZianBvYjNabGNpQXVjR3g1Y2w5ZmRHOXZiSFJwY0N4Y2JpNXdiSGx5SUdKMWRIUnZiaTUwWVdJdFptOWpkWE02Wm05amRYTWdMbkJzZVhKZlgzUnZiMngwYVhBc1hHNHVjR3g1Y2w5ZmRHOXZiSFJwY0MwdGRtbHphV0pzWlNCN1hHNGdJQ0FnYjNCaFkybDBlVG9nTVR0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlNndE5UQWxMQ0F3S1NCelkyRnNaU2d4S1R0Y2JuMWNiaTV3YkhseUlHSjFkSFJ2Ympwb2IzWmxjaUF1Y0d4NWNsOWZkRzl2YkhScGNDQjdYRzRnSUNBZ2VpMXBibVJsZURvZ016dGNibjFjYmx4dUx5OGdSbWx5YzNRZ2RHOXZiSFJwY0Z4dUxuQnNlWEpmWDJOdmJuUnliMnh6SUdKMWRIUnZianBtYVhKemRDMWphR2xzWkNBdWNHeDVjbDlmZEc5dmJIUnBjQ0I3WEc0Z0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpTZ3dMQ0F4TUhCNEtTQnpZMkZzWlNndU9DazdYRzRnSUNBZ2RISmhibk5tYjNKdExXOXlhV2RwYmpvZ01DQXhNREFsTzF4dVhHNGdJQ0FnSmpvNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nS0NSd2JIbHlMV052Ym5SeWIyd3RhV052YmkxemFYcGxJQzhnTWlrZ0t5QWtjR3g1Y2kxamIyNTBjbTlzTFhCaFpHUnBibWM3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJNWVhOMElIUnZiMngwYVhCY2JpNXdiSGx5WDE5amIyNTBjbTlzY3lCaWRYUjBiMjQ2YkdGemRDMWphR2xzWkNBdWNHeDVjbDlmZEc5dmJIUnBjQ0I3WEc0Z0lDQWdjbWxuYUhRNklEQTdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVW9NQ3dnTVRCd2VDa2djMk5oYkdVb0xqZ3BPMXh1SUNBZ0lIUnlZVzV6Wm05eWJTMXZjbWxuYVc0NklERXdNQ1VnTVRBd0pUdGNibHh1SUNBZ0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJR3hsWm5RNklHRjFkRzg3WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUFvSkhCc2VYSXRZMjl1ZEhKdmJDMXBZMjl1TFhOcGVtVWdMeUF5S1NBcklDUndiSGx5TFdOdmJuUnliMnd0Y0dGa1pHbHVaenRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEVXdKU2s3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHVjR3g1Y2w5ZlkyOXVkSEp2YkhNZ1luVjBkRzl1T21acGNuTjBMV05vYVd4a0xGeHVMbkJzZVhKZlgyTnZiblJ5YjJ4eklHSjFkSFJ2Ympwc1lYTjBMV05vYVd4a0lIdGNiaUFnSUNBbU9taHZkbVZ5SUM1d2JIbHlYMTkwYjI5c2RHbHdMRnh1SUNBZ0lDWXVkR0ZpTFdadlkzVnpPbVp2WTNWeklDNXdiSGx5WDE5MGIyOXNkR2x3TEZ4dUlDQWdJQzV3YkhseVgxOTBiMjlzZEdsd0xTMTJhWE5wWW14bElIdGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTUN3Z01Da2djMk5oYkdVb01TazdYRzRnSUNBZ2ZWeHVmVnh1WEc0dkx5QlFiR0Y1WW1GamF5QndjbTluY21WemMxeHVMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmk4dklEeHdjbTluY21WemN6NGdaV3hsYldWdWRGeHVMbkJzZVhKZlgzQnliMmR5WlhOeklIdGNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCbWJHVjRPaUF4TzF4dVhHNGdJQ0FnYVc1d2RYUmJkSGx3WlQxY0luSmhibWRsWENKZElIdGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lDQWdJQ0I2TFdsdVpHVjRPaUF5TzF4dVhHNGdJQ0FnSUNBZ0lDWTZPaTEzWldKcmFYUXRjMnhwWkdWeUxYSjFibTVoWW14bExYUnlZV05ySUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ1k2T2kxdGIzb3RjbUZ1WjJVdGRISmhZMnNnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZEhKaGJuTndZWEpsYm5RN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdKam82TFcxekxXWnBiR3d0ZFhCd1pYSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCVFpXVnJJSFJ2YjJ4MGFYQWdkRzhnYzJodmR5QjBhVzFsWEc0Z0lDQWdMbkJzZVhKZlgzUnZiMngwYVhBZ2UxeHVJQ0FnSUNBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUgxY2JuMWNiaTV3YkhseUlDNXdiSGx5WDE5d2NtOW5jbVZ6Y3lCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVmVnh1WEc0dWNHeDVjbDlmY0hKdlozSmxjM010TFdKMVptWmxjaXhjYmk1d2JIbHlYMTl3Y205bmNtVnpjeTB0Y0d4aGVXVmtMRnh1TG5Cc2VYSmZYM1p2YkhWdFpTMHRaR2x6Y0d4aGVTQjdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdkRzl3T2lBMU1DVTdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2FHVnBaMmgwT2lBa2NHeDVjaTF5WVc1blpTMTBjbUZqYXkxb1pXbG5hSFE3WEc0Z0lDQWdiV0Z5WjJsdU9pQXRLQ1J3YkhseUxYSmhibWRsTFhSeVlXTnJMV2hsYVdkb2RDQXZJRElwSURBZ01EdGNiaUFnSUNCd1lXUmthVzVuT2lBd08xeHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUIwYjNBN1hHNGdJQ0FnWVhCd1pXRnlZVzVqWlRvZ2JtOXVaVHRjYmlBZ0lDQmliM0prWlhJNklHNXZibVU3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01UQXdjSGc3WEc1Y2JpQWdJQ0FtT2pvdGQyVmlhMmwwTFhCeWIyZHlaWE56TFdKaGNpQjdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUgxY2JpQWdJQ0FtT2pvdGQyVmlhMmwwTFhCeWIyZHlaWE56TFhaaGJIVmxJSHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ1kzVnljbVZ1ZEVOdmJHOXlPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhNREJ3ZUR0Y2JpQWdJQ0FnSUNBZ2JXbHVMWGRwWkhSb09pQWtjR3g1Y2kxeVlXNW5aUzEwY21GamF5MW9aV2xuYUhRN1hHNGdJQ0FnZlZ4dUlDQWdJQ1k2T2kxdGIzb3RjSEp2WjNKbGMzTXRZbUZ5SUh0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dZM1Z5Y21WdWRFTnZiRzl5TzF4dUlDQWdJQ0FnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF4TURCd2VEdGNiaUFnSUNBZ0lDQWdiV2x1TFhkcFpIUm9PaUFrY0d4NWNpMXlZVzVuWlMxMGNtRmpheTFvWldsbmFIUTdYRzRnSUNBZ2ZWeHVJQ0FnSUNZNk9pMXRjeTFtYVd4c0lIdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01UQXdjSGc3WEc0Z0lDQWdmVnh1ZlZ4dUxuQnNlWEpmWDNCeWIyZHlaWE56TFMxd2JHRjVaV1FzWEc0dWNHeDVjbDlmZG05c2RXMWxMUzFrYVhOd2JHRjVJSHRjYmlBZ0lDQjZMV2x1WkdWNE9pQXhPMXh1SUNBZ0lHTnZiRzl5T2lBa2NHeDVjaTF5WVc1blpTMXpaV3hsWTNSbFpDMWlaenRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUIwY21GdWMzQmhjbVZ1ZER0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCdWIyNWxPMXh1WEc0Z0lDQWdKam82TFhkbFltdHBkQzF3Y205bmNtVnpjeTEyWVd4MVpTQjdYRzRnSUNBZ0lDQWdJRzFwYmkxM2FXUjBhRG9nSkhCc2VYSXRjbUZ1WjJVdGRISmhZMnN0YUdWcFoyaDBPMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURrNUpUdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYUnZjQzF5YVdkb2RDMXlZV1JwZFhNNklEQTdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMWliM1IwYjIwdGNtbG5hSFF0Y21Ga2FYVnpPaUF3TzF4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQnViMjVsTzF4dUlDQWdJSDFjYmlBZ0lDQW1Pam90Ylc5NkxYQnliMmR5WlhOekxXSmhjaUI3WEc0Z0lDQWdJQ0FnSUcxcGJpMTNhV1IwYURvZ0pIQnNlWEl0Y21GdVoyVXRkSEpoWTJzdGFHVnBaMmgwTzF4dUlDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklEazVKVHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMWFJ2Y0MxeWFXZG9kQzF5WVdScGRYTTZJREE3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMHRjbWxuYUhRdGNtRmthWFZ6T2lBd08xeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJ1YjI1bE8xeHVJQ0FnSUgxY2JpQWdJQ0FtT2pvdGJYTXRabWxzYkNCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdmVnh1ZlZ4dUxuQnNlWEpmWDNCeWIyZHlaWE56TFMxaWRXWm1aWElnZTF4dUlDQWdJQ1k2T2kxM1pXSnJhWFF0Y0hKdlozSmxjM010ZG1Gc2RXVWdlMXh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCM2FXUjBhQ0F1TW5NZ1pXRnpaVHRjYmlBZ0lDQjlYRzRnSUNBZ0pqbzZMVzF2ZWkxd2NtOW5jbVZ6Y3kxaVlYSWdlMXh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCM2FXUjBhQ0F1TW5NZ1pXRnpaVHRjYmlBZ0lDQjlYRzRnSUNBZ0pqbzZMVzF6TFdacGJHd2dlMXh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCM2FXUjBhQ0F1TW5NZ1pXRnpaVHRjYmlBZ0lDQjlYRzU5WEc0dWNHeDVjaTB0ZG1sa1pXOGdMbkJzZVhKZlgzQnliMmR5WlhOekxTMWlkV1ptWlhJc1hHNHVjR3g1Y2kwdGRtbGtaVzhnTG5Cc2VYSmZYM1p2YkhWdFpTMHRaR2x6Y0d4aGVTQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSEJzZVhJdGRtbGtaVzh0Y21GdVoyVXRkSEpoWTJzdFltYzdYRzU5WEc0dWNHeDVjaTB0ZG1sa1pXOGdMbkJzZVhKZlgzQnliMmR5WlhOekxTMWlkV1ptWlhJZ2UxeHVJQ0FnSUdOdmJHOXlPaUFrY0d4NWNpMTJhV1JsYnkxd2NtOW5jbVZ6Y3kxaWRXWm1aWEpsWkMxaVp6dGNibjFjYmk1d2JIbHlMUzFoZFdScGJ5QXVjR3g1Y2w5ZmNISnZaM0psYzNNdExXSjFabVpsY2l4Y2JpNXdiSGx5TFMxaGRXUnBieUF1Y0d4NWNsOWZkbTlzZFcxbExTMWthWE53YkdGNUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtjR3g1Y2kxaGRXUnBieTF5WVc1blpTMTBjbUZqYXkxaVp6dGNibjFjYmk1d2JIbHlMUzFoZFdScGJ5QXVjR3g1Y2w5ZmNISnZaM0psYzNNdExXSjFabVpsY2lCN1hHNGdJQ0FnWTI5c2IzSTZJQ1J3YkhseUxXRjFaR2x2TFhCeWIyZHlaWE56TFdKMVptWmxjbVZrTFdKbk8xeHVmVnh1WEc0dkx5Qk1iMkZrYVc1bklITjBZWFJsWEc0dWNHeDVjaTB0Ykc5aFpHbHVaeUF1Y0d4NWNsOWZjSEp2WjNKbGMzTXRMV0oxWm1abGNpQjdYRzRnSUNBZ1lXNXBiV0YwYVc5dU9pQndiSGx5TFhCeWIyZHlaWE56SURGeklHeHBibVZoY2lCcGJtWnBibWwwWlR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJQ1J3YkhseUxYQnliMmR5WlhOekxXeHZZV1JwYm1jdGMybDZaU0FrY0d4NWNpMXdjbTluY21WemN5MXNiMkZrYVc1bkxYTnBlbVU3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJSEpsY0dWaGRDMTRPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklHeHBibVZoY2kxbmNtRmthV1Z1ZENoY2JpQWdJQ0FnSUNBZ0xUUTFaR1ZuTEZ4dUlDQWdJQ0FnSUNBa2NHeDVjaTF3Y205bmNtVnpjeTFzYjJGa2FXNW5MV0puSURJMUpTeGNiaUFnSUNBZ0lDQWdkSEpoYm5Od1lYSmxiblFnTWpVbExGeHVJQ0FnSUNBZ0lDQjBjbUZ1YzNCaGNtVnVkQ0ExTUNVc1hHNGdJQ0FnSUNBZ0lDUndiSGx5TFhCeWIyZHlaWE56TFd4dllXUnBibWN0WW1jZ05UQWxMRnh1SUNBZ0lDQWdJQ0FrY0d4NWNpMXdjbTluY21WemN5MXNiMkZrYVc1bkxXSm5JRGMxSlN4Y2JpQWdJQ0FnSUNBZ2RISmhibk53WVhKbGJuUWdOelVsTEZ4dUlDQWdJQ0FnSUNCMGNtRnVjM0JoY21WdWRDazdYRzRnSUNBZ1kyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVmVnh1TG5Cc2VYSXRMWFpwWkdWdkxuQnNlWEl0TFd4dllXUnBibWNnTG5Cc2VYSmZYM0J5YjJkeVpYTnpMUzFpZFdabVpYSWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUndiSGx5TFhacFpHVnZMWEJ5YjJkeVpYTnpMV0oxWm1abGNtVmtMV0puTzF4dWZWeHVMbkJzZVhJdExXRjFaR2x2TG5Cc2VYSXRMV3h2WVdScGJtY2dMbkJzZVhKZlgzQnliMmR5WlhOekxTMWlkV1ptWlhJZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSd2JIbHlMV0YxWkdsdkxYQnliMmR5WlhOekxXSjFabVpsY21Wa0xXSm5PMXh1ZlZ4dVhHNHZMeUJVYVcxbFhHNHZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1TG5Cc2VYSmZYM1JwYldVZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dKSEJzZVhJdFptOXVkQzF6YVhwbExYTnRZV3hzTzF4dWZWeHVMeThnVFdWa2FXRWdaSFZ5WVhScGIyNGdhR2xrWkdWdUlHOXVJSE50WVd4c0lITmpjbVZsYm5OY2JpNXdiSGx5WDE5MGFXMWxJQ3NnTG5Cc2VYSmZYM1JwYldVZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dKSEJzZVhJdFluQXRjMk55WldWdUxXMWtLU0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QkJaR1FnWVNCemJHRnphQ0JwYmlCaVpXWnZjbVZjYmlBZ0lDQW1PanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUFuWEZ3eU1EUTBKenRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQWtjR3g1Y2kxamIyNTBjbTlzTFhOd1lXTnBibWM3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZMeUJXYjJ4MWJXVmNiaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0dWNHeDVjbDlmZG05c2RXMWxJSHRjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dWZWeHVMbkJzZVhJZ0xuQnNlWEpmWDNadmJIVnRaU0I3WEc0Z0lDQWdabXhsZURvZ01UdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnSUNCcGJuQjFkRnQwZVhCbFBWd2ljbUZ1WjJWY0lsMGdlMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FnSUhvdGFXNWtaWGc2SURJN1hHNGdJQ0FnZlZ4dUlDQWdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUFrY0d4NWNpMWljQzF6WTNKbFpXNHRjMjBwSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ05qQndlRHRjYmlBZ0lDQjlYRzRnSUNBZ1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklDUndiSGx5TFdKd0xYTmpjbVZsYmkxdFpDa2dlMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURFd01IQjRPMXh1SUNBZ0lIMWNibjFjYmx4dUx5OGdTR2xrWlNCemIzVnVaQ0JqYjI1MGNtOXNjeUJ2YmlCcFQxTmNiaTh2SUVsMEozTWdibTkwSUhOMWNIQnZjblJsWkNCMGJ5QmphR0Z1WjJVZ2RtOXNkVzFsSUhWemFXNW5JRXBoZG1GVFkzSnBjSFE2WEc0dkx5Qm9kSFJ3Y3pvdkwyUmxkbVZzYjNCbGNpNWhjSEJzWlM1amIyMHZiR2xpY21GeWVTOXpZV1poY21rdlpHOWpkVzFsYm5SaGRHbHZiaTlCZFdScGIxWnBaR1Z2TDBOdmJtTmxjSFIxWVd3dlZYTnBibWRmU0ZSTlREVmZRWFZrYVc5ZlZtbGtaVzh2UkdWMmFXTmxMVk53WldOcFptbGpRMjl1YzJsa1pYSmhkR2x2Ym5NdlJHVjJhV05sTFZOd1pXTnBabWxqUTI5dWMybGtaWEpoZEdsdmJuTXVhSFJ0YkZ4dUxuQnNlWEl0TFdsekxXbHZjeUF1Y0d4NWNsOWZkbTlzZFcxbExGeHVMbkJzZVhJdExXbHpMV2x2Y3lCYlpHRjBZUzF3YkhseVBTZHRkWFJsSjEwZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMeThnUm5Wc2JITmpjbVZsYmx4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaTV3YkhseUxTMW1kV3hzYzJOeVpXVnVMV0ZqZEdsMlpTQjdYRzRnSUNBZ2NHOXphWFJwYjI0NklHWnBlR1ZrTzF4dUlDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQWdJSEpwWjJoME9pQXdPMXh1SUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2VpMXBibVJsZURvZ01UQXdNREF3TURBN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0l6QXdNRHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBd0lDRnBiWEJ2Y25SaGJuUTdYRzVjYmlBZ0lDQjJhV1JsYnlCN1hHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQjlYRzRnSUNBZ0xuQnNlWEpmWDNacFpHVnZMWGR5WVhCd1pYSWdlMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREV3TUNVN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lIMWNiaUFnSUNBdWNHeDVjbDlmZG1sa1pXOHRaVzFpWldRZ2UxeHVJQ0FnSUNBZ0lDQXZMeUJTWlhabGNuUWdiM1psY21ac2IzY2dZMmhoYm1kbFhHNGdJQ0FnSUNBZ0lHOTJaWEptYkc5M09pQjJhWE5wWW14bE8xeHVJQ0FnSUgxY2JpQWdJQ0F1Y0d4NWNsOWZZMjl1ZEhKdmJITWdlMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUdKdmRIUnZiVG9nTUR0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURBN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1ZtbHRaVzhnY21WeGRXbHlaWE1nYzI5dFpTQmthV1ptWlhKbGJuUWdjM1I1YkdsdVoxeHVJQ0FnSUNZdWNHeDVjaTB0ZG1sdFpXOGdMbkJzZVhKZlgzWnBaR1Z2TFhkeVlYQndaWElnZTF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURBN1hHNGdJQ0FnSUNBZ0lIUnZjRG9nTlRBbE8xeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTFRVd0pTazdYRzRnSUNBZ2ZWeHVmVnh1SWl3aUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklGQnNlWElnZG1GeWFXRmliR1Z6WEc0dkx5Qm9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZjMlZzZWk5d2JIbHlYRzR2THlCb2RIUndjem92TDNKdlltOTBjeTUwYUc5MVoyaDBZbTkwTG1OdmJTOXpZWE56TFdSbFptRjFiSFJjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmk4dklGTmxkSFJwYm1kelhHNGtjR3g1Y2kxaWIzSmtaWEl0WW05NE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKMVpTQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxYUnZkV05vTFdGamRHbHZiam9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNuVmxJQ0ZrWldaaGRXeDBPMXh1SkhCc2VYSXRjM0l0YjI1c2VTMXBiWEJ2Y25SaGJuUTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnlkV1VnSVdSbFptRjFiSFE3WEc1Y2JpOHZJRU52Ykc5eWMxeHVKSEJzZVhJdFkyOXNiM0l0YldGcGJqb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNNek5EazRaR0lnSVdSbFptRjFiSFE3WEc1Y2JpOHZJRVp2Ym5RZ2MybDZaWE5jYmlSd2JIbHlMV1p2Ym5RdFptRnRhV3g1T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkJkbVZ1YVhJc0lDZEJkbVZ1YVhJZ1RtVjRkQ2NzSUNkSVpXeDJaWFJwWTJFZ1RtVjFaU2NzSUNkVFpXZHZaU0JWU1Njc0lFaGxiSFpsZEdsallTd2dRWEpwWVd3c0lITmhibk10YzJWeWFXWWdJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMW1iMjUwTFhOcGVtVXRjMjFoYkd3NklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01UUndlQ0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMV1p2Ym5RdGMybDZaUzFpWVhObE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhObkI0SUNGa1pXWmhkV3gwTzF4dVhHNHZMeUJEWVhCMGFXOXVjMXh1SkhCc2VYSXRZMkZ3ZEdsdmJuTXRZbWM2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Y0dGeVpXNTBhWHBsS0NNd01EQXNJQzR6S1NBaFpHVm1ZWFZzZER0Y2JpUndiSGx5TFdOaGNIUnBiMjV6TFdOdmJHOXlPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FqWm1abUlDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFptOXVkQzF6YVhwbExXTmhjSFJwYjI1ekxXSmhjMlU2SUNBZ0lDQWdJQ0FnSUNSd2JIbHlMV1p2Ym5RdGMybDZaUzFpWVhObElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFptOXVkQzF6YVhwbExXTmhjSFJwYjI1ekxXMWxaR2wxYlRvZ0lDQWdJQ0FnSUdObGFXd29KSEJzZVhJdFptOXVkQzF6YVhwbExXSmhjMlVnS2lBeExqVXBJQ0ZrWldaaGRXeDBPMXh1SkhCc2VYSXRabTl1ZEMxemFYcGxMV05oY0hScGIyNXpMV3hoY21kbE9pQWdJQ0FnSUNBZ0lDZ2tjR3g1Y2kxbWIyNTBMWE5wZW1VdFltRnpaU0FxSURJcElDRmtaV1poZFd4ME8xeHVYRzR2THlCRGIyNTBjbTlzYzF4dUpIQnNlWEl0WTI5dWRISnZiQzFwWTI5dUxYTnBlbVU2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREU0Y0hnZ0lXUmxabUYxYkhRN1hHNGtjR3g1Y2kxamIyNTBjbTlzTFhOd1lXTnBibWM2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRCd2VDQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxXTnZiblJ5YjJ3dGNHRmtaR2x1WnpvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBb0pIQnNlWEl0WTI5dWRISnZiQzF6Y0dGamFXNW5JQ29nTGpjcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdGRtbGtaVzh0WTI5dWRISnZiSE10WW1jNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNNd01EQWdJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMTJhV1JsYnkxamIyNTBjbTlzTFdOdmJHOXlPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0kyWm1aaUFoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWFpwWkdWdkxXTnZiblJ5YjJ3dFkyOXNiM0l0YUc5MlpYSTZJQ0FnSUNBZ0lDQWpabVptSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0ZG1sa1pXOHRZMjl1ZEhKdmJDMWlaeTFvYjNabGNqb2dJQ0FnSUNBZ0lDQWdJQ1J3YkhseUxXTnZiRzl5TFcxaGFXNGdJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMWhkV1JwYnkxamIyNTBjbTlzY3kxaVp6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0kyWm1aaUFoWkdWbVlYVnNkRHRjYmlSd2JIbHlMV0YxWkdsdkxXTnZiblJ5YjJ4ekxXSnZjbVJsY2pvZ0lDQWdJQ0FnSUNBZ0lDQXhjSGdnYzI5c2FXUWdJMlJpWlRObE9DQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxXRjFaR2x2TFdOdmJuUnliMnd0WTI5c2IzSTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBak5UWTFSRFkwSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0WVhWa2FXOHRZMjl1ZEhKdmJDMWpiMnh2Y2kxb2IzWmxjam9nSUNBZ0lDQWdJQ05tWm1ZZ0lXUmxabUYxYkhRN1hHNGtjR3g1Y2kxaGRXUnBieTFqYjI1MGNtOXNMV0puTFdodmRtVnlPaUFnSUNBZ0lDQWdJQ0FnSkhCc2VYSXRZMjlzYjNJdGJXRnBianRjYmx4dUx5OGdWRzl2YkhScGNITmNiaVJ3YkhseUxYUnZiMngwYVhBdFltYzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjM0JoY21WdWRHbDZaU2dqTURBd0xDQXVNeWtnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTEwYjI5c2RHbHdMV052Ykc5eU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJMlptWmlBaFpHVm1ZWFZzZER0Y2JpUndiSGx5TFhSdmIyeDBhWEF0Y0dGa1pHbHVaem9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvSkhCc2VYSXRZMjl1ZEhKdmJDMXpjR0ZqYVc1bklDOGdNaWtnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTEwYjI5c2RHbHdMV0Z5Y205M0xYTnBlbVU2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdOSEI0SUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0ZEc5dmJIUnBjQzF5WVdScGRYTTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRE53ZUNBaFpHVm1ZWFZzZER0Y2JseHVMeThnVUhKdlozSmxjM05jYmlSd2JIbHlMWEJ5YjJkeVpYTnpMV3h2WVdScGJtY3RjMmw2WlRvZ0lDQWdJQ0FnSUNBZ0lDQXlOWEI0SUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0Y0hKdlozSmxjM010Ykc5aFpHbHVaeTFpWnpvZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emNHRnlaVzUwYVhwbEtDTXdNREFzSUM0NE5Ta2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMTJhV1JsYnkxd2NtOW5jbVZ6Y3kxaVp6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk53WVhKbGJuUnBlbVVvSTJabVppd2dMamMxS1NBaFpHVm1ZWFZzZER0Y2JpUndiSGx5TFhacFpHVnZMWEJ5YjJkeVpYTnpMV0oxWm1abGNtVmtMV0puT2lBZ0lDQWdJQ0FrY0d4NWNpMTJhV1JsYnkxd2NtOW5jbVZ6Y3kxaVp5QWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxXRjFaR2x2TFhCeWIyZHlaWE56TFdKbk9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjM0JoY21WdWRHbDZaU2dqUXpaRU5rUkNMQ0F1TXpNcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFlYVmthVzh0Y0hKdlozSmxjM010WW5WbVptVnlaV1F0WW1jNklDQWdJQ0FnSUNSd2JIbHlMV0YxWkdsdkxYQnliMmR5WlhOekxXSm5JQ0ZrWldaaGRXeDBPMXh1WEc0dkx5QlNZVzVuWlNCemJHbGtaWEp6WEc0a2NHeDVjaTF5WVc1blpTMTBjbUZqYXkxb1pXbG5hSFE2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdPSEI0SUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0Y21GdVoyVXRkR2gxYldJdGFHVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pzYjI5eUtDUndiSGx5TFhKaGJtZGxMWFJ5WVdOckxXaGxhV2RvZENBcUlESXBJQ0ZrWldaaGRXeDBPMXh1SkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0ZDJsa2RHZzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnNiMjl5S0NSd2JIbHlMWEpoYm1kbExYUnlZV05yTFdobGFXZG9kQ0FxSURJcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdGNtRnVaMlV0ZEdoMWJXSXRZbWM2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNObVptWWdJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMXlZVzVuWlMxMGFIVnRZaTFpYjNKa1pYSTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01uQjRJSE52Ykdsa0lIUnlZVzV6Y0dGeVpXNTBJQ0ZrWldaaGRXeDBPMXh1SkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0YzJoaFpHOTNPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lEQWdNWEI0SURGd2VDQjBjbUZ1YzNCaGNtVnVkR2w2WlNna2NHeDVjaTEyYVdSbGJ5MWpiMjUwY205c2N5MWlaeXdnTGpnMUtTd2dNQ0F3SURBZ01YQjRJSFJ5WVc1emNHRnlaVzUwYVhwbEtDTXdNREFzSUM0NE5Ta2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMXlZVzVuWlMxMGFIVnRZaTFoWTNScGRtVXRZbTl5WkdWeUxXTnZiRzl5T2lBZ0kyWm1aaUFoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWEpoYm1kbExYUm9kVzFpTFdGamRHbDJaUzFpWnpvZ0lDQWdJQ0FnSUNBZ0lDQWtjR3g1Y2kxMmFXUmxieTFqYjI1MGNtOXNMV0puTFdodmRtVnlJQ0ZrWldaaGRXeDBPMXh1SkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0WVdOMGFYWmxMWE5qWVd4bE9pQWdJQ0FnSUNBZ0lERXVNalVnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTEyYVdSbGJ5MXlZVzVuWlMxMGNtRmpheTFpWnpvZ0lDQWdJQ0FnSUNBZ0lDQWdKSEJzZVhJdGRtbGtaVzh0Y0hKdlozSmxjM010WW5WbVptVnlaV1F0WW1jZ0lXUmxabUYxYkhRN1hHNGtjR3g1Y2kxaGRXUnBieTF5WVc1blpTMTBjbUZqYXkxaVp6b2dJQ0FnSUNBZ0lDQWdJQ0FnSkhCc2VYSXRZWFZrYVc4dGNISnZaM0psYzNNdFluVm1abVZ5WldRdFltY2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMXlZVzVuWlMxelpXeGxZM1JsWkMxaVp6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pIQnNlWEl0WTI5c2IzSXRiV0ZwYmlBaFpHVm1ZWFZzZER0Y2JseHVMeThnUW5KbFlXdHdiMmx1ZEhOY2JpUndiSGx5TFdKd0xYTmpjbVZsYmkxemJUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0EwT0RCd2VDQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxXSndMWE5qY21WbGJpMXRaRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBM05qaHdlQ0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMV0p3TFhOamNtVmxiaTFzWnpvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhNREkwY0hnZ0lXUmxabUYxYkhRN0lpd2lMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRkJzZVhJZ2JXbDRhVzV6WEc0dkx5Qm9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZjMlZzZWk5d2JIbHlYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVYRzR2THlBOGFXNXdkWFFnZEhsd1pUMWNJbkpoYm1kbFhDSStJSE4wZVd4cGJtZGNia0J0YVhocGJpQndiSGx5TFhKaGJtZGxMWFJ5WVdOcktDa2dlMXh1SUNBZ0lHaGxhV2RvZERvZ0pIQnNlWEl0Y21GdVoyVXRkSEpoWTJzdGFHVnBaMmgwTzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUdKdmNtUmxjam9nTUR0Y2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQW9KSEJzZVhJdGNtRnVaMlV0ZEhKaFkyc3RhR1ZwWjJoMElDOGdNaWs3WEc0Z0lDQWdkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzU5WEc1QWJXbDRhVzRnY0d4NWNpMXlZVzVuWlMxMGFIVnRZaWdwSUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdhR1ZwWjJoME9pQWtjR3g1Y2kxeVlXNW5aUzEwYUhWdFlpMW9aV2xuYUhRN1hHNGdJQ0FnZDJsa2RHZzZJQ1J3YkhseUxYSmhibWRsTFhSb2RXMWlMWGRwWkhSb08xeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDUndiSGx5TFhKaGJtZGxMWFJvZFcxaUxXSm5PMXh1SUNBZ0lHSnZjbVJsY2pvZ0pIQnNlWEl0Y21GdVoyVXRkR2gxYldJdFltOXlaR1Z5TzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXdNQ1U3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nWW1GamEyZHliM1Z1WkNBdU1uTWdaV0Z6WlN3Z1ltOXlaR1Z5SUM0eWN5QmxZWE5sTENCMGNtRnVjMlp2Y20wZ0xqSnpJR1ZoYzJVN1hHNGdJQ0FnWW05NExYTm9ZV1J2ZHpvZ0pIQnNlWEl0Y21GdVoyVXRkR2gxYldJdGMyaGhaRzkzTzF4dUlDQWdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNTlYRzVBYldsNGFXNGdjR3g1Y2kxeVlXNW5aUzEwYUhWdFlpMWhZM1JwZG1Vb0tTQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSEJzZVhJdGNtRnVaMlV0ZEdoMWJXSXRZV04wYVhabExXSm5PMXh1SUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nSkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0WVdOMGFYWmxMV0p2Y21SbGNpMWpiMnh2Y2p0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhOallXeGxLQ1J3YkhseUxYSmhibWRsTFhSb2RXMWlMV0ZqZEdsMlpTMXpZMkZzWlNrN1hHNTlJaXdpTHk4dktpQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaTh2SUNBZ0kwWlBUbFF0VTBsYVJWeHVMeThnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THk4Z1IyVnVaWEpoZEdVZ1lTQm1iMjUwTFhOcGVtVWdZVzVrSUdKaGMyVnNhVzVsTFdOdmJYQmhkR2xpYkdVZ2JHbHVaUzFvWldsbmFIUXVYRzVBYldsNGFXNGdhVzUxYVhRdFptOXVkQzF6YVhwbEtDUm1iMjUwTFhOcGVtVXNJQ1JzYVc1bExXaGxhV2RvZERvZ1lYVjBieXdnSkdsdGNHOXlkR0Z1ZERvZ1ptRnNjMlVwSUh0Y2JseHVJQ0JBYVdZZ0tIUjVjR1V0YjJZb0pHWnZiblF0YzJsNlpTa2dQVDBnYm5WdFltVnlLU0I3WEc0Z0lDQWdRR2xtSUNoMWJtbDBLQ1JtYjI1MExYTnBlbVVwSUNFOUlGd2ljSGhjSWlrZ2UxeHVJQ0FnSUNBZ1FHVnljbTl5SUZ3aVlDTjdKR1p2Ym5RdGMybDZaWDFnSUc1bFpXUnpJSFJ2SUdKbElHRWdjR2w0Wld3Z2RtRnNkV1V1WENJN1hHNGdJQ0FnZlZ4dUlDQjlJRUJsYkhObElIdGNiaUFnSUNCQVpYSnliM0lnWENKZ0kzc2tabTl1ZEMxemFYcGxmV0FnYm1WbFpITWdkRzhnWW1VZ1lTQnVkVzFpWlhJdVhDSTdYRzRnSUgxY2JseHVJQ0JBYVdZZ0tDUnBiWEJ2Y25SaGJuUWdQVDBnZEhKMVpTa2dlMXh1SUNBZ0lDUnBiWEJ2Y25SaGJuUTZJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMGdRR1ZzYzJWcFppQW9KR2x0Y0c5eWRHRnVkQ0E5UFNCbVlXeHpaU2tnZTF4dUlDQWdJQ1JwYlhCdmNuUmhiblE2SUc1MWJHdzdYRzRnSUgwZ1FHVnNjMlVnZTF4dUlDQWdJRUJsY25KdmNpQmNJbUFqZXlScGJYQnZjblJoYm5SOVlDQnVaV1ZrY3lCMGJ5QmlaU0JnZEhKMVpXQWdiM0lnWUdaaGJITmxZQzVjSWx4dUlDQjlYRzVjYmlBZ0x5OGdWMlVnY0hKdmRtbGtaU0JoSUdCd2VHQWdabUZzYkdKaFkyc2dabTl5SUc5c1pDQkpSWE1nYm05MElITjFjSEJ2Y25ScGJtY2dZSEpsYldBZ2RtRnNkV1Z6TGx4dUlDQm1iMjUwTFhOcGVtVTZJQ1JtYjI1MExYTnBlbVVnSkdsdGNHOXlkR0Z1ZER0Y2JpQWdabTl1ZEMxemFYcGxPaUFvSkdadmJuUXRjMmw2WlNBdklDUnBiblZwZEMxbmJHOWlZV3d0Wm05dWRDMXphWHBsS1NBcUlERnlaVzBnSkdsdGNHOXlkR0Z1ZER0Y2JseHVJQ0JBYVdZZ0tDUnNhVzVsTFdobGFXZG9kQ0E5UFNBbllYVjBieWNwSUh0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ1kyVnBiQ2drWm05dWRDMXphWHBsSUM4Z0pHbHVkV2wwTFdkc2IySmhiQzFzYVc1bExXaGxhV2RvZENrZ0tpQW9KR2x1ZFdsMExXZHNiMkpoYkMxc2FXNWxMV2hsYVdkb2RDQXZJQ1JtYjI1MExYTnBlbVVwSUNScGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dUlDQkFaV3h6WlNCN1hHNWNiaUFnSUNCQWFXWWdLSFI1Y0dVdGIyWW9KR3hwYm1VdGFHVnBaMmgwS1NBOVBTQnVkVzFpWlhJZ2IzSWdKR3hwYm1VdGFHVnBaMmgwSUQwOUlDZHBibWhsY21sMEp5QnZjaUFrYkdsdVpTMW9aV2xuYUhRZ1BUMGdKMjV2Y20xaGJDY3BJSHRjYmlBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBa2JHbHVaUzFvWldsbmFIUWdKR2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQkFaV3h6WldsbUlDZ2tiR2x1WlMxb1pXbG5hSFFnSVQwZ0oyNXZibVVuSUdGdVpDQWtiR2x1WlMxb1pXbG5hSFFnSVQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0FnSUVCbGNuSnZjaUJjSWtUaWdKbHZhQ0VnWUNON0pHeHBibVV0YUdWcFoyaDBmV0FnYVhNZ2JtOTBJR0VnZG1Gc2FXUWdkbUZzZFdVZ1ptOXlJR0FrYkdsdVpTMW9aV2xuYUhSZ0xsd2lYRzRnSUNBZ2ZWeHVYRzRnSUgxY2JseHVmVnh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJRlJ2YjJ4ekwwWnZiblJ6WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzVBYldsNGFXNGdabTl1ZEMxM1pXbG5hSFFvSkdadmJuUXRkMlZwWjJoMEtTQjdYRzRnSUVCcFppQW9KR1p2Ym5RdGQyVnBaMmgwSUQwOUlGd2lkR2hwYmx3aUtTQWdJQ0FnSUNBZ0lDQjdJR1p2Ym5RdGQyVnBaMmgwT2lBeE1EQTdJSDFjYmlBZ1FHbG1JQ2drWm05dWRDMTNaV2xuYUhRZ1BUMGdYQ0oxYkhSeVlTMXNhV2RvZEZ3aUtTQWdJSHNnWm05dWRDMTNaV2xuYUhRNklESXdNRHNnZlZ4dUlDQkFhV1lnS0NSbWIyNTBMWGRsYVdkb2RDQTlQU0JjSW14cFoyaDBYQ0lwSUNBZ0lDQWdJQ0FnZXlCbWIyNTBMWGRsYVdkb2REb2dNekF3T3lCOVhHNGdJRUJwWmlBb0pHWnZiblF0ZDJWcFoyaDBJRDA5SUZ3aWJtOXliV0ZzWENJcElDQWdJQ0FnSUNCN0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN0lIMWNiaUFnUUdsbUlDZ2tabTl1ZEMxM1pXbG5hSFFnUFQwZ1hDSnRaV1JwZFcxY0lpa2dJQ0FnSUNBZ0lIc2dabTl1ZEMxM1pXbG5hSFE2SURVd01Ec2dmVnh1SUNCQWFXWWdLQ1JtYjI1MExYZGxhV2RvZENBOVBTQmNJbk5sYldrdFltOXNaRndpS1NBZ0lDQWdleUJtYjI1MExYZGxhV2RvZERvZ05qQXdPeUI5WEc0Z0lFQnBaaUFvSkdadmJuUXRkMlZwWjJoMElEMDlJRndpWW05c1pGd2lLU0FnSUNBZ0lDQWdJQ0I3SUdadmJuUXRkMlZwWjJoME9pQTNNREE3SUgxY2JpQWdRR2xtSUNna1ptOXVkQzEzWldsbmFIUWdQVDBnWENKMWJIUnlZUzFpYjJ4a1hDSXBJQ0FnSUhzZ1ptOXVkQzEzWldsbmFIUTZJRGd3TURzZ2ZWeHVJQ0JBYVdZZ0tDUm1iMjUwTFhkbGFXZG9kQ0E5UFNCY0ltaGxZWFo1WENJcElDQWdJQ0FnSUNBZ2V5Qm1iMjUwTFhkbGFXZG9kRG9nT1RBd095QjlYRzU5WEc1Y2JrQnRhWGhwYmlCbWIyNTBMV1poYldsc2VTZ2tabTl1ZEMxbVlXMXBiSGtwSUh0Y2JuMWNibHh1UUcxcGVHbHVJR1p2Ym5RdGMybDZaU2drWVhKbmN5NHVMaWtnZTF4dUlDQkFhVzVqYkhWa1pTQnBiblZwZEMxbWIyNTBMWE5wZW1Vb0pHRnlaM011TGk0cE8xeHVmVnh1WEc1QWJXbDRhVzRnYVdOdmJpMXpkSGxzWlhNZ2UxeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJR1p2Ym5RNklHNXZjbTFoYkNCdWIzSnRZV3dnYm05eWJXRnNJREUwY0hndk1TQmNJa0pzWVdOcklGUnBaVndpTzF4dUlDQm1iMjUwTFhOcGVtVTZJR2x1YUdWeWFYUTdYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUF0TVRRdU1qZzFOekUwTWprbE8xeHVJQ0IwWlhoMExYSmxibVJsY21sdVp6b2dZWFYwYnp0Y2JpQWdMWGRsWW10cGRDMW1iMjUwTFhOdGIyOTBhR2x1WnpvZ1lXNTBhV0ZzYVdGelpXUTdYRzRnSUMxdGIzb3RiM040TFdadmJuUXRjMjF2YjNSb2FXNW5PaUJuY21GNWMyTmhiR1U3WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLREFzTUNrN1hHNTlYRzRpTENJdkx5OHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z0lDQWpRMHhGUVZKR1NWaGNiaTh2SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4dklFMXBlR2x1SUhSdklHUnliM0FnYldsamNtOGdZMnhsWVhKbWFYZ2dhVzUwYnlCaElITmxiR1ZqZEc5eUxpQkdkWEowYUdWeUlISmxZV1JwYm1jNlhHNHZMeUJvZEhSd09pOHZkM2QzTG1OemMyMXZhbTh1WTI5dEwzUm9aUzEyWlhKNUxXeGhkR1Z6ZEMxamJHVmhjbVpwZUMxeVpXeHZZV1JsWkM5Y2JpOHZYRzR2THlBdWRYTmhaMlVnZTF4dUx5OGdJQ0JBYVc1amJIVmtaU0JwYm5WcGRDMWpiR1ZoY21acGVDZ3BPMXh1THk4Z2ZWeHVRRzFwZUdsdUlHbHVkV2wwTFdOc1pXRnlabWw0S0NrZ2UxeHVYRzRnSUNZNllXWjBaWElnZTF4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWpheUFoYVcxd2IzSjBZVzUwTzF4dUlDQWdJR05zWldGeU9pQmliM1JvSUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dWZWeHVJaXdpTHk4dktpQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaTh2SUNBZ0kwaEpSRVJGVGkxV1NWTlZRVXhNV1Z4dUx5OGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeThnVFdsNGFXNGdkRzhnY1hWcFkydHNlU0JoY0hCc2VTQmhZMk5sYzNOcFlteGxJR2hwWkdsdVp5QjBieUJsYkdWdFpXNTBjeTVjYmtCdGFYaHBiaUJwYm5WcGRDMW9hV1JrWlc0dGRtbHpkV0ZzYkhrb0tTQjdYRzRnSUdKdmNtUmxjam9nTUNBaGFXMXdiM0owWVc1ME8xeHVJQ0JqYkdsd09pQnlaV04wS0RBZ01DQXdJREFwSUNGcGJYQnZjblJoYm5RN1hHNGdJR05zYVhBdGNHRjBhRG9nYVc1elpYUW9OVEFsS1NBaGFXMXdiM0owWVc1ME8xeHVJQ0JvWldsbmFIUTZJREZ3ZUNBaGFXMXdiM0owWVc1ME8xeHVJQ0J0WVhKbmFXNDZJQzB4Y0hnZ0lXbHRjRzl5ZEdGdWREdGNiaUFnYjNabGNtWnNiM2M2SUdocFpHUmxiaUFoYVcxd2IzSjBZVzUwTzF4dUlDQndZV1JrYVc1bk9pQXdJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpTQWhhVzF3YjNKMFlXNTBPMXh1SUNCM2FHbDBaUzF6Y0dGalpUb2dibTkzY21Gd0lDRnBiWEJ2Y25SaGJuUTdYRzRnSUhkcFpIUm9PaUF4Y0hnZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmlJc0lrQmphR0Z5YzJWMElGd2lWVlJHTFRoY0lqc2dMeThnUm1sNFpYTWdZVzRnYVhOemRXVWdkMmhsY21VZ1VuVmllU0JzYjJOaGJHVWdhWE1nYm05MElITmxkQ0J3Y205d1pYSnNlVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1UyVmxJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzl6WVhOekxXMXhMM05oYzNNdGJYRXZjSFZzYkM4eE1GeHVYRzR2THk4Z1FtRnpaU0JtYjI1MElITnBlbVVnYjI0Z2RHaGxJR0E4WW05a2VUNWdJR1ZzWlcxbGJuUmNiaTh2THlCQWRIbHdaU0JPZFcxaVpYSWdLSFZ1YVhRcFhHNGtiWEV0WW1GelpTMW1iMjUwTFhOcGVtVTZJREUyY0hnZ0lXUmxabUYxYkhRN1hHNWNiaTh2THlCU1pYTndiMjV6YVhabElHMXZaR1ZjYmk4dkwxeHVMeTh2SUZObGRDQjBieUJnWm1Gc2MyVmdJSFJ2SUdWdVlXSnNaU0J6ZFhCd2IzSjBJR1p2Y2lCaWNtOTNjMlZ5Y3lCMGFHRjBJR1J2SUc1dmRDQnpkWEJ3YjNKMElFQnRaV1JwWVNCeGRXVnlhV1Z6TEZ4dUx5OHZJQ2hKUlNBOFBTQTRMQ0JHYVhKbFptOTRJRHc5SURNc0lFOXdaWEpoSUR3OUlEa3BYRzR2THk5Y2JpOHZMeUJaYjNVZ1kyOTFiR1FnWTNKbFlYUmxJR0VnYzNSNWJHVnphR1ZsZENCelpYSjJaV1FnWlhoamJIVnphWFpsYkhrZ2RHOGdiMnhrWlhJZ1luSnZkM05sY25Nc1hHNHZMeThnZDJobGNtVWdRRzFsWkdsaElIRjFaWEpwWlhNZ1lYSmxJSEpoYzNSbGNtbDZaV1JjYmk4dkwxeHVMeTh2SUVCbGVHRnRjR3hsSUhOamMzTmNiaTh2THlBZ0x5OGdiMnhrTFdsbExuTmpjM05jYmk4dkx5QWdKRzF4TFhKbGMzQnZibk5wZG1VNklHWmhiSE5sTzF4dUx5OHZJQ0JBYVcxd2IzSjBJQ2R0WVdsdUp6c2dMeThnUUcxbFpHbGhJSEYxWlhKcFpYTWdhVzRnZEdocGN5Qm1hV3hsSUhkcGJHd2dZbVVnY21GemRHVnlhWHBsWkNCMWNDQjBieUFrYlhFdGMzUmhkR2xqTFdKeVpXRnJjRzlwYm5SY2JpOHZMeUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlCc1lYSm5aWElnWW5KbFlXdHdiMmx1ZEhNZ2QybHNiQ0JpWlNCcFoyNXZjbVZrWEc0dkx5OWNiaTh2THlCQWRIbHdaU0JDYjI5c1pXRnVYRzR2THk4Z1FHeHBibXNnYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNOaGMzTXRiWEV2YzJGemN5MXRjU055WlhOd2IyNXphWFpsTFcxdlpHVXRiMlptSUVScGMyRmliR1ZrSUhKbGMzQnZibk5wZG1VZ2JXOWtaU0JrYjJOMWJXVnVkR0YwYVc5dVhHNGtiWEV0Y21WemNHOXVjMmwyWlRvZ2RISjFaU0FoWkdWbVlYVnNkRHRjYmx4dUx5OHZJRUp5WldGcmNHOXBiblFnYkdsemRGeHVMeTh2WEc0dkx5OGdUbUZ0WlNCNWIzVnlJR0p5WldGcmNHOXBiblJ6SUdsdUlHRWdkMkY1SUhSb1lYUWdZM0psWVhSbGN5QmhJSFZpYVhGMWFYUnZkWE1nYkdGdVozVmhaMlZjYmk4dkx5QmhZM0p2YzNNZ2RHVmhiU0J0WlcxaVpYSnpMaUJKZENCM2FXeHNJR2x0Y0hKdmRtVWdZMjl0YlhWdWFXTmhkR2x2YmlCaVpYUjNaV1Z1WEc0dkx5OGdjM1JoYTJWb2IyeGtaWEp6TENCa1pYTnBaMjVsY25Nc0lHUmxkbVZzYjNCbGNuTXNJR0Z1WkNCMFpYTjBaWEp6TGx4dUx5OHZYRzR2THk4Z1FIUjVjR1VnVFdGd1hHNHZMeThnUUd4cGJtc2dhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM05oYzNNdGJYRXZjMkZ6Y3kxdGNTTnpaV1ZwYm1jdGRHaGxMV04xY25KbGJuUnNlUzFoWTNScGRtVXRZbkpsWVd0d2IybHVkQ0JHZFd4c0lHUnZZM1Z0Wlc1MFlYUnBiMjRnWVc1a0lHVjRZVzF3YkdWelhHNGtiWEV0WW5KbFlXdHdiMmx1ZEhNNklDaGNiaUFnSUNCdGIySnBiR1U2SUNBek1qQndlQ3hjYmlBZ0lDQjBZV0pzWlhRNklDQTNOREJ3ZUN4Y2JpQWdJQ0JrWlhOcmRHOXdPaUE1T0RCd2VDeGNiaUFnSUNCM2FXUmxPaUFnSUNBeE16QXdjSGhjYmlrZ0lXUmxabUYxYkhRN1hHNWNiaTh2THlCVGRHRjBhV01nWW5KbFlXdHdiMmx1ZENBb1ptOXlJR1pwZUdWa0xYZHBaSFJvSUd4aGVXOTFkSE1wWEc0dkx5OWNiaTh2THlCRVpXWnBibVVnZEdobElHSnlaV0ZyY0c5cGJuUWdabkp2YlNBa2JYRXRZbkpsWVd0d2IybHVkSE1nZEdoaGRDQnphRzkxYkdSY2JpOHZMeUJpWlNCMWMyVmtJR0Z6SUhSb1pTQjBZWEpuWlhRZ2QybGtkR2dnWm05eUlIUm9aU0JtYVhobFpDMTNhV1IwYUNCc1lYbHZkWFJjYmk4dkx5QW9hUzVsTGlCM2FHVnVJQ1J0Y1MxeVpYTndiMjV6YVhabElHbHpJSE5sZENCMGJ5QW5abUZzYzJVbktTQnBiaUJoSUc5c1pDMXBaUzV6WTNOelhHNHZMeTljYmk4dkx5QkFaWGhoYlhCc1pTQnpZM056WEc0dkx5OGdJQzh2SUhSaFlteGxkQzF2Ym14NUxuTmpjM05jYmk4dkx5QWdMeTljYmk4dkx5QWdMeThnU1dkdWIzSmxJR0ZzYkNCemRIbHNaWE1nWVdKdmRtVWdkR0ZpYkdWMElHSnlaV0ZyY0c5cGJuUXNYRzR2THk4Z0lDOHZJR0Z1WkNCbWFYZ2dkR2hsSUhOMGVXeGxjeUFvWlM1bkxpQnNZWGx2ZFhRcElHRjBJSFJoWW14bGRDQjNhV1IwYUZ4dUx5OHZJQ0FrYlhFdGNtVnpjRzl1YzJsMlpUb2dabUZzYzJVN1hHNHZMeThnSUNSdGNTMXpkR0YwYVdNdFluSmxZV3R3YjJsdWREb2dkR0ZpYkdWME8xeHVMeTh2SUNCQWFXMXdiM0owSUNkdFlXbHVKenNnTHk4Z1FHMWxaR2xoSUhGMVpYSnBaWE1nYVc0Z2RHaHBjeUJtYVd4bElIZHBiR3dnWW1VZ2NtRnpkR1Z5YVhwbFpDQjFjQ0IwYnlCMFlXSnNaWFJjYmk4dkx5QWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJzWVhKblpYSWdZbkpsWVd0d2IybHVkSE1nZDJsc2JDQmlaU0JwWjI1dmNtVmtYRzR2THk5Y2JpOHZMeUJBZEhsd1pTQlRkSEpwYm1kY2JpOHZMeUJBYkdsdWF5Qm9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZjMkZ6Y3kxdGNTOXpZWE56TFcxeEkyRmtaR2x1WnkxamRYTjBiMjB0WW5KbFlXdHdiMmx1ZEhNZ1JuVnNiQ0JrYjJOMWJXVnVkR0YwYVc5dUlHRnVaQ0JsZUdGdGNHeGxjMXh1SkcxeExYTjBZWFJwWXkxaWNtVmhhM0J2YVc1ME9pQmtaWE5yZEc5d0lDRmtaV1poZFd4ME8xeHVYRzR2THk4Z1UyaHZkeUJpY21WaGEzQnZhVzUwY3lCcGJpQjBhR1VnZEc5d0lISnBaMmgwSUdOdmNtNWxjbHh1THk4dlhHNHZMeThnU1dZZ2VXOTFJSGRoYm5RZ2RHOGdaR2x6Y0d4aGVTQjBhR1VnWTNWeWNtVnVkR3g1SUdGamRHbDJaU0JpY21WaGEzQnZhVzUwSUdsdUlIUm9aU0IwYjNCY2JpOHZMeUJ5YVdkb2RDQmpiM0p1WlhJZ2IyWWdlVzkxY2lCemFYUmxJR1IxY21sdVp5QmtaWFpsYkc5d2JXVnVkQ3dnWVdSa0lIUm9aU0JpY21WaGEzQnZhVzUwYzF4dUx5OHZJSFJ2SUhSb2FYTWdiR2x6ZEN3Z2IzSmtaWEpsWkNCaWVTQjNhV1IwYUN3Z1pTNW5MaUFvYlc5aWFXeGxMQ0IwWVdKc1pYUXNJR1JsYzJ0MGIzQXBMbHh1THk4dlhHNHZMeThnUUhSNWNHVWdiV0Z3WEc0a2JYRXRjMmh2ZHkxaWNtVmhhM0J2YVc1MGN6b2dLQ2tnSVdSbFptRjFiSFE3WEc1Y2JpOHZMeUJEZFhOMGIyMXBlbVVnZEdobElHMWxaR2xoSUhSNWNHVWdLR1V1Wnk0Z1lFQnRaV1JwWVNCelkzSmxaVzVnSUc5eUlHQkFiV1ZrYVdFZ2NISnBiblJnS1Z4dUx5OHZJRUo1SUdSbFptRjFiSFFnYzJGemN5MXRjU0IxYzJWeklHRnVJRndpWVd4c1hDSWdiV1ZrYVdFZ2RIbHdaU0FvWUVCdFpXUnBZU0JoYkd3Z1lXNWtJT0tBcG1BcFhHNHZMeTljYmk4dkx5QkFkSGx3WlNCVGRISnBibWRjYmk4dkx5QkFiR2x1YXlCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmMyRnpjeTF0Y1M5ellYTnpMVzF4STJOb1lXNW5hVzVuTFcxbFpHbGhMWFI1Y0dVZ1JuVnNiQ0JrYjJOMWJXVnVkR0YwYVc5dUlHRnVaQ0JsZUdGdGNHeGxjMXh1SkcxeExXMWxaR2xoTFhSNWNHVTZJR0ZzYkNBaFpHVm1ZWFZzZER0Y2JseHVMeTh2SUVOdmJuWmxjblFnY0dsNFpXeHpJSFJ2SUdWdGMxeHVMeTh2WEc0dkx5OGdRSEJoY21GdElIdE9kVzFpWlhKOUlDUndlQ0F0SUhaaGJIVmxJSFJ2SUdOdmJuWmxjblJjYmk4dkx5QkFjR0Z5WVcwZ2UwNTFiV0psY24wZ0pHSmhjMlV0Wm05dWRDMXphWHBsSUNna2JYRXRZbUZ6WlMxbWIyNTBMWE5wZW1VcElDMGdZRHhpYjJSNVBtQWdabTl1ZENCemFYcGxYRzR2THk5Y2JpOHZMeUJBWlhoaGJYQnNaU0J6WTNOelhHNHZMeThnSUNSbWIyNTBMWE5wZW1VdGFXNHRaVzF6T2lCdGNTMXdlREpsYlNneE5uQjRLVHRjYmk4dkx5QWdjQ0I3SUdadmJuUXRjMmw2WlRvZ2JYRXRjSGd5Wlcwb01UWndlQ2s3SUgxY2JpOHZMMXh1THk4dklFQnlaWEYxYVhKbGN5QWtiWEV0WW1GelpTMW1iMjUwTFhOcGVtVmNiaTh2THlCQWNtVjBkWEp1Y3lCN1RuVnRZbVZ5ZlZ4dVFHWjFibU4wYVc5dUlHMXhMWEI0TW1WdEtDUndlQ3dnSkdKaGMyVXRabTl1ZEMxemFYcGxPaUFrYlhFdFltRnpaUzFtYjI1MExYTnBlbVVwSUh0Y2JpQWdJQ0JBYVdZZ2RXNXBkR3hsYzNNb0pIQjRLU0I3WEc0Z0lDQWdJQ0FnSUVCM1lYSnVJRndpUVhOemRXMXBibWNnSTNza2NIaDlJSFJ2SUdKbElHbHVJSEJwZUdWc2N5d2dZWFIwWlcxd2RHbHVaeUIwYnlCamIyNTJaWEowSUdsMElHbHVkRzhnY0dsNFpXeHpMbHdpTzF4dUlDQWdJQ0FnSUNCQWNtVjBkWEp1SUcxeExYQjRNbVZ0S0NSd2VDQXFJREZ3ZUN3Z0pHSmhjMlV0Wm05dWRDMXphWHBsS1R0Y2JpQWdJQ0I5SUVCbGJITmxJR2xtSUhWdWFYUW9KSEI0S1NBOVBTQmxiU0I3WEc0Z0lDQWdJQ0FnSUVCeVpYUjFjbTRnSkhCNE8xeHVJQ0FnSUgxY2JpQWdJQ0JBY21WMGRYSnVJQ2drY0hnZ0x5QWtZbUZ6WlMxbWIyNTBMWE5wZW1VcElDb2dNV1Z0TzF4dWZWeHVYRzR2THk4Z1IyVjBJR0VnWW5KbFlXdHdiMmx1ZENkeklIZHBaSFJvWEc0dkx5OWNiaTh2THlCQWNHRnlZVzBnZTFOMGNtbHVaMzBnSkc1aGJXVWdMU0JPWVcxbElHOW1JSFJvWlNCaWNtVmhhM0J2YVc1MExpQlBibVVnYjJZZ0pHMXhMV0p5WldGcmNHOXBiblJ6WEc0dkx5OWNiaTh2THlCQVpYaGhiWEJzWlNCelkzTnpYRzR2THk4Z0lDUjBZV0pzWlhRdGQybGtkR2c2SUcxeExXZGxkQzFpY21WaGEzQnZhVzUwTFhkcFpIUm9LSFJoWW14bGRDazdYRzR2THk4Z0lFQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQnRjUzFuWlhRdFluSmxZV3R3YjJsdWRDMTNhV1IwYUNoa1pYTnJkRzl3S1NrZ2UzMWNiaTh2TDF4dUx5OHZJRUJ5WlhGMWFYSmxjeUI3Vm1GeWFXRmliR1Y5SUNSdGNTMWljbVZoYTNCdmFXNTBjMXh1THk4dlhHNHZMeThnUUhKbGRIVnlibk1nZTA1MWJXSmxjbjBnVm1Gc2RXVWdhVzRnY0dsNFpXeHpYRzVBWm5WdVkzUnBiMjRnYlhFdFoyVjBMV0p5WldGcmNHOXBiblF0ZDJsa2RHZ29KRzVoYldVc0lDUmljbVZoYTNCdmFXNTBjem9nSkcxeExXSnlaV0ZyY0c5cGJuUnpLU0I3WEc0Z0lDQWdRR2xtSUcxaGNDMW9ZWE10YTJWNUtDUmljbVZoYTNCdmFXNTBjeXdnSkc1aGJXVXBJSHRjYmlBZ0lDQWdJQ0FnUUhKbGRIVnliaUJ0WVhBdFoyVjBLQ1JpY21WaGEzQnZhVzUwY3l3Z0pHNWhiV1VwTzF4dUlDQWdJSDBnUUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0JBZDJGeWJpQmNJa0p5WldGcmNHOXBiblFnSTNza2JtRnRaWDBnZDJGemJpZDBJR1p2ZFc1a0lHbHVJQ1JpY21WaGEzQnZhVzUwY3k1Y0lqdGNiaUFnSUNCOVhHNTlYRzVjYmk4dkx5Qk5aV1JwWVNCUmRXVnllU0J0YVhocGJseHVMeTh2WEc0dkx5OGdRSEJoY21GdElIdFRkSEpwYm1jZ2ZDQkNiMjlzWldGdWZTQWtabkp2YlNBb1ptRnNjMlVwSUMwZ1QyNWxJRzltSUNSdGNTMWljbVZoYTNCdmFXNTBjMXh1THk4dklFQndZWEpoYlNCN1UzUnlhVzVuSUh3Z1FtOXZiR1ZoYm4wZ0pIVnVkR2xzSUNobVlXeHpaU2tnTFNCUGJtVWdiMllnSkcxeExXSnlaV0ZyY0c5cGJuUnpYRzR2THk4Z1FIQmhjbUZ0SUh0VGRISnBibWNnZkNCQ2IyOXNaV0Z1ZlNBa1lXNWtJQ2htWVd4elpTa2dMU0JCWkdScGRHbHZibUZzSUcxbFpHbGhJSEYxWlhKNUlIQmhjbUZ0WlhSbGNuTmNiaTh2THlCQWNHRnlZVzBnZTFOMGNtbHVaMzBnSkcxbFpHbGhMWFI1Y0dVZ0tDUnRjUzF0WldScFlTMTBlWEJsS1NBdElFMWxaR2xoSUhSNWNHVTZJSE5qY21WbGJpd2djSEpwYm5UaWdLWmNiaTh2TDF4dUx5OHZJRUJwWjI1dmNtVWdWVzVrYjJOMWJXVnVkR1ZrSUVGUVNTd2dabTl5SUdGa2RtRnVZMlZrSUhWelpTQnZibXg1T2x4dUx5OHZJRUJwWjI1dmNtVWdRSEJoY21GdElIdE5ZWEI5SUNSaWNtVmhhM0J2YVc1MGN5QW9KRzF4TFdKeVpXRnJjRzlwYm5SektWeHVMeTh2SUVCcFoyNXZjbVVnUUhCaGNtRnRJSHRUZEhKcGJtZDlJQ1J6ZEdGMGFXTXRZbkpsWVd0d2IybHVkQ0FvSkcxeExYTjBZWFJwWXkxaWNtVmhhM0J2YVc1MEtWeHVMeTh2WEc0dkx5OGdRR052Ym5SbGJuUWdjM1I1YkdsdVp5QnlkV3hsY3l3Z2QzSmhjSEJsWkNCcGJuUnZJR0VnUUcxbFpHbGhJSEYxWlhKNUlIZG9aVzRnSkhKbGMzQnZibk5wZG1VZ2FYTWdkSEoxWlZ4dUx5OHZYRzR2THk4Z1FISmxjWFZwY21WeklIdFdZWEpwWVdKc1pYMGdKRzF4TFcxbFpHbGhMWFI1Y0dWY2JpOHZMeUJBY21WeGRXbHlaWE1nZTFaaGNtbGhZbXhsZlNBa2JYRXRZbkpsWVd0d2IybHVkSE5jYmk4dkx5QkFjbVZ4ZFdseVpYTWdlMVpoY21saFlteGxmU0FrYlhFdGMzUmhkR2xqTFdKeVpXRnJjRzlwYm5SY2JpOHZMeUJBY21WeGRXbHlaWE1nZTJaMWJtTjBhVzl1ZlNCdGNTMXdlREpsYlZ4dUx5OHZJRUJ5WlhGMWFYSmxjeUI3Wm5WdVkzUnBiMjU5SUcxeExXZGxkQzFpY21WaGEzQnZhVzUwTFhkcFpIUm9YRzR2THk5Y2JpOHZMeUJBYkdsdWF5Qm9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZjMkZ6Y3kxdGNTOXpZWE56TFcxeEkzSmxjM0J2Ym5OcGRtVXRiVzlrWlMxdmJpMWtaV1poZFd4MElFWjFiR3dnWkc5amRXMWxiblJoZEdsdmJpQmhibVFnWlhoaGJYQnNaWE5jYmk4dkwxeHVMeTh2SUVCbGVHRnRjR3hsSUhOamMzTmNiaTh2THlBZ0xtVnNaVzFsYm5RZ2UxeHVMeTh2SUNBZ0lFQnBibU5zZFdSbElHMXhLQ1JtY205dE9pQnRiMkpwYkdVcElIdGNiaTh2THlBZ0lDQWdJR052Ykc5eU9pQnlaV1E3WEc0dkx5OGdJQ0FnZlZ4dUx5OHZJQ0FnSUVCcGJtTnNkV1JsSUcxeEtDUjFiblJwYkRvZ2RHRmliR1YwS1NCN1hHNHZMeThnSUNBZ0lDQmpiMnh2Y2pvZ1lteDFaVHRjYmk4dkx5QWdJQ0I5WEc0dkx5OGdJQ0FnUUdsdVkyeDFaR1VnYlhFb2JXOWlhV3hsTENCMFlXSnNaWFFwSUh0Y2JpOHZMeUFnSUNBZ0lHTnZiRzl5T2lCbmNtVmxianRjYmk4dkx5QWdJQ0I5WEc0dkx5OGdJQ0FnUUdsdVkyeDFaR1VnYlhFb0pHWnliMjA2SUhSaFlteGxkQ3dnSkdGdVpEb2dKeWh2Y21sbGJuUmhkR2x2YmpvZ2JHRnVaSE5qWVhCbEtTY3BJSHRjYmk4dkx5QWdJQ0FnSUdOdmJHOXlPaUIwWldGc08xeHVMeTh2SUNBZ0lIMWNiaTh2THlBZ0lDQkFhVzVqYkhWa1pTQnRjU2c1TlRCd2VDa2dlMXh1THk4dklDQWdJQ0FnWTI5c2IzSTZJR2h2ZEhCcGJtczdYRzR2THk4Z0lDQWdmVnh1THk4dklDQWdJRUJwYm1Oc2RXUmxJRzF4S0hSaFlteGxkQ3dnSkcxbFpHbGhMWFI1Y0dVNklITmpjbVZsYmlrZ2UxeHVMeTh2SUNBZ0lDQWdZMjlzYjNJNklHaHZkSEJwYm1zN1hHNHZMeThnSUNBZ2ZWeHVMeTh2SUNBZ0lDOHZJRUZrZG1GdVkyVmtJSFZ6WlRwY2JpOHZMeUFnSUNBa2JYa3RZbkpsWVd0d2IybHVkSE02SUNoTU9pQTVNREJ3ZUN3Z1dFdzZJREV5TURCd2VDazdYRzR2THk4Z0lDQWdRR2x1WTJ4MVpHVWdiWEVvVEN3Z0pHSnlaV0ZyY0c5cGJuUnpPaUFrYlhrdFluSmxZV3R3YjJsdWRITXNJQ1J6ZEdGMGFXTXRZbkpsWVd0d2IybHVkRG9nVENrZ2UxeHVMeTh2SUNBZ0lDQWdZMjlzYjNJNklHaHZkSEJwYm1zN1hHNHZMeThnSUNBZ2ZWeHVMeTh2SUNCOVhHNUFiV2w0YVc0Z2JYRW9YRzRnSUNBZ0pHWnliMjA2SUdaaGJITmxMRnh1SUNBZ0lDUjFiblJwYkRvZ1ptRnNjMlVzWEc0Z0lDQWdKR0Z1WkRvZ1ptRnNjMlVzWEc0Z0lDQWdKRzFsWkdsaExYUjVjR1U2SUNSdGNTMXRaV1JwWVMxMGVYQmxMRnh1SUNBZ0lDUmljbVZoYTNCdmFXNTBjem9nSkcxeExXSnlaV0ZyY0c5cGJuUnpMRnh1SUNBZ0lDUnlaWE53YjI1emFYWmxPaUFrYlhFdGNtVnpjRzl1YzJsMlpTeGNiaUFnSUNBa2MzUmhkR2xqTFdKeVpXRnJjRzlwYm5RNklDUnRjUzF6ZEdGMGFXTXRZbkpsWVd0d2IybHVkRnh1S1NCN1hHNGdJQ0FnSkcxcGJpMTNhV1IwYURvZ01EdGNiaUFnSUNBa2JXRjRMWGRwWkhSb09pQXdPMXh1SUNBZ0lDUnRaV1JwWVMxeGRXVnllVG9nSnljN1hHNWNiaUFnSUNBdkx5QkdjbTl0T2lCMGFHbHpJR0p5WldGcmNHOXBiblFnS0dsdVkyeDFjMmwyWlNsY2JpQWdJQ0JBYVdZZ0pHWnliMjBnZTF4dUlDQWdJQ0FnSUNCQWFXWWdkSGx3WlMxdlppZ2tabkp2YlNrZ1BUMGdiblZ0WW1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNSdGFXNHRkMmxrZEdnNklHMXhMWEI0TW1WdEtDUm1jbTl0S1R0Y2JpQWdJQ0FnSUNBZ2ZTQkFaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FrYldsdUxYZHBaSFJvT2lCdGNTMXdlREpsYlNodGNTMW5aWFF0WW5KbFlXdHdiMmx1ZEMxM2FXUjBhQ2drWm5KdmJTd2dKR0p5WldGcmNHOXBiblJ6S1NrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QlZiblJwYkRvZ2RHaGhkQ0JpY21WaGEzQnZhVzUwSUNobGVHTnNkWE5wZG1VcFhHNGdJQ0FnUUdsbUlDUjFiblJwYkNCN1hHNGdJQ0FnSUNBZ0lFQnBaaUIwZVhCbExXOW1LQ1IxYm5ScGJDa2dQVDBnYm5WdFltVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDUnRZWGd0ZDJsa2RHZzZJRzF4TFhCNE1tVnRLQ1IxYm5ScGJDazdYRzRnSUNBZ0lDQWdJSDBnUUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0pHMWhlQzEzYVdSMGFEb2diWEV0Y0hneVpXMG9iWEV0WjJWMExXSnlaV0ZyY0c5cGJuUXRkMmxrZEdnb0pIVnVkR2xzTENBa1luSmxZV3R3YjJsdWRITXBLU0F0SUM0d01XVnRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnVW1WemNHOXVjMmwyWlNCemRYQndiM0owSUdseklHUnBjMkZpYkdWa0xDQnlZWE4wWlhKcGVtVWdkR2hsSUc5MWRIQjFkQ0J2ZFhSemFXUmxJRUJ0WldScFlTQmliRzlqYTNOY2JpQWdJQ0F2THlCVWFHVWdZbkp2ZDNObGNpQjNhV3hzSUhKbGJIa2diMjRnZEdobElHTmhjMk5oWkdVZ2FYUnpaV3htTGx4dUlDQWdJRUJwWmlBa2NtVnpjRzl1YzJsMlpTQTlQU0JtWVd4elpTQjdYRzRnSUNBZ0lDQWdJQ1J6ZEdGMGFXTXRZbkpsWVd0d2IybHVkQzEzYVdSMGFEb2diWEV0WjJWMExXSnlaV0ZyY0c5cGJuUXRkMmxrZEdnb0pITjBZWFJwWXkxaWNtVmhhM0J2YVc1MExDQWtZbkpsWVd0d2IybHVkSE1wTzF4dUlDQWdJQ0FnSUNBa2RHRnlaMlYwTFhkcFpIUm9PaUJ0Y1Mxd2VESmxiU2drYzNSaGRHbGpMV0p5WldGcmNHOXBiblF0ZDJsa2RHZ3BPMXh1WEc0Z0lDQWdJQ0FnSUM4dklFOTFkSEIxZENCdmJteDVJSEoxYkdWeklIUm9ZWFFnYzNSaGNuUWdZWFFnYjNJZ2MzQmhiaUJ2ZFhJZ2RHRnlaMlYwSUhkcFpIUm9YRzRnSUNBZ0lDQWdJRUJwWmlBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FrWVc1a0lEMDlJR1poYkhObFhHNGdJQ0FnSUNBZ0lDQWdJQ0JoYm1RZ0pHMXBiaTEzYVdSMGFDQThQU0FrZEdGeVoyVjBMWGRwWkhSb1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoYm1RZ0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUjFiblJwYkNBOVBTQm1ZV3h6WlNCdmNpQWtiV0Y0TFhkcFpIUm9JRDQ5SUNSMFlYSm5aWFF0ZDJsa2RHaGNiaUFnSUNBZ0lDQWdJQ0FnSUNsY2JpQWdJQ0FnSUNBZ0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklGSmxjM0J2Ym5OcGRtVWdjM1Z3Y0c5eWRDQnBjeUJsYm1GaWJHVmtMQ0J2ZFhSd2RYUWdjblZzWlhNZ2FXNXphV1JsSUVCdFpXUnBZU0J4ZFdWeWFXVnpYRzRnSUNBZ1FHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCQWFXWWdKRzFwYmkxM2FXUjBhQ0FoUFNBd0lIc2dKRzFsWkdsaExYRjFaWEo1T2lBbkkzc2tiV1ZrYVdFdGNYVmxjbmw5SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUFqZXlSdGFXNHRkMmxrZEdoOUtTYzdJSDFjYmlBZ0lDQWdJQ0FnUUdsbUlDUnRZWGd0ZDJsa2RHZ2dJVDBnTUNCN0lDUnRaV1JwWVMxeGRXVnllVG9nSnlON0pHMWxaR2xoTFhGMVpYSjVmU0JoYm1RZ0tHMWhlQzEzYVdSMGFEb2dJM3NrYldGNExYZHBaSFJvZlNrbk95QjlYRzRnSUNBZ0lDQWdJRUJwWmlBa1lXNWtJQ0FnSUNBZ0lDQWdJQ0FnZXlBa2JXVmthV0V0Y1hWbGNuazZJQ2NqZXlSdFpXUnBZUzF4ZFdWeWVYMGdZVzVrSUNON0pHRnVaSDBuT3lCOVhHNWNiaUFnSUNBZ0lDQWdMeThnVW1WdGIzWmxJSFZ1Ym1WalpYTnpZWEo1SUcxbFpHbGhJSEYxWlhKNUlIQnlaV1pwZUNBbllXeHNJR0Z1WkNBblhHNGdJQ0FnSUNBZ0lFQnBaaUFvSkcxbFpHbGhMWFI1Y0dVZ1BUMGdKMkZzYkNjZ1lXNWtJQ1J0WldScFlTMXhkV1Z5ZVNBaFBTQW5KeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdKRzFsWkdsaExYUjVjR1U2SUNjbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSkcxbFpHbGhMWEYxWlhKNU9pQnpkSEl0YzJ4cFkyVW9kVzV4ZFc5MFpTZ2tiV1ZrYVdFdGNYVmxjbmtwTENBMktUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUVCdFpXUnBZU0FqZXlSdFpXUnBZUzEwZVhCbElDc2dKRzFsWkdsaExYRjFaWEo1ZlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JseHVMeTh2SUVGa1pDQmhJR0p5WldGcmNHOXBiblJjYmk4dkwxeHVMeTh2SUVCd1lYSmhiU0I3VTNSeWFXNW5mU0FrYm1GdFpTQXRJRTVoYldVZ2IyWWdkR2hsSUdKeVpXRnJjRzlwYm5SY2JpOHZMeUJBY0dGeVlXMGdlMDUxYldKbGNuMGdKSGRwWkhSb0lDMGdWMmxrZEdnZ2IyWWdkR2hsSUdKeVpXRnJjRzlwYm5SY2JpOHZMMXh1THk4dklFQnlaWEYxYVhKbGN5QjdWbUZ5YVdGaWJHVjlJQ1J0Y1MxaWNtVmhhM0J2YVc1MGMxeHVMeTh2WEc0dkx5OGdRR1Y0WVcxd2JHVWdjMk56YzF4dUx5OHZJQ0JBYVc1amJIVmtaU0J0Y1MxaFpHUXRZbkpsWVd0d2IybHVkQ2gwZG5OamNtVmxiaXdnTVRreU1IQjRLVHRjYmk4dkx5QWdRR2x1WTJ4MVpHVWdiWEVvZEhaelkzSmxaVzRwSUh0OVhHNUFiV2w0YVc0Z2JYRXRZV1JrTFdKeVpXRnJjRzlwYm5Rb0pHNWhiV1VzSUNSM2FXUjBhQ2tnZTF4dUlDQWdJQ1J1WlhjdFluSmxZV3R3YjJsdWREb2dLQ1J1WVcxbE9pQWtkMmxrZEdncE8xeHVJQ0FnSUNSdGNTMWljbVZoYTNCdmFXNTBjem9nYldGd0xXMWxjbWRsS0NSdGNTMWljbVZoYTNCdmFXNTBjeXdnSkc1bGR5MWljbVZoYTNCdmFXNTBLU0FoWjJ4dlltRnNPMXh1ZlZ4dVhHNHZMeThnVTJodmR5QjBhR1VnWVdOMGFYWmxJR0p5WldGcmNHOXBiblFnYVc0Z2RHaGxJSFJ2Y0NCeWFXZG9kQ0JqYjNKdVpYSWdiMllnZEdobElIWnBaWGR3YjNKMFhHNHZMeThnUUd4cGJtc2dhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM05oYzNNdGJYRXZjMkZ6Y3kxdGNTTnpaV1ZwYm1jdGRHaGxMV04xY25KbGJuUnNlUzFoWTNScGRtVXRZbkpsWVd0d2IybHVkRnh1THk4dlhHNHZMeThnUUhCaGNtRnRJSHRNYVhOMGZTQWtjMmh2ZHkxaWNtVmhhM0J2YVc1MGN5QW9KRzF4TFhOb2IzY3RZbkpsWVd0d2IybHVkSE1wSUMwZ1RHbHpkQ0J2WmlCaWNtVmhhM0J2YVc1MGN5QjBieUJ6YUc5M0lHbHVJSFJvWlNCMGIzQWdjbWxuYUhRZ1kyOXlibVZ5WEc0dkx5OGdRSEJoY21GdElIdE5ZWEI5SUNSaWNtVmhhM0J2YVc1MGN5QW9KRzF4TFdKeVpXRnJjRzlwYm5SektTQXRJRUp5WldGcmNHOXBiblFnYm1GdFpYTWdZVzVrSUhOcGVtVnpYRzR2THk5Y2JpOHZMeUJBY21WeGRXbHlaWE1nZTFaaGNtbGhZbXhsZlNBa2JYRXRZbkpsWVd0d2IybHVkSE5jYmk4dkx5QkFjbVZ4ZFdseVpYTWdlMVpoY21saFlteGxmU0FrYlhFdGMyaHZkeTFpY21WaGEzQnZhVzUwYzF4dUx5OHZYRzR2THk4Z1FHVjRZVzF3YkdVZ2MyTnpjMXh1THk4dklDQXZMeUJUYUc5M0lHSnlaV0ZyY0c5cGJuUnpJSFZ6YVc1bklHZHNiMkpoYkNCelpYUjBhVzVuYzF4dUx5OHZJQ0JBYVc1amJIVmtaU0J0Y1MxemFHOTNMV0p5WldGcmNHOXBiblJ6TzF4dUx5OHZYRzR2THk4Z0lDOHZJRk5vYjNjZ1luSmxZV3R3YjJsdWRITWdkWE5wYm1jZ1kzVnpkRzl0SUhObGRIUnBibWR6WEc0dkx5OGdJRUJwYm1Oc2RXUmxJRzF4TFhOb2IzY3RZbkpsWVd0d2IybHVkSE1vS0V3c0lGaE1LU3dnS0ZNNklETXdNSEI0TENCTU9pQTRNREJ3ZUN3Z1dFdzZJREV5TURCd2VDa3BPMXh1UUcxcGVHbHVJRzF4TFhOb2IzY3RZbkpsWVd0d2IybHVkSE1vSkhOb2IzY3RZbkpsWVd0d2IybHVkSE02SUNSdGNTMXphRzkzTFdKeVpXRnJjRzlwYm5SekxDQWtZbkpsWVd0d2IybHVkSE02SUNSdGNTMWljbVZoYTNCdmFXNTBjeWtnZTF4dUlDQWdJR0p2WkhrNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kwWkRSamhGTXp0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTVhCNElITnZiR2xrSUNOR1FrVkZSRFU3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTFzWldaME9pQXhjSGdnYzI5c2FXUWdJMFpDUlVWRU5UdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDTkRNRGs0TlRNN1hHNGdJQ0FnSUNBZ0lHWnZiblE2SUhOdFlXeHNMV05oY0hScGIyNDdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJRE53ZUNBMmNIZzdYRzRnSUNBZ0lDQWdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUF3TzF4dUlDQWdJQ0FnSUNCMGIzQTZJREE3WEc0Z0lDQWdJQ0FnSUhvdGFXNWtaWGc2SURFd01EdGNibHh1SUNBZ0lDQWdJQ0F2THlCTWIyOXdJSFJvY205MVoyZ2dkR2hsSUdKeVpXRnJjRzlwYm5SeklIUm9ZWFFnYzJodmRXeGtJR0psSUhOb2IzZHVYRzRnSUNBZ0lDQWdJRUJsWVdOb0lDUnphRzkzTFdKeVpXRnJjRzlwYm5RZ2FXNGdKSE5vYjNjdFluSmxZV3R3YjJsdWRITWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0pIZHBaSFJvT2lCdGNTMW5aWFF0WW5KbFlXdHdiMmx1ZEMxM2FXUjBhQ2drYzJodmR5MWljbVZoYTNCdmFXNTBMQ0FrWW5KbFlXdHdiMmx1ZEhNcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhFb0pITm9iM2N0WW5KbFlXdHdiMmx1ZEN3Z0pHSnlaV0ZyY0c5cGJuUnpPaUFrWW5KbFlXdHdiMmx1ZEhNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJaU43SkhOb2IzY3RZbkpsWVd0d2IybHVkSDBnNG9tbElDTjdKSGRwWkhSb2ZTQW9JM3R0Y1Mxd2VESmxiU2drZDJsa2RHZ3BmU2xjSWp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JseHVRR2xtSUd4bGJtZDBhQ2drYlhFdGMyaHZkeTFpY21WaGEzQnZhVzUwY3lrZ1BpQXdJSHRjYmlBZ0lDQkFhVzVqYkhWa1pTQnRjUzF6YUc5M0xXSnlaV0ZyY0c5cGJuUnpPMXh1ZlZ4dUlpd2lMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUZSdmIyeHpMMEZzYVdGelpYTmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpUjFibWwwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGREdGNiaVIxYm1sMExYUnBibms2SUNBZ0lDQWdJQ0FrYVc1MWFYUXRaMnh2WW1Gc0xYTndZV05wYm1jdGRXNXBkQzEwYVc1NU8xeHVKSFZ1YVhRdGMyMWhiR3c2SUNBZ0lDQWdJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMWE50WVd4c08xeHVKSFZ1YVhRdGJHRnlaMlU2SUNBZ0lDQWdJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMV3hoY21kbE8xeHVKSFZ1YVhRdGFIVm5aVG9nSUNBZ0lDQWdJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMV2gxWjJVN1hHNGtkVzVwZEMxbmFXZGhiblJwWXpvZ0lDQWdKR2x1ZFdsMExXZHNiMkpoYkMxemNHRmphVzVuTFhWdWFYUXRhSFZuWlNBcUlESTdYRzRpTENJdktpQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dUlDQWdWRzl2YkhNdlRXbDRhVzV6WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzVBYldsNGFXNGdhR2xrWlY5c1lYTjBYMjFoY21kcGJpQjdYRzRnSUhBNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG93WEc0Z0lIMWNibjFjYmx4dUlpd2lMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUZSdmIyeHpMME52Ykc5eVhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc1QVpuVnVZM1JwYjI0Z1kyOXNiM0lvSkd0bGVTa2dlMXh1SUNCQWFXWWdiV0Z3TFdoaGN5MXJaWGtvSkdOdmJHOXljeXdnSkd0bGVTa2dlMXh1SUNBZ0lFQnlaWFIxY200Z2JXRndMV2RsZENna1kyOXNiM0p6TENBa2EyVjVLVHRjYmlBZ2ZWeHVYRzRnSUVCM1lYSnVJRndpVlc1cmJtOTNiaUJnSTNza2EyVjVmV0FnYVc0Z0pHTnZiRzl5Y3k1Y0lqdGNiaUFnUUhKbGRIVnliaUJ1ZFd4c08xeHVmVnh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJRlJ2YjJ4ekwwSjFkSFJ2Ymx4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1UUcxcGVHbHVJR0oxZEhSdmJpMWpiMnh2Y2kxc2FXZG9kQ0I3WEc0Z0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUmlZWE5sTFhSbGVIUXRZMjlzYjNJdGJHbG5hSFE3WEc0Z0lHTnZiRzl5T2lBa1ltRnpaUzEwWlhoMExXTnZiRzl5TFd4cFoyaDBPMXh1WEc0Z0lDWTZhRzkyWlhJZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSaVlYTmxMWFJsZUhRdFkyOXNiM0l0YkdsbmFIUTdYRzRnSUNBZ1kyOXNiM0k2SUNSaVlYTmxMWFJsZUhRdFkyOXNiM0l0WkdGeWF6dGNiaUFnZlZ4dWZWeHVYRzVBYldsNGFXNGdZblYwZEc5dUxXTnZiRzl5TFdSaGNtc2dlMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBa1ltRnpaUzEwWlhoMExXTnZiRzl5TFdSaGNtczdYRzRnSUdOdmJHOXlPaUFrWW1GelpTMTBaWGgwTFdOdmJHOXlMV1JoY21zN1hHNWNiaUFnSmpwb2IzWmxjaUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2tZbUZ6WlMxMFpYaDBMV052Ykc5eUxXUmhjbXM3WEc0Z0lDQWdZMjlzYjNJNklDUmlZWE5sTFhSbGVIUXRZMjlzYjNJdGJHbG5hSFE3WEc0Z0lIMWNibjFjYmx4dVFHMXBlR2x1SUdKMWRIUnZiaTFqYjJ4dmNpMTNhR2wwWlNCN1hHNGdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJR052Ykc5eUtIZG9hWFJsS1R0Y2JpQWdZMjlzYjNJNklHTnZiRzl5S0hkb2FYUmxLVHRjYmx4dUlDQW1PbWh2ZG1WeUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCamIyeHZjaWgzYUdsMFpTazdYRzRnSUNBZ1kyOXNiM0k2SUNSaVlYTmxMWFJsZUhRdFkyOXNiM0l0WkdGeWF6dGNiaUFnZlZ4dWZWeHVYRzVBYldsNGFXNGdZblYwZEc5dUxXTnZiRzl5TFhKbFpDMW1kV3hzSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dZMjlzYjNJb2NtVmtMWEJoYkdVcE8xeHVJQ0JqYjJ4dmNqb2dZMjlzYjNJb2QyaHBkR1VwTzF4dVhHNGdJQ1k2YUc5MlpYSWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklHUmhjbXRsYmloamIyeHZjaWh5WldRdGNHRnNaU2tzSURJd0pTazdYRzRnSUNBZ1kyOXNiM0k2SUdOdmJHOXlLSGRvYVhSbEtUdGNiaUFnZlZ4dWZWeHVJaXdpTHlvZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUNOQ1QxZ3RVMGxhU1U1SFhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2S2lwY2JpQXFJRTF2Y21VZ2MyVnVjMmxpYkdVZ1pHVm1ZWFZzZENCaWIzZ3RjMmw2YVc1bk9seHVJQ29nWTNOekxYUnlhV05yY3k1amIyMHZhVzVvWlhKcGRHbHVaeTFpYjNndGMybDZhVzVuTFhCeWIySmhZbXg1TFhOc2FXZG9kR3g1TFdKbGRIUmxjaTFpWlhOMExYQnlZV04wYVdObFhHNGdLaTljYmx4dWFIUnRiQ0I3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc1OVhHNWNiaW9nZTF4dVhHNGdJQ1lzWEc0Z0lDWTZZbVZtYjNKbExGeHVJQ0FtT21GbWRHVnlJSHRjYmlBZ0lDQmliM2d0YzJsNmFXNW5PaUJwYm1obGNtbDBPMXh1SUNCOVhHNWNibjFjYmlJc0lpOHFJU0J1YjNKdFlXeHBlbVV1WTNOeklIWTNMakF1TUNCOElFMUpWQ0JNYVdObGJuTmxJSHdnWjJsMGFIVmlMbU52YlM5dVpXTnZiR0Z6TDI1dmNtMWhiR2w2WlM1amMzTWdLaTljYmx4dUx5b2dSRzlqZFcxbGJuUmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nTVM0Z1EyOXljbVZqZENCMGFHVWdiR2x1WlNCb1pXbG5hSFFnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1SUNvZ01pNGdVSEpsZG1WdWRDQmhaR3AxYzNSdFpXNTBjeUJ2WmlCbWIyNTBJSE5wZW1VZ1lXWjBaWElnYjNKcFpXNTBZWFJwYjI0Z1kyaGhibWRsY3lCcGJseHVJQ29nSUNBZ1NVVWdiMjRnVjJsdVpHOTNjeUJRYUc5dVpTQmhibVFnYVc0Z2FVOVRMbHh1SUNvdlhHNWNibWgwYld3Z2UxeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHhOVHNnTHlvZ01TQXFMMXh1SUNBdGJYTXRkR1Y0ZEMxemFYcGxMV0ZrYW5WemREb2dNVEF3SlRzZ0x5b2dNaUFxTDF4dUlDQXRkMlZpYTJsMExYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklERXdNQ1U3SUM4cUlESWdLaTljYm4xY2JseHVMeW9nVTJWamRHbHZibk5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFLbHh1SUNvZ1VtVnRiM1psSUhSb1pTQnRZWEpuYVc0Z2FXNGdZV3hzSUdKeWIzZHpaWEp6SUNodmNHbHVhVzl1WVhSbFpDa3VYRzRnS2k5Y2JseHVZbTlrZVNCN1hHNGdJRzFoY21kcGJqb2dNRHRjYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1pHbHpjR3hoZVNCcGJpQkpSU0E1TFM1Y2JpQXFMMXh1WEc1aGNuUnBZMnhsTEZ4dVlYTnBaR1VzWEc1bWIyOTBaWElzWEc1b1pXRmtaWElzWEc1dVlYWXNYRzV6WldOMGFXOXVJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc1OVhHNWNiaThxS2x4dUlDb2dRMjl5Y21WamRDQjBhR1VnWm05dWRDQnphWHBsSUdGdVpDQnRZWEpuYVc0Z2IyNGdZR2d4WUNCbGJHVnRaVzUwY3lCM2FYUm9hVzRnWUhObFkzUnBiMjVnSUdGdVpGeHVJQ29nWUdGeWRHbGpiR1ZnSUdOdmJuUmxlSFJ6SUdsdUlFTm9jbTl0WlN3Z1JtbHlaV1p2ZUN3Z1lXNWtJRk5oWm1GeWFTNWNiaUFxTDF4dVhHNW9NU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNbVZ0TzF4dUlDQnRZWEpuYVc0NklEQXVOamRsYlNBd08xeHVmVnh1WEc0dktpQkhjbTkxY0dsdVp5QmpiMjUwWlc1MFhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2S2lwY2JpQXFJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmthWE53YkdGNUlHbHVJRWxGSURrdExseHVJQ29nTVM0Z1FXUmtJSFJvWlNCamIzSnlaV04wSUdScGMzQnNZWGtnYVc0Z1NVVXVYRzRnS2k5Y2JseHVabWxuWTJGd2RHbHZiaXhjYm1acFozVnlaU3hjYm0xaGFXNGdleUF2S2lBeElDb3ZYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCdFlYSm5hVzRnYVc0Z1NVVWdPQzVjYmlBcUwxeHVYRzVtYVdkMWNtVWdlMXh1SUNCdFlYSm5hVzQ2SURGbGJTQTBNSEI0TzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JpYjNnZ2MybDZhVzVuSUdsdUlFWnBjbVZtYjNndVhHNGdLaUF5TGlCVGFHOTNJSFJvWlNCdmRtVnlabXh2ZHlCcGJpQkZaR2RsSUdGdVpDQkpSUzVjYmlBcUwxeHVYRzVvY2lCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NE95QXZLaUF4SUNvdlhHNGdJR2hsYVdkb2REb2dNRHNnTHlvZ01TQXFMMXh1SUNCdmRtVnlabXh2ZHpvZ2RtbHphV0pzWlRzZ0x5b2dNaUFxTDF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUVOdmNuSmxZM1FnZEdobElHbHVhR1Z5YVhSaGJtTmxJR0Z1WkNCelkyRnNhVzVuSUc5bUlHWnZiblFnYzJsNlpTQnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaUF5TGlCRGIzSnlaV04wSUhSb1pTQnZaR1FnWUdWdFlDQm1iMjUwSUhOcGVtbHVaeUJwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzRnS2k5Y2JseHVjSEpsSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUcxdmJtOXpjR0ZqWlN3Z2JXOXViM053WVdObE95QXZLaUF4SUNvdlhHNGdJR1p2Ym5RdGMybDZaVG9nTVdWdE95QXZLaUF5SUNvdlhHNTlYRzVjYmk4cUlGUmxlSFF0YkdWMlpXd2djMlZ0WVc1MGFXTnpYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSURFdUlGSmxiVzkyWlNCMGFHVWdaM0poZVNCaVlXTnJaM0p2ZFc1a0lHOXVJR0ZqZEdsMlpTQnNhVzVyY3lCcGJpQkpSU0F4TUM1Y2JpQXFJREl1SUZKbGJXOTJaU0JuWVhCeklHbHVJR3hwYm10eklIVnVaR1Z5YkdsdVpTQnBiaUJwVDFNZ09Dc2dZVzVrSUZOaFptRnlhU0E0S3k1Y2JpQXFMMXh1WEc1aElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN0lDOHFJREVnS2k5Y2JpQWdMWGRsWW10cGRDMTBaWGgwTFdSbFkyOXlZWFJwYjI0dGMydHBjRG9nYjJKcVpXTjBjenNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlERXVJRkpsYlc5MlpTQjBhR1VnWW05MGRHOXRJR0p2Y21SbGNpQnBiaUJEYUhKdmJXVWdOVGN0SUdGdVpDQkdhWEpsWm05NElETTVMUzVjYmlBcUlESXVJRUZrWkNCMGFHVWdZMjl5Y21WamRDQjBaWGgwSUdSbFkyOXlZWFJwYjI0Z2FXNGdRMmh5YjIxbExDQkZaR2RsTENCSlJTd2dUM0JsY21Fc0lHRnVaQ0JUWVdaaGNta3VYRzRnS2k5Y2JseHVZV0ppY2x0MGFYUnNaVjBnZTF4dUlDQmliM0prWlhJdFltOTBkRzl0T2lCdWIyNWxPeUF2S2lBeElDb3ZYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nZFc1a1pYSnNhVzVsT3lBdktpQXlJQ292WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2RXNWtaWEpzYVc1bElHUnZkSFJsWkRzZ0x5b2dNaUFxTDF4dWZWeHVYRzR2S2lwY2JpQXFJRkJ5WlhabGJuUWdkR2hsSUdSMWNHeHBZMkYwWlNCaGNIQnNhV05oZEdsdmJpQnZaaUJnWW05c1pHVnlZQ0JpZVNCMGFHVWdibVY0ZENCeWRXeGxJR2x1SUZOaFptRnlhU0EyTGx4dUlDb3ZYRzVjYm1Jc1hHNXpkSEp2Ym1jZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ2FXNW9aWEpwZER0Y2JuMWNibHh1THlvcVhHNGdLaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdabTl1ZENCM1pXbG5hSFFnYVc0Z1EyaHliMjFsTENCRlpHZGxMQ0JoYm1RZ1UyRm1ZWEpwTGx4dUlDb3ZYRzVjYm1Jc1hHNXpkSEp2Ym1jZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaR1Z5TzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUVOdmNuSmxZM1FnZEdobElHbHVhR1Z5YVhSaGJtTmxJR0Z1WkNCelkyRnNhVzVuSUc5bUlHWnZiblFnYzJsNlpTQnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaUF5TGlCRGIzSnlaV04wSUhSb1pTQnZaR1FnWUdWdFlDQm1iMjUwSUhOcGVtbHVaeUJwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzRnS2k5Y2JseHVZMjlrWlN4Y2JtdGlaQ3hjYm5OaGJYQWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2diVzl1YjNOd1lXTmxMQ0J0YjI1dmMzQmhZMlU3SUM4cUlERWdLaTljYmlBZ1ptOXVkQzF6YVhwbE9pQXhaVzA3SUM4cUlESWdLaTljYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1ptOXVkQ0J6ZEhsc1pTQnBiaUJCYm1SeWIybGtJRFF1TXkwdVhHNGdLaTljYmx4dVpHWnVJSHRjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dhWFJoYkdsak8xeHVmVnh1WEc0dktpcGNiaUFxSUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JpWVdOclozSnZkVzVrSUdGdVpDQmpiMnh2Y2lCcGJpQkpSU0E1TFM1Y2JpQXFMMXh1WEc1dFlYSnJJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyWm1NRHRjYmlBZ1kyOXNiM0k2SUNNd01EQTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FXUmtJSFJvWlNCamIzSnlaV04wSUdadmJuUWdjMmw2WlNCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEc0Z0tpOWNibHh1YzIxaGJHd2dlMXh1SUNCbWIyNTBMWE5wZW1VNklEZ3dKVHRjYm4xY2JseHVMeW9xWEc0Z0tpQlFjbVYyWlc1MElHQnpkV0pnSUdGdVpDQmdjM1Z3WUNCbGJHVnRaVzUwY3lCbWNtOXRJR0ZtWm1WamRHbHVaeUIwYUdVZ2JHbHVaU0JvWldsbmFIUWdhVzVjYmlBcUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUwxeHVYRzV6ZFdJc1hHNXpkWEFnZTF4dUlDQm1iMjUwTFhOcGVtVTZJRGMxSlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURBN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUdKaGMyVnNhVzVsTzF4dWZWeHVYRzV6ZFdJZ2UxeHVJQ0JpYjNSMGIyMDZJQzB3TGpJMVpXMDdYRzU5WEc1Y2JuTjFjQ0I3WEc0Z0lIUnZjRG9nTFRBdU5XVnRPMXh1ZlZ4dVhHNHZLaUJGYldKbFpHUmxaQ0JqYjI1MFpXNTBYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JrYVhOd2JHRjVJR2x1SUVsRklEa3RMbHh1SUNvdlhHNWNibUYxWkdsdkxGeHVkbWxrWlc4Z2UxeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNTlYRzVjYmk4cUtseHVJQ29nUVdSa0lIUm9aU0JqYjNKeVpXTjBJR1JwYzNCc1lYa2dhVzRnYVU5VElEUXROeTVjYmlBcUwxeHVYRzVoZFdScGJ6cHViM1FvVzJOdmJuUnliMnh6WFNrZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0JvWldsbmFIUTZJREE3WEc1OVhHNWNiaThxS2x4dUlDb2dVbVZ0YjNabElIUm9aU0JpYjNKa1pYSWdiMjRnYVcxaFoyVnpJR2x1YzJsa1pTQnNhVzVyY3lCcGJpQkpSU0F4TUMwdVhHNGdLaTljYmx4dWFXMW5JSHRjYmlBZ1ltOXlaR1Z5TFhOMGVXeGxPaUJ1YjI1bE8xeHVmVnh1WEc0dktpcGNiaUFxSUVocFpHVWdkR2hsSUc5MlpYSm1iRzkzSUdsdUlFbEZMbHh1SUNvdlhHNWNibk4yWnpwdWIzUW9Pbkp2YjNRcElIdGNiaUFnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYm4xY2JseHVMeW9nUm05eWJYTmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nTVM0Z1EyaGhibWRsSUhSb1pTQm1iMjUwSUhOMGVXeGxjeUJwYmlCaGJHd2dZbkp2ZDNObGNuTWdLRzl3YVc1cGIyNWhkR1ZrS1M1Y2JpQXFJREl1SUZKbGJXOTJaU0IwYUdVZ2JXRnlaMmx1SUdsdUlFWnBjbVZtYjNnZ1lXNWtJRk5oWm1GeWFTNWNiaUFxTDF4dVhHNWlkWFIwYjI0c1hHNXBibkIxZEN4Y2JtOXdkR2R5YjNWd0xGeHVjMlZzWldOMExGeHVkR1Y0ZEdGeVpXRWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2djMkZ1Y3kxelpYSnBaanNnTHlvZ01TQXFMMXh1SUNCbWIyNTBMWE5wZW1VNklERXdNQ1U3SUM4cUlERWdLaTljYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TVRVN0lDOHFJREVnS2k5Y2JpQWdiV0Z5WjJsdU9pQXdPeUF2S2lBeUlDb3ZYRzU5WEc1Y2JpOHFLbHh1SUNvZ1UyaHZkeUIwYUdVZ2IzWmxjbVpzYjNjZ2FXNGdTVVV1WEc0Z0tpQXhMaUJUYUc5M0lIUm9aU0J2ZG1WeVpteHZkeUJwYmlCRlpHZGxMbHh1SUNvdlhHNWNibUoxZEhSdmJpeGNibWx1Y0hWMElIc2dMeW9nTVNBcUwxeHVJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjYm4xY2JseHVMeW9xWEc0Z0tpQlNaVzF2ZG1VZ2RHaGxJR2x1YUdWeWFYUmhibU5sSUc5bUlIUmxlSFFnZEhKaGJuTm1iM0p0SUdsdUlFVmtaMlVzSUVacGNtVm1iM2dzSUdGdVpDQkpSUzVjYmlBcUlERXVJRkpsYlc5MlpTQjBhR1VnYVc1b1pYSnBkR0Z1WTJVZ2IyWWdkR1Y0ZENCMGNtRnVjMlp2Y20wZ2FXNGdSbWx5WldadmVDNWNiaUFxTDF4dVhHNWlkWFIwYjI0c1hHNXpaV3hsWTNRZ2V5QXZLaUF4SUNvdlhHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQnViMjVsTzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUZCeVpYWmxiblFnWVNCWFpXSkxhWFFnWW5WbklIZG9aWEpsSUNneUtTQmtaWE4wY205NWN5QnVZWFJwZG1VZ1lHRjFaR2x2WUNCaGJtUWdZSFpwWkdWdllGeHVJQ29nSUNBZ1kyOXVkSEp2YkhNZ2FXNGdRVzVrY205cFpDQTBMbHh1SUNvZ01pNGdRMjl5Y21WamRDQjBhR1VnYVc1aFltbHNhWFI1SUhSdklITjBlV3hsSUdOc2FXTnJZV0pzWlNCMGVYQmxjeUJwYmlCcFQxTWdZVzVrSUZOaFptRnlhUzVjYmlBcUwxeHVYRzVpZFhSMGIyNHNYRzVvZEcxc0lGdDBlWEJsUFZ3aVluVjBkRzl1WENKZExDQXZLaUF4SUNvdlhHNWJkSGx3WlQxY0luSmxjMlYwWENKZExGeHVXM1I1Y0dVOVhDSnpkV0p0YVhSY0lsMGdlMXh1SUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHSjFkSFJ2YmpzZ0x5b2dNaUFxTDF4dWZWeHVYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQjBhR1VnYVc1dVpYSWdZbTl5WkdWeUlHRnVaQ0J3WVdSa2FXNW5JR2x1SUVacGNtVm1iM2d1WEc0Z0tpOWNibHh1WW5WMGRHOXVPam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlMRnh1VzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDA2T2kxdGIzb3RabTlqZFhNdGFXNXVaWElzWEc1YmRIbHdaVDFjSW5KbGMyVjBYQ0pkT2pvdGJXOTZMV1p2WTNWekxXbHVibVZ5TEZ4dVczUjVjR1U5WENKemRXSnRhWFJjSWwwNk9pMXRiM290Wm05amRYTXRhVzV1WlhJZ2UxeHVJQ0JpYjNKa1pYSXRjM1I1YkdVNklHNXZibVU3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVnpkRzl5WlNCMGFHVWdabTlqZFhNZ2MzUjViR1Z6SUhWdWMyVjBJR0o1SUhSb1pTQndjbVYyYVc5MWN5QnlkV3hsTGx4dUlDb3ZYRzVjYm1KMWRIUnZiam90Ylc5NkxXWnZZM1Z6Y21sdVp5eGNibHQwZVhCbFBWd2lZblYwZEc5dVhDSmRPaTF0YjNvdFptOWpkWE55YVc1bkxGeHVXM1I1Y0dVOVhDSnlaWE5sZEZ3aVhUb3RiVzk2TFdadlkzVnpjbWx1Wnl4Y2JsdDBlWEJsUFZ3aWMzVmliV2wwWENKZE9pMXRiM290Wm05amRYTnlhVzVuSUh0Y2JpQWdiM1YwYkdsdVpUb2dNWEI0SUdSdmRIUmxaQ0JDZFhSMGIyNVVaWGgwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRU52Y25KbFkzUWdkR2hsSUhCaFpHUnBibWNnYVc0Z1JtbHlaV1p2ZUM1Y2JpQXFMMXh1WEc1bWFXVnNaSE5sZENCN1hHNGdJSEJoWkdScGJtYzZJREF1TXpWbGJTQXdMamMxWlcwZ01DNDJNalZsYlR0Y2JuMWNibHh1THlvcVhHNGdLaUF4TGlCRGIzSnlaV04wSUhSb1pTQjBaWGgwSUhkeVlYQndhVzVuSUdsdUlFVmtaMlVnWVc1a0lFbEZMbHh1SUNvZ01pNGdRMjl5Y21WamRDQjBhR1VnWTI5c2IzSWdhVzVvWlhKcGRHRnVZMlVnWm5KdmJTQmdabWxsYkdSelpYUmdJR1ZzWlcxbGJuUnpJR2x1SUVsRkxseHVJQ29nTXk0Z1VtVnRiM1psSUhSb1pTQndZV1JrYVc1bklITnZJR1JsZG1Wc2IzQmxjbk1nWVhKbElHNXZkQ0JqWVhWbmFIUWdiM1YwSUhkb1pXNGdkR2hsZVNCNlpYSnZJRzkxZEZ4dUlDb2dJQ0FnWUdacFpXeGtjMlYwWUNCbGJHVnRaVzUwY3lCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEc0Z0tpOWNibHh1YkdWblpXNWtJSHRjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHNnTHlvZ01TQXFMMXh1SUNCamIyeHZjam9nYVc1b1pYSnBkRHNnTHlvZ01pQXFMMXh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVHNnTHlvZ01TQXFMMXh1SUNCdFlYZ3RkMmxrZEdnNklERXdNQ1U3SUM4cUlERWdLaTljYmlBZ2NHRmtaR2x1WnpvZ01Ec2dMeW9nTXlBcUwxeHVJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2JtOXliV0ZzT3lBdktpQXhJQ292WEc1OVhHNWNiaThxS2x4dUlDb2dNUzRnUVdSa0lIUm9aU0JqYjNKeVpXTjBJR1JwYzNCc1lYa2dhVzRnU1VVZ09TMHVYRzRnS2lBeUxpQkJaR1FnZEdobElHTnZjbkpsWTNRZ2RtVnlkR2xqWVd3Z1lXeHBaMjV0Wlc1MElHbHVJRU5vY205dFpTd2dSbWx5WldadmVDd2dZVzVrSUU5d1pYSmhMbHh1SUNvdlhHNWNibkJ5YjJkeVpYTnpJSHRjYmlBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPeUF2S2lBeElDb3ZYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaVHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdaR1ZtWVhWc2RDQjJaWEowYVdOaGJDQnpZM0p2Ykd4aVlYSWdhVzRnU1VVdVhHNGdLaTljYmx4dWRHVjRkR0Z5WldFZ2UxeHVJQ0J2ZG1WeVpteHZkem9nWVhWMGJ6dGNibjFjYmx4dUx5b3FYRzRnS2lBeExpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1ltOTRJSE5wZW1sdVp5QnBiaUJKUlNBeE1DMHVYRzRnS2lBeUxpQlNaVzF2ZG1VZ2RHaGxJSEJoWkdScGJtY2dhVzRnU1VVZ01UQXRMbHh1SUNvdlhHNWNibHQwZVhCbFBWd2lZMmhsWTJ0aWIzaGNJbDBzWEc1YmRIbHdaVDFjSW5KaFpHbHZYQ0pkSUh0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZURzZ0x5b2dNU0FxTDF4dUlDQndZV1JrYVc1bk9pQXdPeUF2S2lBeUlDb3ZYRzU5WEc1Y2JpOHFLbHh1SUNvZ1EyOXljbVZqZENCMGFHVWdZM1Z5YzI5eUlITjBlV3hsSUc5bUlHbHVZM0psYldWdWRDQmhibVFnWkdWamNtVnRaVzUwSUdKMWRIUnZibk1nYVc0Z1EyaHliMjFsTGx4dUlDb3ZYRzVjYmx0MGVYQmxQVndpYm5WdFltVnlYQ0pkT2pvdGQyVmlhMmwwTFdsdWJtVnlMWE53YVc0dFluVjBkRzl1TEZ4dVczUjVjR1U5WENKdWRXMWlaWEpjSWwwNk9pMTNaV0pyYVhRdGIzVjBaWEl0YzNCcGJpMWlkWFIwYjI0Z2UxeHVJQ0JvWldsbmFIUTZJR0YxZEc4N1hHNTlYRzVjYmk4cUtseHVJQ29nTVM0Z1EyOXljbVZqZENCMGFHVWdiMlJrSUdGd2NHVmhjbUZ1WTJVZ2FXNGdRMmh5YjIxbElHRnVaQ0JUWVdaaGNta3VYRzRnS2lBeUxpQkRiM0p5WldOMElIUm9aU0J2ZFhSc2FXNWxJSE4wZVd4bElHbHVJRk5oWm1GeWFTNWNiaUFxTDF4dVhHNWJkSGx3WlQxY0luTmxZWEpqYUZ3aVhTQjdYRzRnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ2RHVjRkR1pwWld4a095QXZLaUF4SUNvdlhHNGdJRzkxZEd4cGJtVXRiMlptYzJWME9pQXRNbkI0T3lBdktpQXlJQ292WEc1OVhHNWNiaThxS2x4dUlDb2dVbVZ0YjNabElIUm9aU0JwYm01bGNpQndZV1JrYVc1bklHRnVaQ0JqWVc1alpXd2dZblYwZEc5dWN5QnBiaUJEYUhKdmJXVWdZVzVrSUZOaFptRnlhU0J2YmlCdFlXTlBVeTVjYmlBcUwxeHVYRzViZEhsd1pUMWNJbk5sWVhKamFGd2lYVG82TFhkbFltdHBkQzF6WldGeVkyZ3RZMkZ1WTJWc0xXSjFkSFJ2Yml4Y2JsdDBlWEJsUFZ3aWMyVmhjbU5vWENKZE9qb3RkMlZpYTJsMExYTmxZWEpqYUMxa1pXTnZjbUYwYVc5dUlIdGNiaUFnTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT2lCdWIyNWxPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlERXVJRU52Y25KbFkzUWdkR2hsSUdsdVlXSnBiR2wwZVNCMGJ5QnpkSGxzWlNCamJHbGphMkZpYkdVZ2RIbHdaWE1nYVc0Z2FVOVRJR0Z1WkNCVFlXWmhjbWt1WEc0Z0tpQXlMaUJEYUdGdVoyVWdabTl1ZENCd2NtOXdaWEowYVdWeklIUnZJR0JwYm1obGNtbDBZQ0JwYmlCVFlXWmhjbWt1WEc0Z0tpOWNibHh1T2pvdGQyVmlhMmwwTFdacGJHVXRkWEJzYjJGa0xXSjFkSFJ2YmlCN1hHNGdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nWW5WMGRHOXVPeUF2S2lBeElDb3ZYRzRnSUdadmJuUTZJR2x1YUdWeWFYUTdJQzhxSURJZ0tpOWNibjFjYmx4dUx5b2dTVzUwWlhKaFkzUnBkbVZjYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFYRzRnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCSlJTQTVMUzVjYmlBcUlERXVJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmthWE53YkdGNUlHbHVJRVZrWjJVc0lFbEZMQ0JoYm1RZ1JtbHlaV1p2ZUM1Y2JpQXFMMXh1WEc1a1pYUmhhV3h6TENBdktpQXhJQ292WEc1dFpXNTFJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc1OVhHNWNiaThxWEc0Z0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1pHbHpjR3hoZVNCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEc0Z0tpOWNibHh1YzNWdGJXRnllU0I3WEc0Z0lHUnBjM0JzWVhrNklHeHBjM1F0YVhSbGJUdGNibjFjYmx4dUx5b2dVMk55YVhCMGFXNW5YRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JrYVhOd2JHRjVJR2x1SUVsRklEa3RMbHh1SUNvdlhHNWNibU5oYm5aaGN5QjdYRzRnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNibjFjYmx4dUx5b3FYRzRnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCSlJTNWNiaUFxTDF4dVhHNTBaVzF3YkdGMFpTQjdYRzRnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzU5WEc1Y2JpOHFJRWhwWkdSbGJseHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THlvcVhHNGdLaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdaR2x6Y0d4aGVTQnBiaUJKUlNBeE1DMHVYRzRnS2k5Y2JseHVXMmhwWkdSbGJsMGdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dUlpd2lMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJQ05TUlZORlZGeHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THlvcVhHNGdLaUJCSUhabGNua2djMmx0Y0d4bElISmxjMlYwSUhSb1lYUWdjMmwwY3lCdmJpQjBiM0FnYjJZZ1RtOXliV0ZzYVhwbExtTnpjeTVjYmlBcUwxeHVYRzVpYjJSNUxGeHVhREVzSUdneUxDQm9NeXdnYURRc0lHZzFMQ0JvTml4Y2JtSnNiMk5yY1hWdmRHVXNJSEFzSUhCeVpTeGNibVJzTENCa1pDd2diMndzSUhWc0xGeHVabWxuZFhKbExGeHVhSElzWEc1bWFXVnNaSE5sZEN3Z2JHVm5aVzVrSUh0Y2JpQWdiV0Z5WjJsdU9pQWdNRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNibjFjYmx4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGNtRnBiR2x1WnlCdFlYSm5hVzV6SUdaeWIyMGdibVZ6ZEdWa0lHeHBjM1J6TGx4dUlDb3ZYRzVjYm14cElENGdlMXh1WEc0Z0lHOXNMRnh1SUNCMWJDQjdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2JpQWdmVnh1WEc1OVhHNWNibHh1THlvcVhHNGdLaUJTWlcxdmRtVWdaR1ZtWVhWc2RDQjBZV0pzWlNCemNHRmphVzVuTGx4dUlDb3ZYRzVjYm5SaFlteGxJSHRjYmlBZ1ltOXlaR1Z5TFdOdmJHeGhjSE5sT2lCamIyeHNZWEJ6WlR0Y2JpQWdZbTl5WkdWeUxYTndZV05wYm1jNklEQTdYRzU5WEc1Y2JseHVMeW9xWEc0Z0tpQXhMaUJTWlhObGRDQkRhSEp2YldVZ1lXNWtJRVpwY21WbWIzZ2dZbVZvWVhacGIzVnlJSGRvYVdOb0lITmxkSE1nWVNCZ2JXbHVMWGRwWkhSb09pQnRhVzR0WTI5dWRHVnVkRHRnWEc0Z0tpQWdJQ0J2YmlCbWFXVnNaSE5sZEhNdVhHNGdLaTljYmx4dVptbGxiR1J6WlhRZ2UxeHVJQ0J0YVc0dGQybGtkR2c2SURBN0lDOHFJRnN4WFNBcUwxeHVJQ0JpYjNKa1pYSTZJREE3WEc1OVhHNGlMQ0l2S2lBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVJQ0FnSTFOSVFWSkZSRnh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lCVGFHRnlaV1FnWkdWamJHRnlZWFJwYjI1eklHWnZjaUJqWlhKMFlXbHVJR1ZzWlcxbGJuUnpMbHh1SUNvdlhHNWNiaThxS2x4dUlDb2dRV3gzWVhseklHUmxZMnhoY21VZ2JXRnlaMmx1Y3lCcGJpQjBhR1VnYzJGdFpTQmthWEpsWTNScGIyNDZYRzRnS2lCamMzTjNhWHBoY21SeWVTNWpiMjB2TWpBeE1pOHdOaTl6YVc1bmJHVXRaR2x5WldOMGFXOXVMVzFoY21kcGJpMWtaV05zWVhKaGRHbHZibk5jYmlBcUwxeHVYRzR2S2lCemRIbHNaV3hwYm5RdFpHbHpZV0pzWlNCelpXeGxZM1J2Y2kxc2FYTjBMV052YlcxaExXNWxkMnhwYm1VdFlXWjBaWElnS2k5Y2JseHVZV1JrY21WemN5eGNibWd4TENCb01pd2dhRE1zSUdnMExDQm9OU3dnYURZc1hHNWliRzlqYTNGMWIzUmxMQ0J3TENCd2NtVXNYRzVrYkN3Z2Iyd3NJSFZzTEZ4dVptbG5kWEpsTEZ4dWFISXNYRzUwWVdKc1pTeGNibVpwWld4a2MyVjBJSHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nSkdsdWRXbDBMV2RzYjJKaGJDMXpjR0ZqYVc1bkxYVnVhWFE3WEc1OVhHNWNibHh1THlvcVhHNGdLaUJEYjI1emFYTjBaVzUwSUdsdVpHVnVkR0YwYVc5dUlHWnZjaUJzYVhOMGN5NWNiaUFxTDF4dVhHNWtaQ3dnYjJ3c0lIVnNJSHRjYmlBZ2JXRnlaMmx1TFd4bFpuUTZJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBPMXh1ZlZ4dVhHNHZLaUJ6ZEhsc1pXeHBiblF0Wlc1aFlteGxJSE5sYkdWamRHOXlMV3hwYzNRdFkyOXRiV0V0Ym1WM2JHbHVaUzFoWm5SbGNpQXFMMXh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmlBZ0lDTlFRVWRGWEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlGTnBiWEJzWlNCd1lXZGxMV3hsZG1Wc0lITmxkSFZ3TGx4dUlDcGNiaUFxSURFdUlGTmxkQ0IwYUdVZ1pHVm1ZWFZzZENCZ1ptOXVkQzF6YVhwbFlDQmhibVFnWUd4cGJtVXRhR1ZwWjJoMFlDQm1iM0lnZEdobElHVnVkR2x5WlNCd2NtOXFaV04wTEZ4dUlDb2dJQ0FnYzI5MWNtTmxaQ0JtY205dElHOTFjaUJrWldaaGRXeDBJSFpoY21saFlteGxjeTRnVkdobElHQm1iMjUwTFhOcGVtVmdJR2x6SUdOaGJHTjFiR0YwWldRZ2RHOGdaWGhwYzNSY2JpQXFJQ0FnSUdsdUlHVnRjeXdnZEdobElHQnNhVzVsTFdobGFXZG9kR0FnYVhNZ1kyRnNZM1ZzWVhSbFpDQjBieUJsZUdsemRDQjFibWwwYkdWemMyeDVMbHh1SUNvZ01pNGdSbTl5WTJVZ2MyTnliMnhzWW1GeWN5QjBieUJoYkhkaGVYTWdZbVVnZG1semFXSnNaU0IwYnlCd2NtVjJaVzUwSUdGM2EzZGhjbVFnNG9DWWFuVnRjSFBpZ0prZ2QyaGxibHh1SUNvZ0lDQWdibUYyYVdkaGRHbHVaeUJpWlhSM1pXVnVJSEJoWjJWeklIUm9ZWFFnWkc4dlpHOGdibTkwSUdoaGRtVWdaVzV2ZFdkb0lHTnZiblJsYm5RZ2RHOGdjSEp2WkhWalpWeHVJQ29nSUNBZ2MyTnliMnhzWW1GeWN5QnVZWFIxY21Gc2JIa3VYRzRnS2lBekxpQkZibk4xY21VZ2RHaGxJSEJoWjJVZ1lXeDNZWGx6SUdacGJHeHpJR0YwSUd4bFlYTjBJSFJvWlNCbGJuUnBjbVVnYUdWcFoyaDBJRzltSUhSb1pTQjJhV1YzY0c5eWRDNWNiaUFxTDF4dVhHNW9kRzFzSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUFvSkdsdWRXbDBMV2RzYjJKaGJDMW1iMjUwTFhOcGVtVWdMeUF4Tm5CNEtTQXFJREZsYlRzZ0x5b2dXekZkSUNvdlhHNGdJR3hwYm1VdGFHVnBaMmgwT2lBa2FXNTFhWFF0WjJ4dlltRnNMV3hwYm1VdGFHVnBaMmgwSUM4Z0pHbHVkV2wwTFdkc2IySmhiQzFtYjI1MExYTnBlbVU3SUM4cUlGc3hYU0FxTDF4dUlDQnZkbVZ5Wm14dmR5MTVPaUJ6WTNKdmJHdzdJQzhxSUZzeVhTQXFMMXh1SUNCdGFXNHRhR1ZwWjJoME9pQXhNREFsT3lBdktpQmJNMTBnS2k5Y2JuMWNiaUlzSWk4cUlEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0Z0lDQkZiR1Z0Wlc1MGN5OVFZV2RsWEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzVvZEcxc0xDQmliMlI1SUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNkSVpXeDJaWFJwWTJFbkxDQnpZVzV6TFhObGNtbG1PMXh1ZlZ4dVhHNW9kRzFzSUh0Y2JpQWdkR1Y0ZEMxeVpXNWtaWEpwYm1jNklHOXdkR2x0YVhwbFRHVm5hV0pwYkdsMGVUdGNiaUFnTFhkbFltdHBkQzFtYjI1MExYTnRiMjkwYUdsdVp6b2dZVzUwYVdGc2FXRnpaV1E3WEc1OVhHNWNibUp2WkhrZ2UxeHVYRzU5WEc1Y2JtSnZaSGtnZTF4dUlDQW1PbUZtZEdWeUlIdGNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lHTnZiblJsYm5RNklDZHRiMkpwYkdVbk8xeHVJQ0I5WEc1Y2JpQWdRR2x1WTJ4MVpHVWdiWEVvSkdaeWIyMDZJSFJoWW14bGRDa2dlMXh1SUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0ozUmhZbXhsZENjN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1FHbHVZMngxWkdVZ2JYRW9KR1p5YjIwNklHUmxjMnQwYjNBcElIdGNiaUFnSUNBbU9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUdOdmJuUmxiblE2SUNka1pYTnJkRzl3Snp0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCQWFXNWpiSFZrWlNCdGNTZ2tabkp2YlRvZ2QybGtaU2tnZTF4dUlDQWdJQ1k2WVdaMFpYSWdlMXh1SUNBZ0lDQWdZMjl1ZEdWdWREb2dKMlJsYzJ0MGIzQW5PMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJaXdpTHlvZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUNOSlRVRkhSVk5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFLbHh1SUNvZ01TNGdSbXgxYVdRZ2FXMWhaMlZ6SUdadmNpQnlaWE53YjI1emFYWmxJSEIxY25CdmMyVnpMbHh1SUNvZ01pNGdUMlptYzJWMElHQmhiSFJnSUhSbGVIUWdabkp2YlNCemRYSnliM1Z1WkdsdVp5QmpiM0I1TGx4dUlDb2dNeTRnVTJWMGRHbHVaeUJnZG1WeWRHbGpZV3d0WVd4cFoyNWdJSEpsYlc5MlpYTWdkR2hsSUhkb2FYUmxjM0JoWTJVZ2RHaGhkQ0JoY0hCbFlYSnpJSFZ1WkdWeUlHQnBiV2RnWEc0Z0tpQWdJQ0JsYkdWdFpXNTBjeUIzYUdWdUlIUm9aWGtnWVhKbElHUnliM0J3WldRZ2FXNTBieUJoSUhCaFoyVWdZWE10YVhNdUlGTmhabVZ5SUdGc2RHVnlibUYwYVhabElIUnZYRzRnS2lBZ0lDQjFjMmx1WnlCZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WUM1Y2JpQXFMMXh1WEc1cGJXY2dlMXh1SUNCdFlYZ3RkMmxrZEdnNklERXdNQ1U3SUM4cUlGc3hYU0FxTDF4dUlDQm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTTdJQzhxSUZzeVhTQXFMMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPeUF2S2lCYk0xMGdLaTljYm4xY2JseHVYRzR2S2lwY2JpQXFJREV1SUVsbUlHRWdZSGRwWkhSb1lDQmhibVF2YjNJZ1lHaGxhV2RvZEdBZ1lYUjBjbWxpZFhSbElHaGhkbVVnWW1WbGJpQmxlSEJzYVdOcGRHeDVJR1JsWm1sdVpXUXNJR3hsZE9LQW1YTmNiaUFxSUNBZ0lHNXZkQ0J0WVd0bElIUm9aU0JwYldGblpTQm1iSFZwWkM1Y2JpQXFMMXh1WEc1cGJXZGJkMmxrZEdoZExDQXZLaUJiTVYwZ0tpOWNibWx0WjF0b1pXbG5hSFJkSUhzZ0lDOHFJRnN4WFNBcUwxeHVJQ0J0WVhndGQybGtkR2c2SUc1dmJtVTdYRzU5WEc0aUxDSXZLaUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dUlDQWdJMVJCUWt4RlUxeHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THlvcVhHNGdLaUF4TGlCRmJuTjFjbVVnZEdGaWJHVnpJR1pwYkd3Z2RYQWdZWE1nYlhWamFDQnpjR0ZqWlNCaGN5QndiM056YVdKc1pTNWNiaUFxTDF4dVhHNTBZV0pzWlNCN1hHNGdJSGRwWkhSb09pQXhNREFsT3lBdktpQmJNVjBnS2k5Y2JuMWNiaUlzSWk4cUlEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0Z0lDQkZiR1Z0Wlc1MGN5OU1hVzVyYzF4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1WVNCN1hHNGdJR052Ykc5eU9pQnBibWhsY21sME8xeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJSFZ1WkdWeWJHbHVaVHRjYmx4dUlDQW1PbWh2ZG1WeUlIdGNiaUFnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUgxY2JuMWNiaUlzSWk4cUlEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzRnSUNBalYxSkJVRkJGVWx4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeW9xWEc0Z0tpQlFZV2RsTFd4bGRtVnNJR052Ym5OMGNtRnBibWx1WnlCaGJtUWdkM0poY0hCcGJtY2daV3hsYldWdWRITXVYRzRnS2k5Y2JseHVKR2x1ZFdsMExYZHlZWEJ3WlhJdGQybGtkR2c2SURFeU1EQndlQ0FoWkdWbVlYVnNkRHRjYmx4dUx5b2djM1I1YkdWc2FXNTBMV1JwYzJGaWJHVWdLaTljYmtCcFppQW9kSGx3WlMxdlppZ2thVzUxYVhRdGQzSmhjSEJsY2kxM2FXUjBhQ2tnSVQwZ2JuVnRZbVZ5S1NCN1hHNGdJRUJsY25KdmNpQmNJbUFqZXlScGJuVnBkQzEzY21Gd2NHVnlMWGRwWkhSb2ZXQWdibVZsWkhNZ2RHOGdZbVVnWVNCdWRXMWlaWEl1WENKY2JuMWNiaThxSUhOMGVXeGxiR2x1ZEMxbGJtRmliR1VnS2k5Y2JseHVMbTh0ZDNKaGNIQmxjaUI3WEc0Z0lFQnBibU5zZFdSbElHbHVkV2wwTFdOc1pXRnlabWw0S0NrN1hHNGdJSEJoWkdScGJtY3RjbWxuYUhRNklDUnBiblZwZEMxbmJHOWlZV3d0YzNCaFkybHVaeTExYm1sME8xeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklDQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGREdGNiaUFnYldGeVoybHVMWEpwWjJoME9pQmhkWFJ2TzF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nSUdGMWRHODdYRzRnSUcxaGVDMTNhV1IwYURvZ0pHbHVkV2wwTFhkeVlYQndaWEl0ZDJsa2RHZzdYRzU5WEc1Y2JseHVYRzVjYmx4dUx5b2dVMmw2WlNCMllYSnBZVzUwY3k1Y2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaTV2TFhkeVlYQndaWEl0TFhScGJua2dlMXh1SUNCd1lXUmthVzVuTFhKcFoyaDBPaUFrYVc1MWFYUXRaMnh2WW1Gc0xYTndZV05wYm1jdGRXNXBkQzEwYVc1NU8xeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklDQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMTBhVzU1TzF4dWZWeHVYRzR1YnkxM2NtRndjR1Z5TFMxemJXRnNiQ0I3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SUNScGJuVnBkQzFuYkc5aVlXd3RjM0JoWTJsdVp5MTFibWwwTFhOdFlXeHNPMXh1SUNCd1lXUmthVzVuTFd4bFpuUTZJQ0FrYVc1MWFYUXRaMnh2WW1Gc0xYTndZV05wYm1jdGRXNXBkQzF6YldGc2JEdGNibjFjYmx4dUxtOHRkM0poY0hCbGNpMHRiR0Z5WjJVZ2UxeHVJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMXNZWEpuWlR0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGJHRnlaMlU3WEc1OVhHNWNiaTV2TFhkeVlYQndaWEl0TFdoMVoyVWdlMXh1SUNCd1lXUmthVzVuTFhKcFoyaDBPaUFrYVc1MWFYUXRaMnh2WW1Gc0xYTndZV05wYm1jdGRXNXBkQzFvZFdkbE8xeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklDQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMW9kV2RsTzF4dWZWeHVJaXdpTHlvZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmlBZ0lFOWlhbVZqZEhNdlYzSmhjSEJsY2x4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1TG04dGQzSmhjSEJsY2lCN1hHNGdJRzFoZUMxM2FXUjBhRHB1YjI1bE8xeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklDUjFibWwwTzF4dUlDQndZV1JrYVc1bkxYSnBaMmgwT2lBa2RXNXBkRHRjYm4xY2JseHVMbTh0ZDNKaGNIQmxjaTB0YkdGeVoyVWdlMXh1SUNCQWFXNWpiSFZrWlNCdGNTZ2tabkp2YlRwMFlXSnNaWFFwSUh0Y2JpQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQWtkVzVwZEMxc1lYSm5aVHRjYmlBZ0lDQndZV1JrYVc1bkxXeGxablE2SUNBa2RXNXBkQzFzWVhKblpUdGNiaUFnZlZ4dWZWeHVYRzR1YnkxM2NtRndjR1Z5TFMxb2RXZGxJSHRjYmlBZ1FHbHVZMngxWkdVZ2JYRW9KR1p5YjIwNmRHRmliR1YwS1NCN1hHNGdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dKSFZ1YVhRdGJHRnlaMlU3WEc0Z0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBZ0pIVnVhWFF0YkdGeVoyVTdYRzRnSUgxY2JseHVJQ0JBYVc1amJIVmtaU0J0Y1Nna1puSnZiVHBrWlhOcmRHOXdLU0I3WEc0Z0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ0pIVnVhWFF0YUhWblpUdGNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJQ0FrZFc1cGRDMW9kV2RsTzF4dUlDQjlYRzU5WEc1Y2JpNXZMWGR5WVhCd1pYSXRMV1pzZFhOb0xXMXZZbWxzWlNCN1hHNGdJRUJwYm1Oc2RXUmxJRzF4S0NSMWJuUnBiRHAwWVdKc1pYUXBJSHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBd08xeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dNRHRjYmlBZ2ZWeHVmVnh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmlBZ0lDTk1RVmxQVlZSY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaThxS2x4dUlDb2dSM0pwWkMxc2FXdGxJR3hoZVc5MWRDQnplWE4wWlcwdVhHNGdLbHh1SUNvZ1ZHaGxJR3hoZVc5MWRDQnZZbXBsWTNRZ2NISnZkbWxrWlhNZ2RYTWdkMmwwYUNCaElHTnZiSFZ0YmkxemRIbHNaU0JzWVhsdmRYUWdjM2x6ZEdWdExpQlVhR2x6SUdacGJHVmNiaUFxSUdOdmJuUmhhVzV6SUhSb1pTQmlZWE5wWXlCemRISjFZM1IxY21Gc0lHVnNaVzFsYm5SekxDQmlkWFFnWTJ4aGMzTmxjeUJ6YUc5MWJHUWdZbVVnWTI5dGNHeGxiV1Z1ZEdWa1hHNGdLaUIzYVhSb0lIZHBaSFJvSUhWMGFXeHBkR2xsY3l3Z1ptOXlJR1Y0WVcxd2JHVTZYRzRnS2x4dUlDb2dJQ0E4WkdsMklHTnNZWE56UFZ3aWJ5MXNZWGx2ZFhSY0lqNWNiaUFxSUNBZ0lDQThaR2wySUdOc1lYTnpQVndpYnkxc1lYbHZkWFJmWDJsMFpXMGdJSFV0TVM4eVhDSStYRzRnS2lBZ0lDQWdQQzlrYVhZK1hHNGdLaUFnSUNBZ1BHUnBkaUJqYkdGemN6MWNJbTh0YkdGNWIzVjBYMTlwZEdWdElDQjFMVEV2TWx3aVBseHVJQ29nSUNBZ0lEd3ZaR2wyUGx4dUlDb2dJQ0E4TDJScGRqNWNiaUFxWEc0Z0tpQlVhR1VnWVdKdmRtVWdkMmxzYkNCamNtVmhkR1VnWVNCMGQyOHRZMjlzZFcxdUlITjBjblZqZEhWeVpTQnBiaUIzYUdsamFDQmxZV05vSUdOdmJIVnRiaUIzYVd4c1hHNGdLaUJtYkhWcFpHeDVJR1pwYkd3Z2FHRnNaaUJ2WmlCMGFHVWdkMmxrZEdnZ2IyWWdkR2hsSUhCaGNtVnVkQzRnVjJVZ1kyRnVJR2hoZG1VZ2JXOXlaU0JqYjIxd2JHVjRYRzRnS2lCemVYTjBaVzF6T2x4dUlDcGNiaUFxSUNBZ1BHUnBkaUJqYkdGemN6MWNJbTh0YkdGNWIzVjBYQ0krWEc0Z0tpQWdJQ0FnUEdScGRpQmpiR0Z6Y3oxY0ltOHRiR0Y1YjNWMFgxOXBkR1Z0SUNCMUxURXZNU0FnZFMweEx6TkFiV1ZrYVhWdFhDSStYRzRnS2lBZ0lDQWdQQzlrYVhZK1hHNGdLaUFnSUNBZ1BHUnBkaUJqYkdGemN6MWNJbTh0YkdGNWIzVjBYMTlwZEdWdElDQjFMVEV2TWlBZ2RTMHhMek5BYldWa2FYVnRYQ0krWEc0Z0tpQWdJQ0FnUEM5a2FYWStYRzRnS2lBZ0lDQWdQR1JwZGlCamJHRnpjejFjSW04dGJHRjViM1YwWDE5cGRHVnRJQ0IxTFRFdk1pQWdkUzB4THpOQWJXVmthWFZ0WENJK1hHNGdLaUFnSUNBZ1BDOWthWFkrWEc0Z0tpQWdJRHd2WkdsMlBseHVJQ3BjYmlBcUlGUm9aU0JoWW05MlpTQjNhV3hzSUdOeVpXRjBaU0JoSUhONWMzUmxiU0JwYmlCM2FHbGphQ0IwYUdVZ1ptbHljM1FnYVhSbGJTQjNhV3hzSUdKbElERXdNQ1VnZDJsa2RHaGNiaUFxSUhWdWRHbHNJSGRsSUdWdWRHVnlJRzkxY2lCdFpXUnBkVzBnWW5KbFlXdHdiMmx1ZEN3Z2QyaGxiaUJwZENCM2FXeHNJR0psWTI5dFpTQXpNeTR6TXpNbElIZHBaSFJvTGlCVWFHVmNiaUFxSUhObFkyOXVaQ0JoYm1RZ2RHaHBjbVFnYVhSbGJYTWdkMmxzYkNCaVpTQTFNQ1VnYjJZZ2RHaGxhWElnY0dGeVpXNTBMQ0IxYm5ScGJDQjBhR1Y1SUdGc2MyOGdZbVZqYjIxbFhHNGdLaUF6TXk0ek16TWxJSGRwWkhSb0lHRjBJSFJvWlNCdFpXUnBkVzBnWW5KbFlXdHdiMmx1ZEM1Y2JpQXFYRzRnS2lCWFpTQmpZVzRnWVd4emJ5QnRZVzVwY0hWc1lYUmxJR1Z1ZEdseVpTQnNZWGx2ZFhRZ2MzbHpkR1Z0Y3lCaWVTQmhaR1JwYm1jZ1lTQnpaWEpwWlhNZ2IyWWdiVzlrYVdacFpYSnpYRzRnS2lCMGJ5QjBhR1VnWUM1dkxXeGhlVzkxZEdBZ1lteHZZMnN1SUVadmNpQmxlR0Z0Y0d4bE9seHVJQ3BjYmlBcUlDQWdQR1JwZGlCamJHRnpjejFjSW04dGJHRjViM1YwSUNCdkxXeGhlVzkxZEMwdGNtVjJaWEp6WlZ3aVBseHVJQ3BjYmlBcUlGUm9hWE1nZDJsc2JDQnlaWFpsY25ObElIUm9aU0JrYVhOd2JHRjVaV1FnYjNKa1pYSWdiMllnZEdobElITjVjM1JsYlNCemJ5QjBhR0YwSUdsMElISjFibk1nYVc0Z2RHaGxYRzRnS2lCdmNIQnZjMmwwWlNCdmNtUmxjaUIwYnlCdmRYSWdjMjkxY21ObExDQmxabVpsWTNScGRtVnNlU0JtYkdsd2NHbHVaeUIwYUdVZ2MzbHpkR1Z0SUc5MlpYSXVYRzRnS2x4dUlDb2dJQ0E4WkdsMklHTnNZWE56UFZ3aWJ5MXNZWGx2ZFhRZ0lHOHRiR0Y1YjNWMExTMWJjbWxuYUhSOFkyVnVkR1Z5WFZ3aVBseHVJQ3BjYmlBcUlGUm9hWE1nZDJsc2JDQmpZWFZ6WlNCMGFHVWdjM2x6ZEdWdElIUnZJR1pwYkd3Z2RYQWdabkp2YlNCbGFYUm9aWElnZEdobElHTmxiblJ5WlNCdmNpQjBhR1VnY21sbmFIUmNiaUFxSUdoaGJtUWdjMmxrWlM0Z1JHVm1ZWFZzZENCaVpXaGhkbWx2ZFhJZ2FYTWdkRzhnWm1sc2JDQjFjQ0IwYUdVZ2JHRjViM1YwSUhONWMzUmxiU0JtY205dElIUm9aU0JzWldaMExseHVJQ3BjYmlBcUlGUm9aWEpsSUdGeVpTQndiR1Z1ZEhrZ2JXOXlaU0J2Y0hScGIyNXpJR0YyWVdsc1lXSnNaU0IwYnlCMWN6b2daWGh3Ykc5eVpTQjBhR1Z0SUdKbGJHOTNMbHh1SUNvdlhHNWNiaTh2SUVKNUlHUmxabUYxYkhRZ2QyVWdkWE5sSUhSb1pTQmdabTl1ZEMxemFYcGxPaUF3TzJBZ2RISnBZMnNnZEc4Z2NtVnRiM1psSUhkb2FYUmxjM0JoWTJVZ1ltVjBkMlZsYmx4dUx5OGdhWFJsYlhNdUlGTmxkQ0IwYUdseklIUnZJSFJ5ZFdVZ2FXNGdiM0prWlhJZ2RHOGdkWE5sSUdFZ2JXRnlhM1Z3TFdKaGMyVmtJSE4wY21GMFpXZDVJR3hwYTJWY2JpOHZJR052YlcxbGJuUnBibWNnYjNWMElIZG9hWFJsYzNCaFkyVWdiM0lnYldsdWFXWjVhVzVuSUVoVVRVd3VYRzRrYVc1MWFYUXRkWE5sTFcxaGNtdDFjQzFtYVhnNklHWmhiSE5sSUNGa1pXWmhkV3gwTzF4dVhHNWNibHh1WEc1Y2JpOHFJRVJsWm1GMWJIUXZiV0Z1WkdGMGIzSjVJR05zWVhOelpYTXVYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSURFdUlFRnNiRzkzY3lCMWN5QjBieUIxYzJVZ2RHaGxJR3hoZVc5MWRDQnZZbXBsWTNRZ2IyNGdZVzU1SUhSNWNHVWdiMllnWld4bGJXVnVkQzVjYmlBcUlESXVJRmRsSUc1bFpXUWdkRzhnWkdWbVpXNXphWFpsYkhrZ2NtVnpaWFFnWVc1NUlHSnZlQzF0YjJSbGJDQndjbTl3WlhKMGFXVnpMbHh1SUNvZ015NGdWWE5sSUhSb1pTQnVaV2RoZEdsMlpTQnRZWEpuYVc0Z2RISnBZMnNnWm05eUlHMTFiSFJwTFhKdmR5Qm5jbWxrY3pwY2JpQXFJQ0FnSUdoMGRIQTZMeTlqYzNOM2FYcGhjbVJ5ZVM1amIyMHZNakF4TVM4d09DOWlkV2xzWkdsdVp5MWlaWFIwWlhJdFozSnBaQzF6ZVhOMFpXMXpMMXh1SUNvdlhHNWNiaTV2TFd4aGVXOTFkQ0I3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yT3lBdktpQmJNVjBnS2k5Y2JpQWdiV0Z5WjJsdU9pQWdNRHNnTHlvZ1d6SmRJQ292WEc0Z0lIQmhaR1JwYm1jNklEQTdJQzhxSUZzeVhTQXFMMXh1SUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsT3lBdktpQmJNVjBnS2k5Y2JpQWdiV0Z5WjJsdUxXeGxablE2SUMwa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZERzZ0x5b2dXek5kSUNvdlhHNWNiaUFnUUdsbUlDZ2thVzUxYVhRdGRYTmxMVzFoY210MWNDMW1hWGdnUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURBN1hHNGdJSDFjYmx4dWZWeHVYRzVjYmlBZ0x5b3FYRzRnSUNBcUlERXVJRkpsY1hWcGNtVmtJR2x1SUc5eVpHVnlJSFJ2SUdOdmJXSnBibVVnWm14MWFXUWdkMmxrZEdoeklIZHBkR2dnWm1sNFpXUWdaM1YwZEdWeWN5NWNiaUFnSUNvZ01pNGdRV3hzYjNkeklIVnpJSFJ2SUcxaGJtbHdkV3hoZEdVZ1ozSnBaSE1nZG1WeWRHbGpZV3hzZVN3Z2QybDBhQ0IwWlhoMExXeGxkbVZzSUhCeWIzQmxjblJwWlhNc1hHNGdJQ0FxSUNBZ0lHVjBZeTVjYmlBZ0lDb2dNeTRnUkdWbVlYVnNkQ0JwZEdWdElHRnNhV2R1YldWdWRDQnBjeUIzYVhSb0lIUm9aU0IwYjNCeklHOW1JR1ZoWTJnZ2IzUm9aWElzSUd4cGEyVWdiVzl6ZEZ4dUlDQWdLaUFnSUNCMGNtRmthWFJwYjI1aGJDQm5jbWxrTDJ4aGVXOTFkQ0J6ZVhOMFpXMXpMbHh1SUNBZ0tpQTBMaUJDZVNCa1pXWmhkV3gwTENCaGJHd2diR0Y1YjNWMElHbDBaVzF6SUdGeVpTQm1kV3hzTFhkcFpIUm9JQ2h0YjJKcGJHVWdabWx5YzNRcExseHVJQ0FnS2lBMUxpQkhkWFIwWlhKeklIQnliM1pwWkdWa0lHSjVJR3hsWm5RZ2NHRmtaR2x1WnpwY2JpQWdJQ29nSUNBZ2FIUjBjRG92TDJOemMzZHBlbUZ5WkhKNUxtTnZiUzh5TURFeEx6QTRMMkoxYVd4a2FXNW5MV0psZEhSbGNpMW5jbWxrTFhONWMzUmxiWE12WEc0Z0lDQXFJRFl1SUVaaGJHeGlZV05ySUdadmNpQnZiR1FnU1VWeklHNXZkQ0J6ZFhCd2IzSjBhVzVuSUdCeVpXMWdJSFpoYkhWbGN5NWNiaUFnSUNvdlhHNWNiaUFnTG04dGJHRjViM1YwWDE5cGRHVnRJSHRjYmlBZ0lDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0T3lBdktpQmJNVjBnS2k5Y2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN0lDOHFJRnN5WFNBcUwxeHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUIwYjNBN0lDOHFJRnN6WFNBcUwxeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE95QXZLaUJiTkYwZ0tpOWNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBPeUF2S2lCYk5WMGdLaTljYmx4dUlDQWdJRUJwWmlBb0pHbHVkV2wwTFhWelpTMXRZWEpyZFhBdFptbDRJRDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SUNScGJuVnBkQzFuYkc5aVlXd3RabTl1ZEMxemFYcGxPeUF2S2lCYk5sMGdLaTljYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVhKbGJUdGNiaUFnSUNCOVhHNWNiaUFnZlZ4dVhHNWNibHh1WEc1Y2JpOHFJRWQxZEhSbGNpQnphWHBsSUcxdlpHbG1hV1Z5Y3k1Y2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaTV2TFd4aGVXOTFkQzB0Wm14MWMyZ2dlMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dNRHRjYmx4dUlDQStJQzV2TFd4aGVXOTFkRjlmYVhSbGJTQjdYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF3TzF4dUlDQjlYRzVjYm4xY2JseHVYRzR1Ynkxc1lYbHZkWFF0TFhScGJua2dlMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dMU1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMWFJwYm5rN1hHNWNiaUFnUGlBdWJ5MXNZWGx2ZFhSZlgybDBaVzBnZTF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGRHbHVlVHRjYmlBZ2ZWeHVYRzU5WEc1Y2JseHVMbTh0YkdGNWIzVjBMUzF6YldGc2JDQjdYRzRnSUcxaGNtZHBiaTFzWldaME9pQXRKR2x1ZFdsMExXZHNiMkpoYkMxemNHRmphVzVuTFhWdWFYUXRjMjFoYkd3N1hHNWNiaUFnUGlBdWJ5MXNZWGx2ZFhSZlgybDBaVzBnZTF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGMyMWhiR3c3WEc0Z0lIMWNibHh1ZlZ4dVhHNWNiaTV2TFd4aGVXOTFkQzB0YkdGeVoyVWdlMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dMU1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMV3hoY21kbE8xeHVYRzRnSUQ0Z0xtOHRiR0Y1YjNWMFgxOXBkR1Z0SUh0Y2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklDUnBiblZwZEMxbmJHOWlZV3d0YzNCaFkybHVaeTExYm1sMExXeGhjbWRsTzF4dUlDQjlYRzVjYm4xY2JseHVYRzR1Ynkxc1lYbHZkWFF0TFdoMVoyVWdlMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dMU1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMV2gxWjJVN1hHNWNiaUFnUGlBdWJ5MXNZWGx2ZFhSZlgybDBaVzBnZTF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGFIVm5aVHRjYmlBZ2ZWeHVYRzU5WEc1Y2JseHVYRzVjYmk4cUlGWmxjblJwWTJGc0lHRnNhV2R1YldWdWRDQnRiMlJwWm1sbGNuTXVYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUVGc2FXZHVJR0ZzYkNCbmNtbGtJR2wwWlcxeklIUnZJSFJvWlNCdGFXUmtiR1Z6SUc5bUlHVmhZMmdnYjNSb1pYSXVYRzRnS2k5Y2JseHVMbTh0YkdGNWIzVjBMUzF0YVdSa2JHVWdlMXh1WEc0Z0lENGdMbTh0YkdGNWIzVjBYMTlwZEdWdElIdGNiaUFnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh1SUNCOVhHNWNibjFjYmx4dVhHNHZLaXBjYmlBcUlFRnNhV2R1SUdGc2JDQm5jbWxrSUdsMFpXMXpJSFJ2SUhSb1pTQmliM1IwYjIxeklHOW1JR1ZoWTJnZ2IzUm9aWEl1WEc0Z0tpOWNibHh1TG04dGJHRjViM1YwTFMxaWIzUjBiMjBnZTF4dVhHNGdJRDRnTG04dGJHRjViM1YwWDE5cGRHVnRJSHRjYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltOTBkRzl0TzF4dUlDQjlYRzVjYm4xY2JseHVYRzR2S2lwY2JpQXFJRk4wY21WMFkyZ2dZV3hzSUdkeWFXUWdhWFJsYlhNZ2IyWWdaV0ZqYUNCeWIzY2dkRzhnYUdGMlpTQmhiaUJsY1hWaGJDMW9aV2xuYUhRdVhHNGdLaUJRYkdWaGMyVWdZbVVnWVhkaGNtVWdkR2hoZENCMGFHbHpJRzF2WkdsbWFXVnlJR05zWVhOeklHUnZaWE51SjNRZ2RHRnJaU0JoYm5rZ1pXWm1aV04wSUdsdUlFbEZPU0JoYm1SY2JpQXFJR0psYkc5M0lHRnVaQ0J2ZEdobGNpQnZiR1JsY2lCaWNtOTNjMlZ5Y3lCa2RXVWdkRzhnZEdobElHeGhZMnNnYjJZZ1lHUnBjM0JzWVhrNklHWnNaWGhnSUhOMWNIQnZjblF1WEc0Z0tpOWNibHh1TG04dGJHRjViM1YwTFMxemRISmxkR05vSUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVYRzRnSUQ0Z0xtOHRiR0Y1YjNWMFgxOXBkR1Z0SUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0I5WEc1Y2JuMWNibHh1WEc1Y2JseHVYRzR2S2lCR2FXeHNJRzl5WkdWeUlHMXZaR2xtYVdWeWN5NWNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nUm1sc2JDQjFjQ0IwYUdVZ2JHRjViM1YwSUhONWMzUmxiU0JtY205dElIUm9aU0JqWlc1MGNtVXVYRzRnS2k5Y2JseHVMbTh0YkdGNWIzVjBMUzFqWlc1MFpYSWdlMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNWNiaUFnUGlBdWJ5MXNZWGx2ZFhSZlgybDBaVzBnZTF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUd4bFpuUTdYRzRnSUgxY2JseHVmVnh1WEc1Y2JpOHFLbHh1SUNvZ1JtbHNiQ0IxY0NCMGFHVWdiR0Y1YjNWMElITjVjM1JsYlNCbWNtOXRJSFJvWlNCeWFXZG9kQzFvWVc1a0lITnBaR1V1WEc0Z0tpOWNibHh1TG04dGJHRjViM1YwTFMxeWFXZG9kQ0I3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJSEpwWjJoME8xeHVYRzRnSUQ0Z0xtOHRiR0Y1YjNWMFgxOXBkR1Z0SUh0Y2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1SUNCOVhHNWNibjFjYmx4dVhHNHZLaXBjYmlBcUlFWnBiR3dnZFhBZ2RHaGxJR3hoZVc5MWRDQnplWE4wWlcwZ1puSnZiU0IwYUdVZ2JHVm1kQzFvWVc1a0lITnBaR1V1SUZSb2FYTWdkMmxzYkNCc2FXdGxiSGtnYjI1c2VTQmlaVnh1SUNvZ2JtVmxaR1ZrSUhkb1pXNGdkWE5wYm1jZ2FXNGdZMjl1YW5WdVkzUnBiMjRnZDJsMGFDQmdMbTh0YkdGNWIzVjBMUzF5WlhabGNuTmxZQzVjYmlBcUwxeHVYRzR1Ynkxc1lYbHZkWFF0TFd4bFpuUWdlMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owTzF4dVhHNGdJRDRnTG04dGJHRjViM1YwWDE5cGRHVnRJSHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJzWldaME8xeHVJQ0I5WEc1Y2JuMWNibHh1WEc0dktpcGNiaUFxSUZKbGRtVnljMlVnZEdobElISmxibVJsY21Wa0lHOXlaR1Z5SUc5bUlIUm9aU0JuY21sa0lITjVjM1JsYlM1Y2JpQXFMMXh1WEc0dWJ5MXNZWGx2ZFhRdExYSmxkbVZ5YzJVZ2UxeHVJQ0JrYVhKbFkzUnBiMjQ2SUhKMGJEdGNibHh1SUNBK0lDNXZMV3hoZVc5MWRGOWZhWFJsYlNCN1hHNGdJQ0FnWkdseVpXTjBhVzl1T2lCc2RISTdYRzRnSUgxY2JseHVmVnh1WEc1Y2JseHVYRzVjYmk4cUlFRjFkRzh0ZDJsa2RHaHpJRzF2WkdsbWFXVnlMbHh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lCRFlYVnpaU0JzWVhsdmRYUWdhWFJsYlhNZ2RHOGdkR0ZyWlNCMWNDQmhJRzV2YmkxbGVIQnNhV05wZENCaGJXOTFiblFnYjJZZ2QybGtkR2d1WEc0Z0tpOWNibHh1TG04dGJHRjViM1YwTFMxaGRYUnZJSHRjYmx4dUlDQStJQzV2TFd4aGVXOTFkRjlmYVhSbGJTQjdYRzRnSUNBZ2QybGtkR2c2SUdGMWRHODdYRzRnSUgxY2JseHVmVnh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJRTlpYW1WamRITXZWM0poY0hCbGNseHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUxtOHRiR0Y1YjNWMExTMWxjWFZoYkMxb1pXbG5hSFFnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVmVnh1WEc0dWJ5MXNZWGx2ZFhSZlgybDBaVzBnZTF4dUlDQXVieTFzWVhsdmRYUXRMV1Z4ZFdGc0xXaGxhV2RvZENBbUlIdGNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCOVhHNTlYRzVjYmk1dkxXeGhlVzkxZEMwdGJXbGtaR3hsSUh0Y2JpQWdMbTh0YkdGNWIzVjBMUzFsY1hWaGJDMW9aV2xuYUhRZ2UxeHVJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSDFjYm4xY2JseHVMbTh0YkdGNWIzVjBMUzFpYjNSMGIyMGdlMXh1SUNBdWJ5MXNZWGx2ZFhRdExXVnhkV0ZzTFdobGFXZG9kQ0I3WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdac1pYZ3RaVzVrTzF4dUlDQjlYRzU5WEc1Y2JpNXZMV3hoZVc5MWRDMHRjbWxuYUhRZ2UxeHVJQ0F1Ynkxc1lYbHZkWFF0TFdWeGRXRnNMV2hsYVdkb2RDQjdYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCbWJHVjRMV1Z1WkR0Y2JpQWdmVnh1ZlZ4dVhHNHVieTFzWVhsdmRYUXRMV05sYm5SbGNpQjdYRzRnSUM1dkxXeGhlVzkxZEMwdFpYRjFZV3d0YUdWcFoyaDBJSHRjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdmVnh1ZlZ4dUlpd2lMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJQ05OUlVSSlFWeHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THlvcVhHNGdLaUJRYkdGalpTQmhibmtnYVcxaFoyVXRJR0Z1WkNCMFpYaDBMV3hwYTJVZ1kyOXVkR1Z1ZENCemFXUmxMV0o1TFhOcFpHVXNJR0Z6SUhCbGNqcGNiaUFxSUdoMGRIQTZMeTkzZDNjdWMzUjFZbUp2Y201bGJHeGhMbTl5Wnk5amIyNTBaVzUwTHpJd01UQXZNRFl2TWpVdmRHaGxMVzFsWkdsaExXOWlhbVZqZEMxellYWmxjeTFvZFc1a2NtVmtjeTF2Wmkxc2FXNWxjeTF2WmkxamIyUmxYRzRnS2k5Y2JseHVMbTh0YldWa2FXRWdlMXh1SUNCQWFXNWpiSFZrWlNCcGJuVnBkQzFqYkdWaGNtWnBlQ2dwTzF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JuMWNibHh1WEc0Z0lDNXZMVzFsWkdsaFgxOXBiV2NnZTF4dUlDQWdJR1pzYjJGME9pQnNaV1owTzF4dUlDQWdJRzFoY21kcGJpMXlhV2RvZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRN1hHNWNiaUFnSUNBK0lHbHRaeUI3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCOVhHNWNiaUFnZlZ4dVhHNWNiaUFnTG04dGJXVmthV0ZmWDJKdlpIa2dlMXh1SUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzVjYmlBZ0lDQW1MRnh1SUNBZ0lENGdPbXhoYzNRdFkyaHBiR1FnZTF4dUlDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNRHRjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVYRzVjYmx4dVhHNWNiaThxSUZOcGVtVWdkbUZ5YVdGdWRITXVYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUUxdlpHbG1lU0IwYUdVZ1lXMXZkVzUwSUc5bUlITndZV05sSUdKbGRIZGxaVzRnYjNWeUlHbHRZV2RsSUdGdVpDQnZkWElnZEdWNGRDNGdWMlVnWVd4emJ5Qm9ZWFpsWEc0Z0tpQnlaWFpsY25OcFlteGxJRzl3ZEdsdmJuTWdabTl5SUdGc2JDQmhkbUZwYkdGaWJHVWdjMmw2WlhNdVhHNGdLaTljYmx4dVhHNHZLaUJIZFhSMFpYSnNaWE56SUcxbFpHbGhJRzlpYW1WamRITXVYRzRnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk1dkxXMWxaR2xoTFMxbWJIVnphQ0I3WEc1Y2JpQWdQaUF1YnkxdFpXUnBZVjlmYVcxbklIdGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREE3WEc0Z0lDQWdiV0Z5WjJsdUxXeGxablE2SURBN1hHNGdmVnh1WEc1OVhHNWNibHh1TG04dGJXVmthV0V0TFhScGJua2dlMXh1WEc0Z0lENGdMbTh0YldWa2FXRmZYMmx0WnlCN1hHNGdJQ0FnYldGeVoybHVMWEpwWjJoME9pQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMTBhVzU1TzF4dUlDQjlYRzVjYmlBZ0ppNXZMVzFsWkdsaExTMXlaWFpsY25ObElIdGNibHh1SUNBZ0lENGdMbTh0YldWa2FXRmZYMmx0WnlCN1hHNGdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREE3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGRHbHVlVHRjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVYRzU5WEc1Y2JseHVMbTh0YldWa2FXRXRMWE50WVd4c0lIdGNibHh1SUNBK0lDNXZMVzFsWkdsaFgxOXBiV2NnZTF4dUlDQWdJRzFoY21kcGJpMXlhV2RvZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGMyMWhiR3c3WEc0Z0lIMWNibHh1SUNBbUxtOHRiV1ZrYVdFdExYSmxkbVZ5YzJVZ2UxeHVYRzRnSUNBZ1BpQXVieTF0WldScFlWOWZhVzFuSUh0Y2JpQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNRHRjYmlBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZEMxemJXRnNiRHRjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVYRzU5WEc1Y2JseHVMbTh0YldWa2FXRXRMV3hoY21kbElIdGNibHh1SUNBK0lDNXZMVzFsWkdsaFgxOXBiV2NnZTF4dUlDQWdJRzFoY21kcGJpMXlhV2RvZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGJHRnlaMlU3WEc0Z0lIMWNibHh1SUNBbUxtOHRiV1ZrYVdFdExYSmxkbVZ5YzJVZ2UxeHVYRzRnSUNBZ1BpQXVieTF0WldScFlWOWZhVzFuSUh0Y2JpQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNRHRjYmlBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZEMxc1lYSm5aVHRjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVYRzU5WEc1Y2JseHVMbTh0YldWa2FXRXRMV2gxWjJVZ2UxeHVYRzRnSUQ0Z0xtOHRiV1ZrYVdGZlgybHRaeUI3WEc0Z0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZEMxb2RXZGxPMXh1SUNCOVhHNWNiaUFnSmk1dkxXMWxaR2xoTFMxeVpYWmxjbk5sSUh0Y2JseHVJQ0FnSUQ0Z0xtOHRiV1ZrYVdGZlgybHRaeUI3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklEQTdYRzRnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nSkdsdWRXbDBMV2RzYjJKaGJDMXpjR0ZqYVc1bkxYVnVhWFF0YUhWblpUdGNiaUFnSUNCOVhHNWNiaUFnZlZ4dVhHNTlYRzVjYmx4dVhHNHZLaUJTWlhabGNuTmxaQ0J0WldScFlTQnZZbXBsWTNSekxseHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1TG04dGJXVmthV0V0TFhKbGRtVnljMlVnZTF4dVhHNGdJRDRnTG04dGJXVmthV0ZmWDJsdFp5QjdYRzRnSUNBZ1pteHZZWFE2SUhKcFoyaDBPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUR0Y2JpQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRN1hHNGdJSDFjYmx4dWZWeHVJaXdpTHlvZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUNOR1RFRkhYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUZSb1pTQm1iR0ZuSUc5aWFtVmpkQ0JwY3lCaElHUmxjMmxuYmlCd1lYUjBaWEp1SUhOcGJXbHNZWElnZEc4Z2RHaGxJRzFsWkdsaElHOWlhbVZqZEN3Z2FHOTNaWFpsY2lCcGRGeHVJQ29nZFhScGJHbHpaWE1nWUdScGMzQnNZWGs2SUhSaFlteGxXeTFqWld4c1hUdGdJSFJ2SUdkcGRtVWdkWE1nWTI5dWRISnZiQ0J2ZG1WeUlIUm9aU0IyWlhKMGFXTmhiRnh1SUNvZ1lXeHBaMjV0Wlc1MGN5QnZaaUIwYUdVZ2RHVjRkQ0JoYm1RZ2FXMWhaMlV1WEc0Z0tseHVJQ29nYUhSMGNEb3ZMMk56YzNkcGVtRnlaSEo1TG1OdmJTOHlNREV6THpBMUwzUm9aUzFtYkdGbkxXOWlhbVZqZEM5Y2JpQXFYRzRnS2lBeExpQkJiR3h2ZDNNZ2RYTWdkRzhnWTI5dWRISnZiQ0IyWlhKMGFXTmhiQ0JoYkdsbmJtMWxiblJ6TGx4dUlDb2dNaTRnUm05eVkyVWdkR2hsSUc5aWFtVmpkQ0IwYnlCaVpTQjBhR1VnWm5Wc2JDQjNhV1IwYUNCdlppQnBkSE1nY0dGeVpXNTBMaUJEYjIxaWFXNWxaQ0IzYVhSb0lGc3hYU3hjYmlBcUlDQWdJSFJvYVhNZ2JXRnJaWE1nZEdobElHOWlhbVZqZENCaVpXaGhkbVVnYVc0Z1lTQnhkV0Z6YVMxZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WUNCdFlXNXVaWEl1WEc0Z0tpQXpMaUJTWlhObGRDQnBibWhsY21sMFpXUWdZR0p2Y21SbGNpMXpjR0ZqYVc1bllDQmtaV05zWVhKaGRHbHZibk11WEc0Z0tpOWNibHh1TG04dFpteGhaeUI3WEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsT3lBdktpQmJNVjBnS2k5Y2JpQWdkMmxrZEdnNklERXdNQ1U3SUM4cUlGc3lYU0FxTDF4dUlDQmliM0prWlhJdGMzQmhZMmx1WnpvZ01Ec2dMeW9nV3pOZElDb3ZYRzU5WEc1Y2JseHVJQ0F2S2lwY2JpQWdJQ29nU1hSbGJYTWdkMmwwYUdsdUlHRWdabXhoWnlCdlltcGxZM1F1SUZSb1pYSmxJSE5vYjNWc1pDQnZibXg1SUdWMlpYSWdZbVVnYjI1bElHOW1JR1ZoWTJndVhHNGdJQ0FxWEc0Z0lDQXFJREV1SUVSbFptRjFiSFFnZEc4Z1lXeHBaMjVwYm1jZ1kyOXVkR1Z1ZENCMGJ5QjBhR1ZwY2lCdGFXUmtiR1Z6TGx4dUlDQWdLaTljYmx4dUlDQXVieTFtYkdGblgxOXBiV2NzWEc0Z0lDNXZMV1pzWVdkZlgySnZaSGtnZTF4dUlDQWdJR1JwYzNCc1lYazZJSFJoWW14bExXTmxiR3c3WEc0Z0lDQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHMXBaR1JzWlRzZ0x5b2dXekZkSUNvdlhHNGdJSDFjYmx4dVhHNGdJQzhxS2x4dUlDQWdLaUJHYkdGbklHbHRZV2RsY3lCb1lYWmxJR0VnYzNCaFkyVWdZbVYwZDJWbGJpQjBhR1Z0SUdGdVpDQjBhR1VnWW05a2VTQnZaaUIwYUdVZ2IySnFaV04wTGx4dUlDQWdLbHh1SUNBZ0tpQXhMaUJHYjNKalpTQmdMbVpzWVdkZlgybHRaMkFnZEc4Z2RHRnJaU0IxY0NCaGN5QnNhWFIwYkdVZ2MzQmhZMlVnWVhNZ2NHOXpjMmxpYkdVNlhHNGdJQ0FxSUNBZ0lHaDBkSEJ6T2k4dmNHbDRaV3h6ZG5OaWVYUmxjeTVqYjIwdk1qQXhNaTh3TWk5MGFHbHpMV056Y3kxc1lYbHZkWFF0WjNKcFpDMXBjeTF1Ynkxb2IyeDVMV2R5WVdsc0wxeHVJQ0FnS2k5Y2JseHVJQ0F1YnkxbWJHRm5YMTlwYldjZ2UxeHVJQ0FnSUhkcFpIUm9PaUF4Y0hnN0lDOHFJRnN4WFNBcUwxeHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBPMXh1WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lBeExpQkdhWGhsY3lCd2NtOWliR1Z0SUhkcGRHZ2dhVzFoWjJWeklHUnBjMkZ3Y0dWaGNtbHVaeTVjYmlBZ0lDQWdLaTljYmx4dUlDQWdJRDRnYVcxbklIdGNiaUFnSUNBZ0lHMWhlQzEzYVdSMGFEb2dibTl1WlRzZ0x5b2dXekZkSUNvdlhHNGdJQ0FnZlZ4dVhHNGdJSDFjYmx4dVhHNGdJQzhxS2x4dUlDQWdLaUJVYUdVZ1kyOXVkR0ZwYm1WeUlHWnZjaUIwYUdVZ2JXRnBiaUJqYjI1MFpXNTBJRzltSUhSb1pTQm1iR0ZuSUc5aWFtVmpkQzVjYmlBZ0lDcGNiaUFnSUNvZ01TNGdSbTl5WTJWeklIUm9aU0JnTG1ac1lXZGZYMkp2WkhsZ0lIUnZJSFJoYTJVZ2RYQWdZV3hzSUhKbGJXRnBibWx1WnlCemNHRmpaUzVjYmlBZ0lDb3ZYRzVjYmlBZ0xtOHRabXhoWjE5ZlltOWtlU0I3WEc0Z0lDQWdkMmxrZEdnNklHRjFkRzg3SUM4cUlGc3hYU0FxTDF4dVhHNGdJQ0FnSml4Y2JpQWdJQ0ErSURwc1lYTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURBN1hHNGdJQ0FnZlZ4dVhHNGdJSDFjYmx4dVhHNWNibHh1WEc0dktpQlRhWHBsSUhaaGNtbGhiblJ6TGx4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMbTh0Wm14aFp5MHRabXgxYzJnZ2UxeHVYRzRnSUQ0Z0xtOHRabXhoWjE5ZmFXMW5JSHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBd08xeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dJREE3WEc0Z0lIMWNibHh1ZlZ4dVhHNWNiaTV2TFdac1lXY3RMWFJwYm5rZ2UxeHVYRzRnSUQ0Z0xtOHRabXhoWjE5ZmFXMW5JSHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZEMxMGFXNTVPMXh1SUNCOVhHNWNiaUFnSmk1dkxXWnNZV2N0TFhKbGRtVnljMlVnZTF4dVhHNGdJQ0FnUGlBdWJ5MW1iR0ZuWDE5cGJXY2dlMXh1SUNBZ0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ01EdGNiaUFnSUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nSkdsdWRXbDBMV2RzYjJKaGJDMXpjR0ZqYVc1bkxYVnVhWFF0ZEdsdWVUdGNiaUFnSUNCOVhHNWNiaUFnZlZ4dVhHNTlYRzVjYmx4dUxtOHRabXhoWnkwdGMyMWhiR3dnZTF4dVhHNGdJRDRnTG04dFpteGhaMTlmYVcxbklIdGNiaUFnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUFrYVc1MWFYUXRaMnh2WW1Gc0xYTndZV05wYm1jdGRXNXBkQzF6YldGc2JEdGNiaUFnZlZ4dVhHNGdJQ1l1YnkxbWJHRm5MUzF5WlhabGNuTmxJSHRjYmx4dUlDQWdJRDRnTG04dFpteGhaMTlmYVcxbklIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURBN1hHNGdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMWE50WVd4c08xeHVJQ0FnSUgxY2JseHVJQ0I5WEc1Y2JuMWNibHh1WEc0dWJ5MW1iR0ZuTFMxc1lYSm5aU0I3WEc1Y2JpQWdQaUF1YnkxbWJHRm5YMTlwYldjZ2UxeHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMV3hoY21kbE8xeHVJQ0I5WEc1Y2JpQWdKaTV2TFdac1lXY3RMWEpsZG1WeWMyVWdlMXh1WEc0Z0lDQWdQaUF1YnkxbWJHRm5YMTlwYldjZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTUR0Y2JpQWdJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dKR2x1ZFdsMExXZHNiMkpoYkMxemNHRmphVzVuTFhWdWFYUXRiR0Z5WjJVN1hHNGdJQ0FnZlZ4dVhHNGdJSDFjYmx4dWZWeHVYRzVjYmk1dkxXWnNZV2N0TFdoMVoyVWdlMXh1WEc0Z0lENGdMbTh0Wm14aFoxOWZhVzFuSUh0Y2JpQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMW9kV2RsTzF4dUlDQjlYRzVjYmlBZ0ppNXZMV1pzWVdjdExYSmxkbVZ5YzJVZ2UxeHVYRzRnSUNBZ1BpQXVieTFtYkdGblgxOXBiV2NnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dNRHRjYmlBZ0lDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGFIVm5aVHRjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVYRzU5WEc1Y2JseHVYRzVjYmk4cUlGSmxkbVZ5YzJWa0lHWnNZV2N1WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlERXVJRk4zWVhBZ2RHaGxJSEpsYm1SbGNtVmtJR1JwY21WamRHbHZiaUJ2WmlCMGFHVWdiMkpxWldOMDRvQ21YRzRnS2lBeUxpRGlnS1poYm1RZ2NtVnpaWFFnYVhRdVhHNGdLaUF6TGlCU1pXRnpjMmxuYmlCdFlYSm5hVzV6SUhSdklIUm9aU0JqYjNKeVpXTjBJSE5wWkdWekxseHVJQ292WEc1Y2JpNXZMV1pzWVdjdExYSmxkbVZ5YzJVZ2UxeHVJQ0JrYVhKbFkzUnBiMjQ2SUhKMGJEc2dMeW9nV3pGZElDb3ZYRzVjYmlBZ1BpQXVieTFtYkdGblgxOXBiV2NzWEc0Z0lENGdMbTh0Wm14aFoxOWZZbTlrZVNCN1hHNGdJQ0FnWkdseVpXTjBhVzl1T2lCc2RISTdJQzhxSUZzeVhTQXFMMXh1SUNCOVhHNWNiaUFnUGlBdWJ5MW1iR0ZuWDE5cGJXY2dlMXh1SUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURBN0lDOHFJRnN6WFNBcUwxeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dKR2x1ZFdsMExXZHNiMkpoYkMxemNHRmphVzVuTFhWdWFYUTdJQzhxSUZzelhTQXFMMXh1SUNCOVhHNWNibjFjYmx4dVhHNWNibHh1WEc0dktpQkJiR2xuYm0xbGJuUWdkbUZ5YVdGdWRITXVYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUZabGNuUnBZMkZzYkhrZ1lXeHBaMjRnZEdobElHbHRZV2RsTFNCaGJtUWdZbTlrZVMxamIyNTBaVzUwSUdScFptWmxjbVZ1ZEd4NUxpQkVaV1poZFd4MGN5QjBieUJ0YVdSa2JHVXVYRzRnS2k5Y2JseHVMbTh0Wm14aFp5MHRkRzl3SUh0Y2JseHVJQ0ErSUM1dkxXWnNZV2RmWDJsdFp5eGNiaUFnUGlBdWJ5MW1iR0ZuWDE5aWIyUjVJSHRjYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2RHOXdPMXh1SUNCOVhHNWNibjFjYmx4dVhHNHVieTFtYkdGbkxTMWliM1IwYjIwZ2UxeHVYRzRnSUQ0Z0xtOHRabXhoWjE5ZmFXMW5MRnh1SUNBK0lDNXZMV1pzWVdkZlgySnZaSGtnZTF4dUlDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQmliM1IwYjIwN1hHNGdJSDFjYmx4dWZWeHVJaXdpTHlvZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUNOTVNWTlVMVUpCVWtWY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaThxS2x4dUlDb2dVM1J5YVhBZ2JHbHpkQzFzYVd0bElHRndjR1ZoY21GdVkyVWdabkp2YlNCc2FYTjBjeUJpZVNCeVpXMXZkbWx1WnlCMGFHVnBjaUJpZFd4c1pYUnpMQ0JoYm1RZ1lXNTVYRzRnS2lCcGJtUmxiblJoZEdsdmJpNWNiaUFxWEc0Z0tpQk9iM1JsT2lCRVpXTnNZWEpwYm1jZ2RHaGxJR2wwWlcwdFkyeGhjM01nYldsbmFIUWdibTkwSUdKbElHNWxZMlZ6YzJGeWVTQmxkbVZ5ZVhkb1pYSmxJR0oxZEZ4dUlDb2dhWE1nWm05eUlHVjRZVzF3YkdVZ2FXNGdQR1JzUGlCc2FYTjBjeUJtYjNJZ2RHaGxJRHhrWkQ0Z1kyaHBiR1J6TGx4dUlDb3ZYRzVjYmk1dkxXeHBjM1F0WW1GeVpTQjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc0Z0lHMWhjbWRwYmkxc1pXWjBPaUF3TzF4dWZWeHVYRzVjYmlBZ0xtOHRiR2x6ZEMxaVlYSmxYMTlwZEdWdElIdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dNRHRjYmlBZ2ZWeHVJaXdpTHlvZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUNOTVNWTlVMVWxPVEVsT1JWeHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THlvcVhHNGdLaUJVYUdVZ2JHbHpkQzFwYm14cGJtVWdiMkpxWldOMElITnBiWEJzZVNCa2FYTndiR0Y1Y3lCaElHeHBjM1FnYjJZZ2FYUmxiWE1nYVc0Z2IyNWxJR3hwYm1VdVhHNGdLaTljYmx4dUxtOHRiR2x6ZEMxcGJteHBibVVnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTUR0Y2JpQWdiR2x6ZEMxemRIbHNaVG9nYm05dVpUdGNibjFjYmx4dVhHNGdJQzV2TFd4cGMzUXRhVzVzYVc1bFgxOXBkR1Z0SUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJSDFjYmlJc0lpOHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0Z0lDQWpRa3hQUTB0Y2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaThxS2x4dUlDb2dVM1JoWTJ0bFpDQnBiV0ZuWlMxM2FYUm9MWFJsZUhRZ2IySnFaV04wTGlCQklITnBiWEJzWlNCaFluTjBjbUZqZEdsdmJpQjBieUJqYjNabGNpQmhJSFpsY25rZ1kyOXRiVzl1YkhsY2JpQXFJRzlqWTNWeWNtbHVaeUJrWlhOcFoyNGdjR0YwZEdWeWJpNWNiaUFxTDF4dVhHNHVieTFpYkc5amF5QjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNTlYRzVjYmx4dUlDQXVieTFpYkc5amExOWZhVzFuSUh0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGREdGNibHh1WEc0Z0lDQWdMeW9nVTJsNlpTQjJZWEpwWVc1MGN5NWNiaUFnSUNBZ0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmlBZ0lDQXVieTFpYkc5amF5MHRabXgxYzJnZ1BpQW1JSHRjYmlBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklEQTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0xtOHRZbXh2WTJzdExYUnBibmtnUGlBbUlIdGNiaUFnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUNScGJuVnBkQzFuYkc5aVlXd3RjM0JoWTJsdVp5MTFibWwwTFhScGJuazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0xtOHRZbXh2WTJzdExYTnRZV3hzSUQ0Z0ppQjdYRzRnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZEMxemJXRnNiRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXVieTFpYkc5amF5MHRiR0Z5WjJVZ1BpQW1JSHRjYmlBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklDUnBiblZwZEMxbmJHOWlZV3d0YzNCaFkybHVaeTExYm1sMExXeGhjbWRsTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzV2TFdKc2IyTnJMUzFvZFdkbElENGdKaUI3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMW9kV2RsTzF4dUlDQWdJSDFjYmx4dUlDQjlYRzVjYmx4dUlDQXVieTFpYkc5amExOWZZbTlrZVNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUgxY2JseHVYRzVjYmx4dVhHNHZLaUJCYkdsbmJtMWxiblFnZG1GeWFXRnVkSE11WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHVieTFpYkc5amF5MHRjbWxuYUhRZ2UxeHVJQ0IwWlhoMExXRnNhV2R1T2lCeWFXZG9kRHRjYm4xY2JseHVMbTh0WW14dlkyc3RMV3hsWm5RZ2UxeHVJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1ZlZ4dUlpd2lMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUU5aWFtVmpkSE12U0dWaFpHbHVaMXh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMbTh0YUdWaFpHbHVaeUI3WEc1OVhHNGlMQ0l2S2lBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1SUNBZ1EyOXRjRzl1Wlc1MGN5OUNkWFIwYjI1elhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1TG1NdFluVjBkRzl1SUh0Y2JuMWNibHh1SUNBdVl5MWlkWFIwYjI1ZlgySjFkSFJ2YmlCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nWTI5c2IzSW9ZbXhoWTJzcE8xeHVJQ0FnSUdKdmNtUmxjam9nTTNCNElITnZiR2xrSUdOdmJHOXlLR0pzWVdOcktUdGNiaUFnSUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc0Z0lDQWdiV0Y0TFhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUc5MWRHeHBibVU2SUc1dmJtVTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ0pIVnVhWFF0YzIxaGJHd2dKSFZ1YVhRdGJHRnlaMlU3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eWN6dGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNibHh1SUNBZ0lFQnBibU5zZFdSbElHMXhLQ1JtY205dE9pQjBZV0pzWlhRcElIdGNiaUFnSUNBZ0lHMWhlQzEzYVdSMGFEb2dORGd3Y0hnN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYlhFb0pHWnliMjA2SUdSbGMydDBiM0FwSUh0Y2JpQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJSGRwWkhSb09pQnBibWhsY21sME8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNZNmFHOTJaWElnZTF4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nWTI5c2IzSW9kMmhwZEdVcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNZNmFHOTJaWElnTG1NdFluVjBkRzl1WDE5MFpYaDBMRnh1SUNBZ0lDWTZhRzkyWlhJZ0xtTXRZblYwZEc5dVgxOWhibWRzWlMxeWFXZG9kQ0I3WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dZMjlzYjNJb1lteGhZMnNwWEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnSUNBdVl5MWlkWFIwYjI1ZlgzUmxlSFFzWEc0Z0lDQWdMbU10WW5WMGRHOXVYMTloYm1kc1pTMXlhV2RvZENCN1hHNGdJQ0FnSUNCamIyeHZjam9nWTI5c2IzSW9kMmhwZEdVcE8xeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eWN6dGNiaUFnSUNCOVhHNWNiaUFnSUNBdVl5MWlkWFIwYjI1ZlgzUmxlSFFnZTF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUdadmJuUXRjMmw2WlNneE5IQjRLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXVZeTFpZFhSMGIyNWZYMkZ1WjJ4bExYSnBaMmgwSUh0Y2JpQWdJQ0FnSUcxaGNtZHBiaTFzWldaME9pQWtkVzVwZEMxemJXRnNiRHRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJSEpwWjJoME9pQWtkVzVwZEMxemJXRnNiQ0FxSURFdU5UdGNiaUFnSUNBZ0lIUnZjRG9nTlRBbE8xeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLQzAxTUNVcE8xeHVJQ0FnSUNBZ1FHbHVZMngxWkdVZ1ptOXVkQzF6YVhwbEtERTBjSGdwTzF4dUlDQWdJSDFjYmlJc0lpOHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0Z0lDQWpRMHhGUVZKR1NWaGNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nUVhSMFlXTm9JRzkxY2lCamJHVmhjbVpwZUNCdGFYaHBiaUIwYnlCaElIVjBhV3hwZEhrZ1kyeGhjM011WEc0Z0tpOWNibHh1TG5VdFkyeGxZWEptYVhnZ2UxeHVJQ0JBYVc1amJIVmtaU0JwYm5WcGRDMWpiR1ZoY21acGVDZ3BPMXh1ZlZ4dUlpd2lMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJQ05YU1VSVVNGTmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nYVc1MWFYUmpjM01nWjJWdVpYSmhkR1Z6SUdFZ2MyVnlhV1Z6SUc5bUlIVjBhV3hwZEhrZ1kyeGhjM05sY3lCMGFHRjBJR2RwZG1VZ1lTQm1iSFZwWkNCM2FXUjBhQ0IwYjF4dUlDb2dkMmhwWTJobGRtVnlJR1ZzWlcxbGJuUWdkR2hsZWVLQW1YSmxJR0Z3Y0d4cFpXUXNJR1V1Wnk0NlhHNGdLbHh1SUNvZ0lDQThhVzFuSUhOeVl6MWNJbHdpSUdGc2REMWNJbHdpSUdOc1lYTnpQVndpZFMweEx6SmNJaUF2UGx4dUlDcGNiaUFxSUZSb1pYTmxJR05zWVhOelpYTWdZWEpsSUcxdmMzUWdZMjl0Ylc5dWJIa2dkWE5sWkNCcGJpQmpiMjVxZFc1amRHbHZiaUIzYVhSb0lHOTFjaUJzWVhsdmRYUWdjM2x6ZEdWdExGeHVJQ29nWlM1bkxqcGNiaUFxWEc0Z0tpQWdJRHhrYVhZZ1kyeGhjM005WENKdkxXeGhlVzkxZEY5ZmFYUmxiU0FnZFMweEx6SmNJajVjYmlBcVhHNGdLaUJDZVNCa1pXWmhkV3gwTENCcGJuVnBkR056Y3lCM2FXeHNJR0ZzYzI4Z1oyVnVaWEpoZEdVZ2NtVnpjRzl1YzJsMlpTQjJZWEpwWVc1MGN5QnZaaUJsWVdOb0lHOW1JSFJvWlhObFhHNGdLaUJqYkdGemMyVnpJR0o1SUhWemFXNW5JSGx2ZFhJZ1UyRnpjeUJOVVNCamIyNW1hV2QxY21GMGFXOXVMQ0JsTG1jdU9seHVJQ3BjYmlBcUlDQWdQR1JwZGlCamJHRnpjejFjSW04dGJHRjViM1YwWDE5cGRHVnRJQ0IxTFRFdk1TQWdkUzB4THpKQWRHRmliR1YwSUNCMUxURXZNMEJrWlhOcmRHOXdYQ0krWEc0Z0tseHVJQ29nVDNCMGFXOXVZV3hzZVN3Z2FXNTFhWFJqYzNNZ1kyRnVJR2RsYm1WeVlYUmxJRzltWm5ObGRDQmpiR0Z6YzJWeklIZG9hV05vSUdOaGJpQndkWE5vSUdGdVpDQndkV3hzWEc0Z0tpQmxiR1Z0Wlc1MGN5QnNaV1owSUdGdVpDQnlhV2RvZENCaWVTQmhJSE53WldOcFptbGxaQ0JoYlc5MWJuUXNJR1V1Wnk0NlhHNGdLbHh1SUNvZ0lDQThaR2wySUdOc1lYTnpQVndpYnkxc1lYbHZkWFJmWDJsMFpXMGdJSFV0TWk4eklDQjFMWEIxYkd3dE1TOHpYQ0krWEc0Z0tseHVJQ29nVkdocGN5QnBjeUIxYzJWbWRXd2dabTl5SUcxaGEybHVaeUIyWlhKNUlHZHlZVzUxYkdGeUlHTm9ZVzVuWlhNZ2RHOGdkR2hsSUhKbGJtUmxjbVZrSUc5eVpHVnlJRzltWEc0Z0tpQnBkR1Z0Y3lCcGJpQmhJR3hoZVc5MWRDNWNiaUFxWEc0Z0tpQk9Ma0l1SUZSb2FYTWdiM0IwYVc5dUlHbHpJSFIxY201bFpDQnZabVlnWW5rZ1pHVm1ZWFZzZEM1Y2JpQXFMMXh1WEc1Y2JseHVYRzVjYmk4dklGZG9hV05vSUdaeVlXTjBhVzl1Y3lCM2IzVnNaQ0I1YjNVZ2JHbHJaU0JwYmlCNWIzVnlJR2R5YVdRZ2MzbHpkR1Z0S0hNcFB5QkNlU0JrWldaaGRXeDBMQ0JwYm5WcGRHTnpjMXh1THk4Z2NISnZkbWxrWlhNZ2VXOTFJR1p5WVdOMGFXOXVjeUJ2WmlCdmJtVWdkMmh2YkdVc0lHaGhiSFpsY3l3Z2RHaHBjbVJ6TENCeGRXRnlkR1Z5Y3lCaGJtUWdabWxtZEdoekxGeHVMeThnWlM1bkxqcGNiaTh2WEc0dkx5QWdJQzUxTFRFdk1seHVMeThnSUNBdWRTMHlMelZjYmk4dklDQWdMblV0TXk4MFhHNHZMeUFnSUM1MUxUSXZNMXh1WEc0a2FXNTFhWFF0Wm5KaFkzUnBiMjV6T2lBeElESWdNeUEwSURVZ0lXUmxabUYxYkhRN1hHNWNibHh1WEc1Y2JseHVMeThnVDNCMGFXOXVZV3hzZVN3Z2FXNTFhWFJqYzNNZ1kyRnVJR2RsYm1WeVlYUmxJR05zWVhOelpYTWdkRzhnYjJabWMyVjBJR2wwWlcxeklHSjVJR0VnWTJWeWRHRnBiaUIzYVdSMGFDNWNiaTh2SUZkdmRXeGtJSGx2ZFNCc2FXdGxJSFJ2SUdkbGJtVnlZWFJsSUhSb1pYTmxJSFI1Y0dWeklHOW1JR05zWVhOeklHRnpJSGRsYkd3L0lFVXVaeTQ2WEc0dkwxeHVMeThnSUNBdWRTMXdkWE5vTFRFdk0xeHVMeThnSUNBdWRTMXdkV3hzTFRJdk5GeHVMeThnSUNBdWRTMXdkV3hzTFRFdk5WeHVMeThnSUNBdWRTMXdkWE5vTFRJdk0xeHVYRzRrYVc1MWFYUXRiMlptYzJWMGN6b2dabUZzYzJVZ0lXUmxabUYxYkhRN1hHNWNibHh1WEc1Y2JseHVMeThnUW5rZ1pHVm1ZWFZzZEN3Z2FXNTFhWFJqYzNNZ2RYTmxjeUJtY21GamRHbHZibk10YkdsclpTQmpiR0Z6YzJWeklHeHBhMlVnWUR4a2FYWWdZMnhoYzNNOVhDSjFMVEV2TkZ3aVBtQXVYRzR2THlCWmIzVWdZMkZ1SUdOb1lXNW5aU0IwYUdVZ1lDOWdJSFJ2SUhkb1lYUmxkbVZ5SUhsdmRTQm1ZVzVqZVNCM2FYUm9JSFJvYVhNZ2RtRnlhV0ZpYkdVdVhHNGthVzUxYVhRdGQybGtkR2h6TFdSbGJHbHRhWFJsY2pvZ1hGd3ZJQ0ZrWldaaGRXeDBPMXh1WEc1Y2JseHVYRzVjYmk4dklGZG9aVzRnZFhOcGJtY2dVMkZ6Y3kxTlVTd2dkR2hwY3lCa1pXWnBibVZ6SUhSb1pTQnpaWEJoY21GMGIzSWdabTl5SUhSb1pTQmljbVZoYTNCdmFXNTBjeUJ6ZFdabWFYaGNiaTh2SUdsdUlIUm9aU0JqYkdGemN5QnVZVzFsTGlCQ2VTQmtaV1poZFd4MExDQjNaU0JoY21VZ1oyVnVaWEpoZEdsdVp5QjBhR1VnY21WemNHOXVjMmwyWlNCemRXWm1hWGhsYzF4dUx5OGdabTl5SUhSb1pTQmpiR0Z6YzJWeklIZHBkR2dnWVNCZ1FHQWdjM2x0WW05c0lITnZJSGx2ZFNCblpYUWdZMnhoYzNObGN5QnNhV3RsT2x4dUx5OGdQR1JwZGlCamJHRnpjejFjSW5VdE15OHhNa0J0YjJKcGJHVmNJajVjYmlScGJuVnBkQzEzYVdSMGFITXRZbkpsWVd0d2IybHVkQzF6WlhCaGNtRjBiM0k2SUZ4Y1FDQWhaR1ZtWVhWc2REdGNibHh1WEc1Y2JseHVYRzR2THlCQklHMXBlR2x1SUhSdklITndhWFFnYjNWMElHOTFjaUIzYVdSMGFDQmpiR0Z6YzJWekxpQlFZWE56SUdsdUlIUm9aU0JqYjJ4MWJXNXpJSGRsSUhkaGJuUWdkR2hsSUhkcFpIUm9jMXh1THk4Z2RHOGdhR0YyWlN3Z1lXNWtJR0Z1SUc5d2RHbHZibUZzSUhOMVptWnBlQ0JtYjNJZ2NtVnpjRzl1YzJsMlpTQjNhV1IwYUhNdUlFVXVaeTRnZEc4Z1kzSmxZWFJsSUhSb2FYSmtjMXh1THk4Z1lXNWtJSEYxWVhKMFpYSnpJR1p2Y2lCaElITnRZV3hzSUdKeVpXRnJjRzlwYm5RNlhHNHZMMXh1THk4Z1FHbHVZMngxWkdVZ2QybGtkR2h6S0RNZ05Dd2dMWE50S1R0Y2JseHVRRzFwZUdsdUlHbHVkV2wwTFhkcFpIUm9jeWdrWTI5c2RXMXVjeXdnSkdKeVpXRnJjRzlwYm5RNklHNTFiR3dwSUh0Y2JseHVJQ0F2THlCTWIyOXdJSFJvY205MVoyZ2dkR2hsSUc1MWJXSmxjaUJ2WmlCamIyeDFiVzV6SUdadmNpQmxZV05vSUdSbGJtOXRhVzVoZEc5eUlHOW1JRzkxY2lCbWNtRmpkR2x2Ym5NdVhHNGdJRUJsWVdOb0lDUmtaVzV2YldsdVlYUnZjaUJwYmlBa1kyOXNkVzF1Y3lCN1hHNWNiaUFnSUNBdkx5QkNaV2RwYmlCamNtVmhkR2x1WnlCaElHNTFiV1Z5WVhSdmNpQm1iM0lnYjNWeUlHWnlZV04wYVc5dUlIVndJSFZ1ZEdsc0lIZGxJR2hwZENCMGFHVmNiaUFnSUNBdkx5QmtaVzV2YldsdVlYUnZjaTVjYmlBZ0lDQkFabTl5SUNSdWRXMWxjbUYwYjNJZ1puSnZiU0F4SUhSb2NtOTFaMmdnSkdSbGJtOXRhVzVoZEc5eUlIdGNibHh1SUNBZ0lDQWdMeThnUW5WcGJHUWdZU0JqYkdGemN5QnBiaUIwYUdVZ1ptOXliV0YwSUdBdWRTMHpMelJiUUR4aWNtVmhhM0J2YVc1MFBsMWdMbHh1SUNBZ0lDQWdMblV0STNza2JuVnRaWEpoZEc5eWZTTjdKR2x1ZFdsMExYZHBaSFJvY3kxa1pXeHBiV2wwWlhKOUkzc2taR1Z1YjIxcGJtRjBiM0o5STNza1luSmxZV3R3YjJsdWRIMGdlMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dLQ1J1ZFcxbGNtRjBiM0lnTHlBa1pHVnViMjFwYm1GMGIzSXBJQ29nTVRBd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JBYVdZZ0tDUnBiblZwZEMxdlptWnpaWFJ6SUQwOUlIUnlkV1VwSUh0Y2JseHVJQ0FnSUNBZ0lDQXZLaXBjYmlBZ0lDQWdJQ0FnSUNvZ01TNGdVbVZ6WlhRZ1lXNTVJR3hsWm5SdmRtVnlJRzl5SUdOdmJtWnNhV04wYVc1bklHQnNaV1owWUM5Z2NtbG5hSFJnSUhaaGJIVmxjeTVjYmlBZ0lDQWdJQ0FnSUNvdlhHNWNiaUFnSUNBZ0lDQWdMeThnUW5WcGJHUWdZU0JqYkdGemN5QnBiaUIwYUdVZ1ptOXliV0YwSUdBdWRTMXdkWE5vTFRFdk1sdEFQR0p5WldGcmNHOXBiblErWFdBdVhHNGdJQ0FnSUNBZ0lDNTFMWEIxYzJndEkzc2tiblZ0WlhKaGRHOXlmU043SkdsdWRXbDBMWGRwWkhSb2N5MWtaV3hwYldsMFpYSjlJM3NrWkdWdWIyMXBibUYwYjNKOUkzc2tZbkpsWVd0d2IybHVkSDBnZTF4dUlDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpTQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdJQ0FnSUhKcFoyaDBPaUJoZFhSdklDRnBiWEJ2Y25SaGJuUTdJQzhxSUZzeFhTQXFMMXh1SUNBZ0lDQWdJQ0FnSUd4bFpuUTZJQ2drYm5WdFpYSmhkRzl5SUM4Z0pHUmxibTl0YVc1aGRHOXlLU0FxSURFd01DVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDOHZJRUoxYVd4a0lHRWdZMnhoYzNNZ2FXNGdkR2hsSUdadmNtMWhkQ0JnTG5VdGNIVnNiQzAxTHpaYlFEeGljbVZoYTNCdmFXNTBQbDFnTGx4dUlDQWdJQ0FnSUNBdWRTMXdkV3hzTFNON0pHNTFiV1Z5WVhSdmNuMGpleVJwYm5WcGRDMTNhV1IwYUhNdFpHVnNhVzFwZEdWeWZTTjdKR1JsYm05dGFXNWhkRzl5ZlNON0pHSnlaV0ZyY0c5cGJuUjlJSHRjYmlBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNBZ0lDQWdJQ0J5YVdkb2REb2dLQ1J1ZFcxbGNtRjBiM0lnTHlBa1pHVnViMjFwYm1GMGIzSXBJQ29nTVRBd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdJQ0FnSUd4bFpuUTZJR0YxZEc4Z0lXbHRjRzl5ZEdGdWREc2dMeW9nV3pGZElDb3ZYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnZlZ4dVhHNGdJSDFjYmx4dWZWeHVYRzVjYmx4dVhHNHZLaXBjYmlBcUlFRWdjMlZ5YVdWeklHOW1JSGRwWkhSb0lHaGxiSEJsY2lCamJHRnpjMlZ6SUhSb1lYUWdlVzkxSUdOaGJpQjFjMlVnZEc4Z2MybDZaU0IwYUdsdVozTWdiR2xyWlNCbmNtbGtYRzRnS2lCemVYTjBaVzF6TGlCRGJHRnpjMlZ6SUhSaGEyVWdZU0JtY21GamRHbHZiaTFzYVd0bElHWnZjbTFoZENBb1pTNW5MaUJnTG5VdE1pOHpZQ2t1SUZWelpTQjBhR1Z6WlNCcGJseHVJQ29nZVc5MWNpQnRZWEpyZFhBNlhHNGdLbHh1SUNvZ1BHUnBkaUJqYkdGemN6MWNJblV0Tnk4eE1sd2lQbHh1SUNwY2JpQXFJRlJvWlNCbWIyeHNiM2RwYm1jZ2QybHNiQ0JuWlc1bGNtRjBaU0IzYVdSMGFITWdhR1ZzY0dWeUlHTnNZWE56WlhNZ1ltRnpaV1FnYjI0Z2RHaGxJR1p5WVdOMGFXOXVjMXh1SUNvZ1pHVm1hVzVsWkNCcGJpQjBhR1VnWUNScGJuVnBkQzFtY21GamRHbHZibk5nSUd4cGMzUXVYRzRnS2k5Y2JseHVRR2x1WTJ4MVpHVWdhVzUxYVhRdGQybGtkR2h6S0NScGJuVnBkQzFtY21GamRHbHZibk1wTzF4dVhHNWNibHh1WEc0dktpcGNiaUFxSUVsbUlIZGw0b0NaY21VZ2RYTnBibWNnVTJGemN5MU5VU3dnWVhWMGIyMWhkR2xqWVd4c2VTQm5aVzVsY21GMFpTQm5jbWxrSUhONWMzUmxiU2h6S1NCbWIzSWdaV0ZqYUNCdlppQnZkWEpjYmlBcUlHUmxabWx1WldRZ1luSmxZV3R3YjJsdWRITXNJR0Z1WkNCbmFYWmxJSFJvWlcwZ1lTQlNaWE53YjI1emFYWmxJRk4xWm1acGVDd2daUzVuTGpwY2JpQXFYRzRnS2lBOFpHbDJJR05zWVhOelBWd2lkUzB6THpFeVFHMXZZbWxzWlZ3aVBseHVJQ292WEc1Y2JrQnBaaUFvZG1GeWFXRmliR1V0WlhocGMzUnpLRzF4TFdKeVpXRnJjRzlwYm5SektTa2dlMXh1WEc0Z0lFQmxZV05vSUNScGJuVnBkQzFpY0MxdVlXMWxMQ0FrYVc1MWFYUXRZbkF0ZG1Gc2RXVWdhVzRnSkcxeExXSnlaV0ZyY0c5cGJuUnpJSHRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJRzF4S0NSbWNtOXRPaUFrYVc1MWFYUXRZbkF0Ym1GdFpTa2dlMXh1SUNBZ0lDQWdRR2x1WTJ4MVpHVWdhVzUxYVhRdGQybGtkR2h6S0NScGJuVnBkQzFtY21GamRHbHZibk1zSUNON0pHbHVkV2wwTFhkcFpIUm9jeTFpY21WaGEzQnZhVzUwTFhObGNHRnlZWFJ2Y24wamV5UnBiblZwZEMxaWNDMXVZVzFsZlNrN1hHNGdJQ0FnZlZ4dVhHNGdJSDFjYmx4dWZWeHVJaXdpTHlvZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUNOVFVFRkRTVTVIVTF4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeW9xWEc0Z0tpQlZkR2xzYVhSNUlHTnNZWE56WlhNZ2RHOGdjSFYwSUhOd1pXTnBabWxqSUhOd1lXTnBibWNnZG1Gc2RXVnpJRzl1ZEc4Z1pXeGxiV1Z1ZEhNdUlGUm9aU0JpWld4dmR5QnNiMjl3WEc0Z0tpQjNhV3hzSUdkbGJtVnlZWFJsSUhWeklHRWdjM1ZwZEdVZ2IyWWdZMnhoYzNObGN5QnNhV3RsT2x4dUlDcGNiaUFxSUNBZ0xuVXRiV0Z5WjJsdUxYUnZjQ0I3ZlZ4dUlDb2dJQ0F1ZFMxd1lXUmthVzVuTFd4bFpuUXRiR0Z5WjJVZ2UzMWNiaUFxSUNBZ0xuVXRiV0Z5WjJsdUxYSnBaMmgwTFhOdFlXeHNJSHQ5WEc0Z0tpQWdJQzUxTFhCaFpHUnBibWNnZTMxY2JpQXFJQ0FnTG5VdGNHRmtaR2x1WnkxeWFXZG9kQzF1YjI1bElIdDlYRzRnS2lBZ0lDNTFMWEJoWkdScGJtY3RhRzl5YVhwdmJuUmhiQ0I3ZlZ4dUlDb2dJQ0F1ZFMxd1lXUmthVzVuTFhabGNuUnBZMkZzTFhOdFlXeHNJSHQ5WEc0Z0tpOWNibHh1THlvZ2MzUjViR1ZzYVc1MExXUnBjMkZpYkdVZ2MzUnlhVzVuTFhGMWIzUmxjeUFxTDF4dVhHNGthVzUxYVhRdGMzQmhZMmx1Wnkxa2FYSmxZM1JwYjI1ek9pQW9YRzRnSUc1MWJHdzZJRzUxYkd3c1hHNGdJQ2N0ZEc5d0p6b2dKeTEwYjNBbkxGeHVJQ0FuTFhKcFoyaDBKem9nSnkxeWFXZG9kQ2NzWEc0Z0lDY3RZbTkwZEc5dEp6b2dKeTFpYjNSMGIyMG5MRnh1SUNBbkxXeGxablFuT2lBbkxXeGxablFuTEZ4dUlDQW5MV2h2Y21sNmIyNTBZV3duT2lBbkxXeGxablFuSUNjdGNtbG5hSFFuTEZ4dUlDQW5MWFpsY25ScFkyRnNKem9nSnkxMGIzQW5JQ2N0WW05MGRHOXRKeXhjYmlrZ0lXUmxabUYxYkhRN1hHNWNiaVJwYm5WcGRDMXpjR0ZqYVc1bkxYQnliM0JsY25ScFpYTTZJQ2hjYmlBZ0ozQmhaR1JwYm1jbk9pQW5jR0ZrWkdsdVp5Y3NYRzRnSUNkdFlYSm5hVzRuT2lBbmJXRnlaMmx1Snl4Y2Jpa2dJV1JsWm1GMWJIUTdYRzVjYmlScGJuVnBkQzF6Y0dGamFXNW5MWE5wZW1Wek9pQW9YRzRnSUc1MWJHdzZJQ1JwYm5WcGRDMW5iRzlpWVd3dGMzQmhZMmx1WnkxMWJtbDBMRnh1SUNBbkxYUnBibmtuT2lBa2FXNTFhWFF0WjJ4dlltRnNMWE53WVdOcGJtY3RkVzVwZEMxMGFXNTVMRnh1SUNBbkxYTnRZV3hzSnpvZ0pHbHVkV2wwTFdkc2IySmhiQzF6Y0dGamFXNW5MWFZ1YVhRdGMyMWhiR3dzWEc0Z0lDY3RiR0Z5WjJVbk9pQWthVzUxYVhRdFoyeHZZbUZzTFhOd1lXTnBibWN0ZFc1cGRDMXNZWEpuWlN4Y2JpQWdKeTFvZFdkbEp6b2dKR2x1ZFdsMExXZHNiMkpoYkMxemNHRmphVzVuTFhWdWFYUXRhSFZuWlN4Y2JpQWdKeTF1YjI1bEp6b2dNRnh1S1NBaFpHVm1ZWFZzZER0Y2JseHVRR1ZoWTJnZ0pIQnliM0JsY25SNUxXNWhiV1Z6Y0dGalpTd2dKSEJ5YjNCbGNuUjVJR2x1SUNScGJuVnBkQzF6Y0dGamFXNW5MWEJ5YjNCbGNuUnBaWE1nZTF4dVhHNGdJRUJsWVdOb0lDUmthWEpsWTNScGIyNHRibUZ0WlhOd1lXTmxMQ0FrWkdseVpXTjBhVzl1TFhKMWJHVnpJR2x1SUNScGJuVnBkQzF6Y0dGamFXNW5MV1JwY21WamRHbHZibk1nZTF4dVhHNGdJQ0FnUUdWaFkyZ2dKSE5wZW1VdGJtRnRaWE53WVdObExDQWtjMmw2WlNCcGJpQWthVzUxYVhRdGMzQmhZMmx1WnkxemFYcGxjeUI3WEc1Y2JpQWdJQ0FnSUM1MUxTTjdKSEJ5YjNCbGNuUjVMVzVoYldWemNHRmpaWDBqZXlSa2FYSmxZM1JwYjI0dGJtRnRaWE53WVdObGZTTjdKSE5wZW1VdGJtRnRaWE53WVdObGZTQjdYRzVjYmlBZ0lDQWdJQ0FnUUdWaFkyZ2dKR1JwY21WamRHbHZiaUJwYmlBa1pHbHlaV04wYVc5dUxYSjFiR1Z6SUh0Y2JpQWdJQ0FnSUNBZ0lDQWpleVJ3Y205d1pYSjBlWDBqZXlSa2FYSmxZM1JwYjI1OU9pQWtjMmw2WlNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJSDFjYmx4dUlDQjlYRzVjYm4xY2JseHVMeW9nYzNSNWJHVnNhVzUwTFdWdVlXSnNaU0J6ZEhKcGJtY3RjWFZ2ZEdWeklDb3ZYRzRpTENJdktpQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1SUNBZ0kxSkZVMUJQVGxOSlZrVXRVMUJCUTBsT1IxTmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nVlhScGJHbDBlU0JqYkdGemMyVnpJR1Z1YUdGdVkybHVaeUIwYUdVZ2JtOXliV0ZzSUhOd1lXTnBibWNnWTJ4aGMzTmxjeUJpZVNCaFpHUnBibWNnY21WemNHOXVjMmwyWlc1bGMzTmNiaUFxSUhSdklIUm9aVzB1SUVKNUlHUmxabUYxYkhRZ2RHaHBjeUJpY21sdVozTWdkWE1nZEdobElHWnZiR3h2ZDJsdVp5QmpiR0Z6YzJWek9seHVJQ3BjYmlBcUlDQWdMblV0YldGeVoybHVMV0p2ZEhSdmJTMXViMjVsUUcxdlltbHNaU0I3ZlZ4dUlDb2dJQ0F1ZFMxdFlYSm5hVzR0WW05MGRHOXRMVzV2Ym1WQWRHRmliR1YwSUh0OVhHNGdLaUFnSUM1MUxXMWhjbWRwYmkxaWIzUjBiMjB0Ym05dVpVQmtaWE5yZEc5d0lIdDlYRzRnS2lBZ0lDNTFMVzFoY21kcGJpMWliM1IwYjIwdGJtOXVaVUIzYVdSbElIdDlYRzRnS2x4dUlDb2dRblYwSUhkbElHTmhiaUJoWm1abFkzUWdkR2hsSUdOc1lYTnpaWE1nZEdoaGRDQm5aWFFnWjJWdVpYSmhkR1ZrSUdKNUlHRnNkR1Z5YVc1bklIUm9aU0JoY0hCeWIzQnlhV0YwWlZ4dUlDb2dVMkZ6Y3lCdFlYQnpJR0psYkc5M0xseHVJQ292WEc1Y2JseHVYRzR2THlCWGFHVnVJSFZ6YVc1bklGTmhjM010VFZFc0lIUm9hWE1nWkdWbWFXNWxjeUIwYUdVZ2MyVndZWEpoZEc5eUlHWnZjaUIwYUdVZ1luSmxZV3R3YjJsdWRITWdjM1ZtWm1sNFhHNHZMeUJwYmlCMGFHVWdZMnhoYzNNZ2JtRnRaUzRnUW5rZ1pHVm1ZWFZzZEN3Z2QyVWdZWEpsSUdkbGJtVnlZWFJwYm1jZ2RHaGxJSEpsYzNCdmJuTnBkbVVnYzNWbVptbDRaWE5jYmk4dklHWnZjaUIwYUdVZ1kyeGhjM05sY3lCM2FYUm9JR0VnWUVCZ0lITjViV0p2YkNCemJ5QjViM1VnWjJWMElHTnNZWE56WlhNZ2JHbHJaVHBjYmk4dlhHNHZMeUFnSUR4a2FYWWdZMnhoYzNNOVhDSjFMVzFoY21kcGJpMWliM1IwYjIxQWJXOWlhV3hsWENJK1hHNHZMMXh1THk4Z1FtVWdZWGRoY21VZ2RHaGhkQ0J6YVc1alpTQjBhR1VnWUVCZ0lITjViV0p2YkNCcGN5QmhJSEpsYzJWeWRtVmtJSE41YldKdmJDQnBiaUJEVTFNc0lHbDBJR2hoY3lCMGJ5QmlaVnh1THk4Z1pYTmpZWEJsWkNCM2FYUm9JR0VnWUZ4Y1lDNGdTVzRnZEdobElHMWhjbXQxY0NCMGFHOTFaMmdzSUhsdmRTQjNjbWwwWlNCNWIzVnlJR05zWVhOelpYTWdkMmwwYUc5MWRDQjBhR1ZjYmk4dklHSmhZMnR6YkdGemFDQW9aUzVuTGlCZ2RTMXRZWEpuYVc0dFltOTBkRzl0UUcxdlltbHNaV0FwTGx4dUpHbHVkV2wwTFhkcFpIUm9jeTFpY21WaGEzQnZhVzUwTFhObGNHRnlZWFJ2Y2pvZ1hGeEFJQ0ZrWldaaGRXeDBPMXh1WEc1Y2JseHVKR2x1ZFdsMExYSmxjM0J2Ym5OcGRtVXRjM0JoWTJsdVp5MWthWEpsWTNScGIyNXpPaUFvWEc0Z0lGd2lMV0p2ZEhSdmJWd2lPaUJjSWkxaWIzUjBiMjFjSWl4Y2Jpa2dJV1JsWm1GMWJIUTdYRzVjYmlScGJuVnBkQzF5WlhOd2IyNXphWFpsTFhOd1lXTnBibWN0Y0hKdmNHVnlkR2xsY3pvZ0tGeHVJQ0JjSW0xaGNtZHBibHdpT2lCY0ltMWhjbWRwYmx3aUxGeHVLU0FoWkdWbVlYVnNkRHRjYmx4dUpHbHVkV2wwTFhKbGMzQnZibk5wZG1VdGMzQmhZMmx1WnkxemFYcGxjem9nS0Z4dUlDQmNJaTF1YjI1bFhDSTZJREJjYmlrZ0lXUmxabUYxYkhRN1hHNWNibHh1WEc0dktpQnpkSGxzWld4cGJuUXRaR2x6WVdKc1pTQnRZWGd0Ym1WemRHbHVaeTFrWlhCMGFDQXFMMXh1WEc1QVpXRmphQ0FrY0hKdmNHVnlkSGt0Ym1GdFpYTndZV05sTENBa2NISnZjR1Z5ZEhrZ2FXNGdKR2x1ZFdsMExYSmxjM0J2Ym5OcGRtVXRjM0JoWTJsdVp5MXdjbTl3WlhKMGFXVnpJSHRjYmx4dUlDQkFaV0ZqYUNBa1pHbHlaV04wYVc5dUxXNWhiV1Z6Y0dGalpTd2dKR1JwY21WamRHbHZiaTF5ZFd4bGN5QnBiaUFrYVc1MWFYUXRjbVZ6Y0c5dWMybDJaUzF6Y0dGamFXNW5MV1JwY21WamRHbHZibk1nZTF4dVhHNGdJQ0FnUUdWaFkyZ2dKSE5wZW1VdGJtRnRaWE53WVdObExDQWtjMmw2WlNCcGJpQWthVzUxYVhRdGNtVnpjRzl1YzJsMlpTMXpjR0ZqYVc1bkxYTnBlbVZ6SUh0Y2JseHVJQ0FnSUNBZ1FHVmhZMmdnSkdsdWRXbDBMV0p3TFc1aGJXVXNJQ1JwYm5WcGRDMWljQzEyWVd4MVpTQnBiaUFrYlhFdFluSmxZV3R3YjJsdWRITWdlMXh1WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxeEtDUm1jbTl0T2lBa2FXNTFhWFF0WW5BdGJtRnRaU2tnZTF4dVhHNGdJQ0FnSUNBZ0lDQWdMblV0STNza2NISnZjR1Z5ZEhrdGJtRnRaWE53WVdObGZTTjdKR1JwY21WamRHbHZiaTF1WVcxbGMzQmhZMlY5STNza2MybDZaUzF1WVcxbGMzQmhZMlY5STNza2FXNTFhWFF0ZDJsa2RHaHpMV0p5WldGcmNHOXBiblF0YzJWd1lYSmhkRzl5ZlNON0pHbHVkV2wwTFdKd0xXNWhiV1Y5SUh0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnUUdWaFkyZ2dKR1JwY21WamRHbHZiaUJwYmlBa1pHbHlaV04wYVc5dUxYSjFiR1Z6SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSTNza2NISnZjR1Z5ZEhsOUkzc2taR2x5WldOMGFXOXVmVG9nSkhOcGVtVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJSDFjYmx4dUlDQjlYRzVjYm4xY2JseHVMeW9nYzNSNWJHVnNhVzUwTFdWdVlXSnNaU0J0WVhndGJtVnpkR2x1Wnkxa1pYQjBhQ0FxTDF4dUlpd2lMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJQ05RVWtsT1ZGeHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THlvcVhHNGdLaUJXWlhKNUlHTnlkV1JsTENCeVpYTmxkQzFzYVd0bElITjBlV3hsY3lCMFlXdGxiaUJtY205dElIUm9aU0JJVkUxTU5TQkNiMmxzWlhKd2JHRjBaVHBjYmlBcUlHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOW9OV0p3TDJoMGJXdzFMV0p2YVd4bGNuQnNZWFJsTDJKc2IySXZOUzR6TGpBdlpHbHpkQzlrYjJNdlkzTnpMbTFrSTNCeWFXNTBMWE4wZVd4bGMxeHVJQ29nYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDJnMVluQXZhSFJ0YkRVdFltOXBiR1Z5Y0d4aGRHVXZZbXh2WWk5dFlYTjBaWEl2WkdsemRDOWpjM012YldGcGJpNWpjM01qVERJd05TMU1Namd5WEc0Z0tpOWNibHh1UUcxbFpHbGhJSEJ5YVc1MElIdGNibHh1SUNBdktpcGNiaUFnSUNvZ01TNGdRbXhoWTJzZ2NISnBiblJ6SUdaaGMzUmxjam9nYUhSMGNEb3ZMM2QzZHk1ellXNWlaV2xxYVM1amIyMHZZWEpqYUdsMlpYTXZPVFV6WEc0Z0lDQXFMMXh1WEc0Z0lDb3NYRzRnSUNvNlltVm1iM0psTEZ4dUlDQXFPbUZtZEdWeUxGeHVJQ0FxT21acGNuTjBMV3hsZEhSbGNpeGNiaUFnS2pwbWFYSnpkQzFzYVc1bElIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkQ0FoYVcxd2IzSjBZVzUwTzF4dUlDQWdJR052Ykc5eU9pQWpNREF3SUNGcGJYQnZjblJoYm5RN0lDOHFJRnN4WFNBcUwxeHVJQ0FnSUdKdmVDMXphR0ZrYjNjNklHNXZibVVnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0IwWlhoMExYTm9ZV1J2ZHpvZ2JtOXVaU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmx4dUlDQmhMRnh1SUNCaE9uWnBjMmwwWldRZ2UxeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nZFc1a1pYSnNhVzVsTzF4dUlDQjlYRzVjYmlBZ1lWdG9jbVZtWFRwaFpuUmxjaUI3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0lnS0Z3aUlHRjBkSElvYUhKbFppa2dYQ0lwWENJN1hHNGdJSDFjYmx4dUlDQmhZbUp5VzNScGRHeGxYVHBoWm5SbGNpQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSWdLRndpSUdGMGRISW9kR2wwYkdVcElGd2lLVndpTzF4dUlDQjlYRzVjYmx4dUlDQXZLaXBjYmlBZ0lDb2dSRzl1SjNRZ2MyaHZkeUJzYVc1cmN5QjBhR0YwSUdGeVpTQm1jbUZuYldWdWRDQnBaR1Z1ZEdsbWFXVnljeXdnYjNJZ2RYTmxJSFJvWlNCZ2FtRjJZWE5qY21sd2REcGdYRzRnSUNBcUlIQnpaWFZrYnlCd2NtOTBiMk52YkM1Y2JpQWdJQ292WEc1Y2JpQWdZVnRvY21WbVhqMWNJaU5jSWwwNllXWjBaWElzWEc0Z0lHRmJhSEpsWmw0OVhDSnFZWFpoYzJOeWFYQjBPbHdpWFRwaFpuUmxjaUI3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2JpQWdmVnh1WEc0Z0lIQnlaU3hjYmlBZ1lteHZZMnR4ZFc5MFpTQjdYRzRnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0l6azVPVHRjYmlBZ0lDQndZV2RsTFdKeVpXRnJMV2x1YzJsa1pUb2dZWFp2YVdRN1hHNGdJSDFjYmx4dVhHNGdJQzhxS2x4dUlDQWdLaUJRY21sdWRHbHVaeUJVWVdKc1pYTTZJR2gwZEhBNkx5OWpjM010WkdselkzVnpjeTVwYm1OMWRHbHZMbU52YlM5M2FXdHBMMUJ5YVc1MGFXNW5YMVJoWW14bGMxeHVJQ0FnS2k5Y2JseHVJQ0IwYUdWaFpDQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2RHRmliR1V0YUdWaFpHVnlMV2R5YjNWd08xeHVJQ0I5WEc1Y2JpQWdkSElzWEc0Z0lHbHRaeUI3WEc0Z0lDQWdjR0ZuWlMxaWNtVmhheTFwYm5OcFpHVTZJR0YyYjJsa08xeHVJQ0I5WEc1Y2JseHVJQ0JwYldjZ2UxeHVJQ0FnSUcxaGVDMTNhV1IwYURvZ01UQXdKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ2NDeGNiaUFnYURJc1hHNGdJR2d6SUh0Y2JpQWdJQ0J2Y25Cb1lXNXpPaUF6TzF4dUlDQWdJSGRwWkc5M2N6b2dNenRjYmlBZ2ZWeHVYRzRnSUdneUxGeHVJQ0JvTXlCN1hHNGdJQ0FnY0dGblpTMWljbVZoYXkxaFpuUmxjam9nWVhadmFXUTdYRzRnSUgxY2JseHVmVnh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmlBZ0lDTklTVVJGWEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlFaHBaR1VnYjI1c2VTQjJhWE4xWVd4c2VTd2dZblYwSUdoaGRtVWdhWFFnWVhaaGFXeGhZbXhsSUdadmNpQnpZM0psWlc0Z2NtVmhaR1Z5Y3pwY2JpQXFJR2gwZEhBNkx5OXpibTl2YXk1allTOWhjbU5vYVhabGN5OW9kRzFzWDJGdVpGOWpjM012YUdsa2FXNW5MV052Ym5SbGJuUXRabTl5TFdGalkyVnpjMmxpYVd4cGRIbGNiaUFxTDF4dVhHNHVkUzFvYVdSa1pXNHRkbWx6ZFdGc2JIa2dlMXh1SUNCQWFXNWpiSFZrWlNCcGJuVnBkQzFvYVdSa1pXNHRkbWx6ZFdGc2JIa29LVHRjYm4xY2JseHVYRzR2S2lwY2JpQXFJRWhwWkdVZ2RtbHpkV0ZzYkhrZ1lXNWtJR1p5YjIwZ2MyTnlaV1Z1SUhKbFlXUmxjbk11WEc0Z0tpOWNibHh1TG5VdGFHbGtaR1Z1SUh0Y2JpQWdaR2x6Y0d4aGVUb2dibTl1WlNBaGFXMXdiM0owWVc1ME8xeHVmVnh1SWl3aUx5b2dQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdJRlYwYVd4cGRHbGxjeTlJYVdSbElGSmxjM0J2Ym5OcGRtVmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JrQnBaaUFvZG1GeWFXRmliR1V0WlhocGMzUnpLRzF4TFdKeVpXRnJjRzlwYm5SektTa2dlMXh1SUNCQVpXRmphQ0FrYVc1MWFYUXRZbkF0Ym1GdFpTd2dKR2x1ZFdsMExXSndMWFpoYkhWbElHbHVJQ1J0Y1MxaWNtVmhhM0J2YVc1MGN5QjdYRzRnSUNBZ1FHbHVZMngxWkdVZ2JYRW9KR1p5YjIwNklDUnBiblZwZEMxaWNDMXVZVzFsS1NCN1hHNGdJQ0FnSUNBdWRTMW9hV1JrWlc1Y1hFQWpleVJwYm5WcGRDMWljQzF1WVcxbGZTQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lDNTFMWE5vYjNkdVhGeEFJM3NrYVc1MWFYUXRZbkF0Ym1GdFpYMGdlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm1obGNtbDBJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUM1MUxXUnBjM0JzWVhrdFlteHZZMnN1ZFMxemFHOTNibHhjUUNON0pHbHVkV2wwTFdKd0xXNWhiV1Y5SUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnNnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0xuVXRaR2x6Y0d4aGVTMXBibXhwYm1VdFlteHZZMnN1ZFMxemFHOTNibHhjUUNON0pHbHVkV2wwTFdKd0xXNWhiV1Y5SUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUM1MUxXUnBjM0JzWVhrdGFXNXNhVzVsTG5VdGMyaHZkMjVjWEVBamV5UnBiblZwZEMxaWNDMXVZVzFsZlNCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd2lMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNiaUFnSUZWMGFXeHBkR2xsY3k5RGIyNXpkSEpoYVc1Y2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk1MUxXTnZibk4wY21GcGJpMHRhSFZuWlNCN1hHNGdJRzFoZUMxM2FXUjBhRG9nTVRRd01IQjRPMXh1ZlZ4dVhHNHVkUzFqYjI1emRISmhhVzR0TFd4aGNtZGxJSHRjYmlBZ2JXRjRMWGRwWkhSb09pQXhNamd3Y0hnN1hHNTlYRzVjYmk1MUxXTnZibk4wY21GcGJpQjdYRzRnSUcxaGVDMTNhV1IwYURvZ01UQXlOSEI0TzF4dWZWeHVYRzR1ZFMxamIyNXpkSEpoYVc0dExYTnRZV3hzSUh0Y2JpQWdiV0Y0TFhkcFpIUm9PaUEzTmpod2VEdGNibjFjYmx4dUxuVXRZMjl1YzNSeVlXbHVMUzEwYVc1NUlIdGNiaUFnYldGNExYZHBaSFJvT2lBMk1EQndlRHRjYm4xY2JpSXNJaThxSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzRnSUNCVmRHbHNhWFJwWlhNdlJteGxlRnh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JpNTFMV1pzWlhnZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVmVnh1WEc0dWRTMW1iR1Y0TFMxalpXNTBaWElnZTF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjYm4xY2JseHVMblV0Wm14bGVDMHRjbWxuYUhRZ2UxeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndFpXNWtPMXh1ZlZ4dVhHNHVkUzFtYkdWNExTMWpaVzUwWlhJdGJXbGtaR3hsSUh0Y2JpQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEc1OVhHNWNiaTUxTFdac1pYZ3RMV0p2ZEhSdmJTQjdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQm1iR1Y0TFdWdVpEdGNibjFjYmlJc0lpOHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNGdJQ0JUYUdGdFpWeHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUlsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN1FVVkJRVHM3TmtKQlJUWkNPMEZEUmpkQ096czJRa0ZGTmtJN1FVTkdOMEk3T3paQ1FVVTJRanRCUTBZM1FqczdOa0pCUlRaQ08wRkJRemRDTEZWQlFWVTdSVUZEVGl4WFFVRlhMRVZCUVVVc1YwRkJWenRGUVVONFFpeEhRVUZITEVWQlFVVXNjMFZCUVhORk8wVkJRek5GTEVkQlFVY3NSVUZCUlN3MlJVRkJOa1VzUTBGQlF5d3lRa0ZCTWtJc1JVRkRla2NzZDBWQlFYZEZMRU5CUVVNc1pVRkJaU3hGUVVONFJpeDFSVUZCZFVVc1EwRkJReXhqUVVGakxFVkJRM1JHTEhORlFVRnpSU3hEUVVGRExHdENRVUZyUWl4RlFVTjZSaXh4UmtGQmNVWXNRMEZCUXl4aFFVRmhPMFZCUTNoSExGZEJRVmNzUlVGQlJTeEhRVUZITzBWQlEyaENMRlZCUVZVc1JVRkJSU3hOUVVGTk96czdRVUZGZEVJc1ZVRkJWVHRGUVVOT0xGZEJRVmNzUlVGQlJTeFhRVUZYTzBWQlEzaENMRWRCUVVjc1JVRkJSU3h2UlVGQmIwVTdSVUZEZWtVc1IwRkJSeXhGUVVGRkxESkZRVUV5UlN4RFFVRkRMREpDUVVFeVFpeEZRVU4yUnl4elJVRkJjMFVzUTBGQlF5eGxRVUZsTEVWQlEzUkdMSEZGUVVGeFJTeERRVUZETEdOQlFXTXNSVUZEY0VZc2IwVkJRVzlGTEVOQlFVTXNhMEpCUVd0Q0xFVkJRM1pHTEd0R1FVRnJSaXhEUVVGRExHRkJRV0U3UlVGRGNrY3NWMEZCVnl4RlFVRkZMRWRCUVVjN1JVRkRhRUlzVlVGQlZTeEZRVUZGTEUxQlFVMDdPenRCUVVWMFFpeFZRVUZWTzBWQlEwNHNWMEZCVnl4RlFVRkZMRmRCUVZjN1JVRkRlRUlzUjBGQlJ5eEZRVUZGTERCRlFVRXdSVHRGUVVNdlJTeEhRVUZITEVWQlFVVXNhVVpCUVdsR0xFTkJRVU1zTWtKQlFUSkNMRVZCUXpkSExEUkZRVUUwUlN4RFFVRkRMR1ZCUVdVc1JVRkROVVlzTWtWQlFUSkZMRU5CUVVNc1kwRkJZeXhGUVVNeFJpd3dSVUZCTUVVc1EwRkJReXhyUWtGQmEwSXNSVUZETjBZc01rWkJRVEpHTEVOQlFVTXNZVUZCWVR0RlFVTTVSeXhYUVVGWExFVkJRVVVzUjBGQlJ6dEZRVU5vUWl4VlFVRlZMRVZCUVVVc1RVRkJUVHM3TzBGQlJYUkNMRlZCUVZVN1JVRkRUaXhYUVVGWExFVkJRVVVzVjBGQlZ6dEZRVU40UWl4SFFVRkhMRVZCUVVVc2MwVkJRWE5GTzBWQlF6TkZMRWRCUVVjc1JVRkJSU3cyUlVGQk5rVXNRMEZCUXl3eVFrRkJNa0lzUlVGRGVrY3NkMFZCUVhkRkxFTkJRVU1zWlVGQlpTeEZRVU40Uml4MVJVRkJkVVVzUTBGQlF5eGpRVUZqTEVWQlEzUkdMSE5GUVVGelJTeERRVUZETEd0Q1FVRnJRaXhGUVVONlJpeHhSa0ZCY1VZc1EwRkJReXhoUVVGaE8wVkJRM2hITEZkQlFWY3NSVUZCUlN4SFFVRkhPMFZCUTJoQ0xGVkJRVlVzUlVGQlJTeE5RVUZOT3pzN1FVRkZkRUlzVlVGQlZUdEZRVU5PTEZkQlFWY3NSVUZCUlN4eFFrRkJjVUk3UlVGRGJFTXNSMEZCUnl4RlFVRkZMR3RHUVVGclJqdEZRVU4yUml4SFFVRkhMRVZCUVVVc2VVWkJRWGxHTEVOQlFVTXNNa0pCUVRKQ0xFVkJRekZJTEc5R1FVRnZSaXhEUVVGRExHVkJRV1VzUlVGRGNFY3NiVVpCUVcxR0xFTkJRVU1zWTBGQll5eEZRVU5zUnl4clJrRkJhMFlzUTBGQlF5eHJRa0ZCYTBJc1JVRkRja2NzTmtkQlFUWkhMRU5CUVVNc1lVRkJZVHRGUVVNelNDeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVTnVRaXhWUVVGVkxFVkJRVVVzVFVGQlRUczdPMEZCUlhSQ0xFRkJRVUVzU1VGQlNUdEJRVU5LTEVGQlFVRXNTVUZCU1R0QlFVTktMRUZCUVVFc1NVRkJTVHRCUVVOS0xFRkJRVUVzU1VGQlNUdEJRVU5LTEVGQlFVRXNTVUZCU1N4RFFVRkRPMFZCUTBRc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNTVUZCU1N4RlFVRkZMSFZEUVVGMVF6dEZRVU0zUXl4VFFVRlRMRVZCUVVVc1QwRkJUenRGUVVOc1FpeGpRVUZqTEVWQlFVVXNZVUZCWVR0RlFVTTNRaXhqUVVGakxFVkJRVVVzU1VGQlNUdEZRVU53UWl4elFrRkJjMElzUlVGQlJTeFhRVUZYTzBWQlEyNURMSFZDUVVGMVFpeEZRVUZGTEZOQlFWTTdSVUZEYkVNc1UwRkJVeXhGUVVGRkxHVkJRV1U3UTBGRE4wSTdPMEZCUTBRc1FVRkJRU3hKUVVGSkxFTkJRVU03UlVGRFJDeFhRVUZYTEVWQlFVVXNSMEZCUnp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEVsQlFVa3NRMEZCUXp0RlFVTkVMRmRCUVZjc1JVRkJSU3hIUVVGSE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1NVRkJTU3hEUVVGRE8wVkJRMFFzVjBGQlZ5eEZRVUZGTEVkQlFVYzdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeEpRVUZKTEVOQlFVTTdSVUZEUkN4WFFVRlhMRVZCUVVVc2NVSkJRWEZDTzBOQlEzSkRPenRCUVVORUxDdEVRVUVyUkR0QlFVTXZSQ3hCUVVGQkxFMUJRVTBzUTBGQlF6dEZRVU5JTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1kwRkJZeXhGUVVGRkxGRkJRVkU3UTBGRE0wSTdPMEZCUTBRc09FUkJRVGhFTzBGQlF6bEVMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRMGdzVTBGQlV5eEZRVUZGTEZsQlFWazdSVUZEZGtJc1YwRkJWeXhGUVVGRkxFMUJRVTA3UTBGRGRFSTdPMEZCUTBRc1FVRkJRU3hOUVVGTkxFTkJRVU03UlVGRFNDeFRRVUZUTEVWQlFVVXNSMEZCUnp0RFFVTnFRanM3UVVGRFJDeEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTklMRk5CUVZNc1JVRkJSU3hIUVVGSE8wTkJRMnBDT3p0QlFVTkVMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRMGdzVTBGQlV5eEZRVUZGTEVkQlFVYzdRMEZEYWtJN08wRkJRMFFzUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZEU0N4VFFVRlRMRVZCUVVVc1IwRkJSenREUVVOcVFqczdRVUZEUkN4QlFVRkJMRTFCUVUwN1FVRkRUaXhCUVVGQkxFMUJRVTA3UVVGRFRpeEJRVUZCTEUxQlFVMDdRVUZEVGl4QlFVRkJMRTFCUVUwN1FVRkRUaXhCUVVGQkxFMUJRVTBzUTBGQlF6dEZRVU5JTEdOQlFXTXNSVUZCUlN4SlFVRkpPME5CUTNaQ096dEJRVU5FTEVGQlFVRXNUVUZCVFN4RFFVRkRPMFZCUTBnc1MwRkJTeXhGUVVGRkxGbEJRVms3UlVGRGJrSXNWVUZCVlN4RlFVRkZMRTFCUVUwN1EwRkRja0k3TzBGQlEwUXNRVUZCUVN4TlFVRk5MRU5CUVVNN1JVRkRTQ3haUVVGWkxFVkJRVVVzUTBGQlF6dEZRVU5tTEZkQlFWY3NSVUZCUlN4WlFVRlpPMFZCUTNwQ0xHVkJRV1VzUlVGQlJTeEpRVUZKTzBOQlEzaENPenRCUVVORUxFRkJRVk1zVFVGQlNDeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTlNMRkZCUVZFc1JVRkJSU3hSUVVGUk8wTkJRM0pDT3p0QlFVTkVMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRMGdzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1NVRkJTU3hGUVVGRkxHRkJRV0U3UlVGRGJrSXNTMEZCU3l4RlFVRkZMRmxCUVZrN1JVRkRia0lzUjBGQlJ5eEZRVUZGTEZsQlFWazdSVUZEYWtJc1ZVRkJWU3hGUVVGRkxFMUJRVTA3UTBGRGNrSTdPMEZCUTBRc1FVRkJRU3hOUVVGTkxFRkJRVUVzVFVGQlRTeERRVUZETzBWQlExUXNTVUZCU1N4RlFVRkZMRWxCUVVrN1EwRkRZanM3UVVGRFJDeEJRVUZCTEZWQlFWVXNRMEZCUXp0RlFVTlFMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzVFVGQlRTeEZRVUZGTEc5Q1FVRnZRanRGUVVNMVFpeGhRVUZoTEVWQlFVVXNTVUZCU1R0RFFVTjBRanM3UVVGRFJDeEJRVUZCTEZkQlFWY3NRMEZCUXp0RlFVTlNMRXRCUVVzc1JVRkJSU3hMUVVGTE8wTkJRMlk3TzBGQlEwUXNRVUZCUVN4VlFVRlZMRU5CUVVNN1JVRkRVQ3hMUVVGTExFVkJRVVVzU1VGQlNUdERRVU5rT3p0QlFVTkVMRUZCUVVFc1NVRkJTU3hCUVVGQkxGVkJRVlU3UVVGRFpDeEJRVUZCTEVsQlFVa3NRVUZCUVN4VlFVRlZPMEZCUTJRc1FVRkJRU3hKUVVGSkxFRkJRVUVzVlVGQlZUdEJRVU5rTEVGQlFVRXNTVUZCU1N4QlFVRkJMRlZCUVZVN1FVRkRaQ3hCUVVGQkxFbEJRVWtzUVVGQlFTeFZRVUZWTEVOQlFVTTdSVUZEV0N4WlFVRlpMRVZCUVVVc1NVRkJTVHREUVVOeVFqczdRVUZEUkN4QlFVRkJMRWxCUVVrc1FVRkJRU3hYUVVGWE8wRkJRMllzUVVGQlFTeEpRVUZKTEVGQlFVRXNWMEZCVnp0QlFVTm1MRUZCUVVFc1NVRkJTU3hCUVVGQkxGZEJRVmM3UVVGRFppeEJRVUZCTEVsQlFVa3NRVUZCUVN4WFFVRlhPMEZCUTJZc1FVRkJRU3hKUVVGSkxFRkJRVUVzVjBGQlZ5eERRVUZETzBWQlExb3NWMEZCVnl4RlFVRkZMRWxCUVVrN1EwRkRjRUk3TzBGQlEwUXNRVUZCUVN4UlFVRlJMRU5CUVVNN1JVRkRUQ3hwUWtGQmFVSXNSVUZCUlN3d1FrRkJNRUk3UlVGRE4wTXNVMEZCVXl4RlFVRkZMREJDUVVFd1FqdERRVU40UXpzN1FVRkRSQ3hCUVVGQkxGTkJRVk1zUTBGQlF6dEZRVU5PTEdsQ1FVRnBRaXhGUVVGRkxFOUJRVThzUTBGQlF5eEZRVUZGTEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFN1JVRkRMME1zVTBGQlV5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RlFVRkZMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkU3UTBGRE1VTTdPMEZCUTBRc2EwSkJRV3RDTEVOQlFXeENMRTlCUVd0Q08wVkJRMlFzUVVGQlFTeEZRVUZGTzBsQlEwVXNhVUpCUVdsQ0xFVkJRVVVzV1VGQldUdEpRVU12UWl4VFFVRlRMRVZCUVVVc1dVRkJXVHM3UlVGRk0wSXNRVUZCUVN4SlFVRkpPMGxCUTBFc2FVSkJRV2xDTEVWQlFVVXNZMEZCWXp0SlFVTnFReXhUUVVGVExFVkJRVVVzWTBGQll6czdPenRCUVVkcVF5eFZRVUZWTEVOQlFWWXNUMEZCVlR0RlFVTk9MRUZCUVVFc1JVRkJSVHRKUVVORkxHbENRVUZwUWl4RlFVRkZMRmxCUVZrN1NVRkRMMElzVTBGQlV5eEZRVUZGTEZsQlFWazdPMFZCUlROQ0xFRkJRVUVzU1VGQlNUdEpRVU5CTEdsQ1FVRnBRaXhGUVVGRkxHTkJRV003U1VGRGFrTXNVMEZCVXl4RlFVRkZMR05CUVdNN096czdRVUZIYWtNc1FVRkJRU3hoUVVGaExFTkJRVU03UlVGRFZpeE5RVUZOTEVWQlFVVXNkMFJCUVhkRU8wVkJRMmhGTEdsQ1FVRnBRaXhGUVVGRkxHRkJRV0U3UlVGRGFFTXNZVUZCWVN4RlFVRkZMR0ZCUVdFN1JVRkROVUlzVTBGQlV5eEZRVUZGTEdGQlFXRTdRMEZETTBJN08wRkJRMFFzUVVGQlFTeGpRVUZqTEVOQlFVTTdSVUZEV0N4TlFVRk5MRVZCUVVVc2QwUkJRWGRFTzBWQlEyaEZMR2xDUVVGcFFpeEZRVUZGTEdOQlFXTTdSVUZEYWtNc1lVRkJZU3hGUVVGRkxHTkJRV003UlVGRE4wSXNVMEZCVXl4RlFVRkZMR05CUVdNN1EwRkROVUk3TzBGQlEwUXNRVUZCUVN4alFVRmpMRU5CUVVNN1JVRkRXQ3hOUVVGTkxFVkJRVVVzZDBSQlFYZEVPMFZCUTJoRkxHbENRVUZwUWl4RlFVRkZMR05CUVdNN1JVRkRha01zWVVGQllTeEZRVUZGTEdOQlFXTTdSVUZETjBJc1UwRkJVeXhGUVVGRkxHTkJRV003UTBGRE5VSTdPMEZCUTBRc1FVRkJRU3h0UWtGQmJVSXNRMEZCUXp0RlFVTm9RaXhOUVVGTkxFVkJRVVVzYTBWQlFXdEZPMFZCUXpGRkxHbENRVUZwUWl4RlFVRkZMRmxCUVZrN1JVRkRMMElzWVVGQllTeEZRVUZGTEZsQlFWazdSVUZETTBJc1UwRkJVeXhGUVVGRkxGbEJRVms3UTBGRE1VSTdPMEZCUTBRc1FVRkJRU3hwUWtGQmFVSXNRMEZCUXp0RlFVTmtMRTFCUVUwc1JVRkJSU3hyUlVGQmEwVTdSVUZETVVVc2FVSkJRV2xDTEVWQlFVVXNXVUZCV1R0RlFVTXZRaXhoUVVGaExFVkJRVVVzV1VGQldUdEZRVU16UWl4VFFVRlRMRVZCUVVVc1dVRkJXVHREUVVNeFFqczdRVUZEUkN4QlFVRk5MRXRCUVVRc1EwRkJReXhoUVVGaE8wRkJRMjVDTEVGQlFVMHNTMEZCUkN4RFFVRkRMR05CUVdNN1FVRkRjRUlzUVVGQlRTeExRVUZFTEVOQlFVTXNZMEZCWXp0QlFVTndRaXhCUVVGTkxFdEJRVVFzUTBGQlF5eHRRa0ZCYlVJN1FVRkRla0lzUVVGQlRTeExRVUZFTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU03UlVGRGNFSXNUVUZCVFN4RlFVRkZMRWxCUVVrN1EwRkRaanM3UVVGRFJDeEJRVUZCTEZOQlFWTXNRMEZCUXp0RlFVTk9MRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4WlFVRlpPMFZCUTNKQ0xFdEJRVXNzUlVGQlJTeFpRVUZaTzBWQlEyNUNMRTFCUVUwc1JVRkJSU3hIUVVGSE8wVkJRMWdzVjBGQlZ5eEZRVUZGTEVkQlFVYzdSVUZEYUVJc1kwRkJZeXhGUVVGRkxGRkJRVkU3UTBGRE0wSTdPMEZCUTBRc1FVRkJRU3haUVVGWkxFTkJRVU03UlVGRFZDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhIUVVGSExFVkJRVVVzUTBGQlF6dEZRVU5PTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1YwRkJWeXhGUVVGRkxFOUJRVTg3UlVGRGNFSXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkRiRUk3TzBGQlEwUXNRVUZCUVN4WlFVRlpPMEZCUTFvc1FVRkJRU3haUVVGWkxFTkJRVU03UlVGRFZDeFBRVUZQTEVWQlFVVXNXVUZCV1R0RlFVTnlRaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEZWQlFWVXNSVUZCUlN4TlFVRk5PME5CUTNKQ096dEJRVU5FTEVGQlFVRXNWMEZCVnl4RFFVRkRPMFZCUTFJc1MwRkJTeXhGUVVGRkxFOUJRVTg3UTBGRGFrSTdPMEZCUTBRN2IwVkJRMjlGTzBGQlEzQkZMRUZCUVVFc1VVRkJVU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5hTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNXVUZCV1N4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOb1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZWQlFWVXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaQ3hQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHVkJRV1VzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYmtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3huUWtGQlowSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRjRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFRRVUZUTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hYUVVGWExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyWXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4alFVRmpMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNXVUZCV1N4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOb1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEU5QlFVOHNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRXQ3hQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGTkJRVk1zUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR2RDUVVGblFpeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTndRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGTkJRVk1zUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRkZCUVZFc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdGQlFXRXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRha0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFRRVUZUTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3huUWtGQlowSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRjRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeG5Ra0ZCWjBJc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGNFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4TlFVRk5MRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMVlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFpRVUZaTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJoQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVTBGQlV5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmlMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1kwRkJZeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5zUWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRmxCUVZrc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGFFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4cFFrRkJhVUlzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEY2tJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hSUVVGUkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlExb3NUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4bFFVRmxMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMjVDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNaVUZCWlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOdVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEU5QlFVOHNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRXQ3hQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGTkJRVk1zUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR2RDUVVGblFpeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTndRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHZENRVUZuUWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOd1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZWQlFWVXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaQ3hQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGRkJRVkVzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEV2l4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR0ZCUVdFc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGFrSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4bFFVRmxMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMjVDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVVUZCVVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOYUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVTBGQlV5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmlMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1VVRkJVU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5hTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNaVUZCWlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOdVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZOQlFWTXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGVkJRVlVzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWkN4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRkZCUVZFc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdGQlFXRXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRha0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFpRVUZaTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJoQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVlVGQlZTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmtMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1ZVRkJWU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5rTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNZMEZCWXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOc1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdWQlFXVXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRia0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFBRVUZQTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTFnc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hSUVVGUkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlExb3NUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4aFFVRmhMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMnBDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVVUZCVVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOYUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzYVVKQlFXbENMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRM0pDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWMEZCVnl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVObUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVlVGQlZTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmtMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1UwRkJVeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNaMEpCUVdkQ0xFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEzQkNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc2EwSkJRV3RDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNSQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVVVGQlVTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmFMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc2JVSkJRVzFDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNaQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVTBGQlV5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmlMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1lVRkJZU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5xUWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRk5CUVZNc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdGQlFXRXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRha0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFhRVUZYTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJZc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3haUVVGWkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyaENMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1VVRkJVU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5hTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWVUZCVlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOa0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVVVGQlVTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmFMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1kwRkJZeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5zUWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRk5CUVZNc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEU5QlFVOHNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRXQ3hQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGTkJRVk1zUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRlZCUVZVc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFpDeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZkQlFWY3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGVkJRVlVzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWkN4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRmxCUVZrc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGFFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4UFFVRlBMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMWdzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFBRVUZQTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTFnc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3haUVVGWkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyaENMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1VVRkJVU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5hTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNhVUpCUVdsQ0xFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEzSkNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1UwRkJVeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVMEZCVXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVDBGQlR5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTllMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1UwRkJVeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVVUZCVVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOYUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzZDBKQlFYZENMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRelZDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNjMEpCUVhOQ0xFRkJRVUVzVDBGQlR5eERRVUZETzBWQlF6RkNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1UwRkJVeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVMEZCVXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzV1VGQldTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTm9RaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGVkJRVlVzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWkN4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRkZCUVZFc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZOQlFWTXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGZEJRVmNzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWml4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR0ZCUVdFc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGFrSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4bFFVRmxMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMjVDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVVUZCVVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOYUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzV1VGQldTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTm9RaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxFOUJRVThzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEV0N4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRmxCUVZrc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGFFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4alFVRmpMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVMEZCVXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVVVGQlVTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmFMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1VVRkJVU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5hTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNaVUZCWlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOdVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZOQlFWTXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGRkJRVkVzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEV2l4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRkZCUVZFc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZOQlFWTXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGRkJRVkVzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEV2l4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR1ZCUVdVc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGJrSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4UlFVRlJMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMW9zVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFpRVUZaTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJoQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVlVGQlZTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmtMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1owSkJRV2RDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNCQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWjBKQlFXZENMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRM0JDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWVUZCVlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOa0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnNRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHRkJRV0VzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYWtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hsUVVGbExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyNUNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1dVRkJXU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5vUWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRmxCUVZrc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGFFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4dFFrRkJiVUlzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEZGtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hYUVVGWExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyWXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4WlFVRlpMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMmhDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWVUZCVlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOa0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVlVGQlZTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmtMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1YwRkJWeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5tTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWMEZCVnl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVObUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzV1VGQldTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTm9RaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHTkJRV01zUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hqUVVGakxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyeENMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1pVRkJaU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU51UWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR0ZCUVdFc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGFrSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4bFFVRmxMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMjVDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNaVUZCWlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOdVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdkQ1FVRm5RaXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU53UWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRmxCUVZrc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGFFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4alFVRmpMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNZMEZCWXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOc1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdWQlFXVXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRia0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGhRVUZoTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJwQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWVVGQllTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnFRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHMUNRVUZ0UWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOMlFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEhGQ1FVRnhRaXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU42UWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMSEZDUVVGeFFpeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTjZRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxITkNRVUZ6UWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVNeFFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZsQlFWa3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRhRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGpRVUZqTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnNRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHVkJRV1VzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYmtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hwUWtGQmFVSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRja0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeHRRa0ZCYlVJc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGRrSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4dFFrRkJiVUlzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEZGtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3h2UWtGQmIwSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRlRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFJRVUZSTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTFvc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hWUVVGVkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyUXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4aFFVRmhMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMnBDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVVUZCVVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOYUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnNRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHTkJRV01zUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3huUWtGQlowSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRjRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGxRVUZsTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTI1Q0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzYVVKQlFXbENMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRM0pDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNUMEZCVHl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOWUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVVVGQlVTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmFMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1UwRkJVeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVMEZCVXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVTBGQlV5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmlMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1UwRkJVeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVMEZCVXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOaUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVlVGQlZTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmtMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1YwRkJWeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5tTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVVUZCVVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOYUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVVVGQlVTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmFMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1QwRkJUeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5ZTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNUMEZCVHl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOWUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWVVGQllTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnFRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHTkJRV01zUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3h4UWtGQmNVSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRla0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGpRVUZqTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVTBGQlV5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmlMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1QwRkJUeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5ZTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNZVUZCWVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOcVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdOQlFXTXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFhRVUZYTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJZc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hSUVVGUkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlExb3NUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4WlFVRlpMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMmhDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNXVUZCV1N4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOb1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZkQlFWY3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGVkJRVlVzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWkN4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRlZCUVZVc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFpDeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZWQlFWVXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaQ3hQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxFMUJRVTBzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEVml4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR2xDUVVGcFFpeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnlRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHMUNRVUZ0UWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOMlFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEc5Q1FVRnZRaXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU40UWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMSE5DUVVGelFpeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTXhRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxIbENRVUY1UWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVNM1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZGQlFWRXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRXaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHRkJRV0VzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYWtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hsUVVGbExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyNUNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1UwRkJVeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNaVUZCWlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOdVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdsQ1FVRnBRaXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU55UWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRk5CUVZNc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdOQlFXTXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGpRVUZqTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWVVGQllTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnFRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHbENRVUZwUWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOeVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZsQlFWa3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRhRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGhRVUZoTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJwQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzYVVKQlFXbENMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRM0pDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNZMEZCWXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOc1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZkQlFWY3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHVkJRV1VzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYmtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hsUVVGbExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyNUNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc2JVSkJRVzFDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNaQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnNRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHdENRVUZyUWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOMFFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZkQlFWY3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHVkJRV1VzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYmtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3haUVVGWkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyaENMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1owSkJRV2RDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNCQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzV1VGQldTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTm9RaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHdENRVUZyUWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOMFFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEd0Q1FVRnJRaXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU4wUWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRmRCUVZjc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFppeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdWQlFXVXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRia0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGpRVUZqTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVlVGQlZTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmtMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1UwRkJVeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWVUZCVlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOa0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzV1VGQldTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTm9RaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGbEJRVmtzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYUVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hWUVVGVkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyUXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4aFFVRmhMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMnBDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNXVUZCV1N4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOb1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZWQlFWVXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaQ3hQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHVkJRV1VzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYmtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hYUVVGWExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyWXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4WFFVRlhMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMllzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFhRVUZYTEVGQlFVRXNUMEZCVHp0QlFVTnNRaXhCUVVGQkxHRkJRV0VzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYWtJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hWUVVGVkxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyUXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4alFVRmpMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWVUZCVlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOa0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnNRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHdENRVUZyUWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOMFFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZkQlFWY3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRaaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGVkJRVlVzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEWkN4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR05CUVdNc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGJFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4WFFVRlhMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMllzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFhRVUZYTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJZc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hsUVVGbExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyNUNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1owSkJRV2RDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNCQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzYjBKQlFXOUNMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRM2hDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNZMEZCWXl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOc1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZOQlFWTXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHTkJRV01zUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hyUWtGQmEwSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRkRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFhRVUZYTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJZc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hYUVVGWExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyWXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4WlFVRlpMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMmhDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWVUZCVlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOa0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnNRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGbEJRVmtzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYUVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hsUVVGbExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyNUNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1pVRkJaU3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU51UWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRk5CUVZNc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZsQlFWa3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRhRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGhRVUZoTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJwQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVlVGQlZTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmtMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1YwRkJWeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5tTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNVVUZCVVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOYUxFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWlVGQlpTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnVRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxHMUNRVUZ0UWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOMlFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdWQlFXVXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRia0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFhRVUZYTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJZc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hUUVVGVExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEySXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4WFFVRlhMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMllzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeHJRa0ZCYTBJc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGRFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4alFVRmpMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNXVUZCV1N4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOb1FpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEd0Q1FVRnJRaXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU4wUWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR2RDUVVGblFpeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTndRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGbEJRVmtzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYUVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hqUVVGakxFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyeENMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1kwRkJZeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5zUWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMRmRCUVZjc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFppeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdGQlFXRXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRha0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFhRVUZYTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJZc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hoUVVGaExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEycENMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc2FVSkJRV2xDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNKQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWTBGQll5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnNRaXhQUVVGUExFVkJRVVVzVDBGQlR6dERRVU51UWpzN1FVRkRSQ3hCUVVGQkxGbEJRVmtzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEYUVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hsUVVGbExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEyNUNMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc2JVSkJRVzFDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNaQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzYlVKQlFXMUNMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRM1pDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNZVUZCWVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOcVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEdGQlFXRXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRha0lzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeFpRVUZaTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJoQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVjBGQlZ5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTm1MRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc2FVSkJRV2xDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNKQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzWjBKQlFXZENMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRM0JDTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNZVUZCWVN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOcVFpeFBRVUZQTEVWQlFVVXNUMEZCVHp0RFFVTnVRanM3UVVGRFJDeEJRVUZCTEZsQlFWa3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRhRUlzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkJRMFFzUVVGQlFTeGhRVUZoTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTJwQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVlVGQlZTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmtMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1kwRkJZeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5zUWl4UFFVRlBMRVZCUVVVc1QwRkJUenREUVVOdVFqczdRVUZEUkN4QlFVRkJMR05CUVdNc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGJFSXNUMEZCVHl4RlFVRkZMRTlCUVU4N1EwRkRia0k3TzBGQlEwUXNRVUZCUVN4clFrRkJhMElzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEZEVJc1QwRkJUeXhGUVVGRkxFOUJRVTg3UTBGRGJrSTdPMEZCUTBRc1FVRkJRU3hoUVVGaExFRkJRVUVzVDBGQlR5eERRVUZETzBWQlEycENMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc2FVSkJRV2xDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNKQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVTBGQlV5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTmlMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1QwRkJUeXhCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5ZTEU5QlFVOHNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVU5FTEVGQlFVRXNWVUZCVlN4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOa0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVjBGQlZ5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTm1MRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc2EwSkJRV3RDTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTNSQ0xFOUJRVThzUlVGQlJTeFBRVUZQTzBOQlEyNUNPenRCUVVORUxFRkJRVUVzVDBGQlR5eEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTllMRTlCUVU4c1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFVTkVMRUZCUVVFc1YwRkJWeXhCUVVGQkxFOUJRVTg3UVVGRGJFSXNRVUZCUVN4WFFVRlhMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMllzVDBGQlR5eEZRVUZGTEU5QlFVODdRMEZEYmtJN08wRkRlSEpEUkN4VlFVRlZMRU5CUVZZc1lVRkJWVHRGUVVOT0xFRkJRVUVzUlVGQlJUdEpRVUZITEcxQ1FVRnRRaXhGUTNGRFdTeEpRVUZKTEVORWNrTmpMRU5CUVVNN096czdRVUZOTTBRc1FVRkJRU3hMUVVGTExFTkJRVU03UlVGRFJpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCUTJoQ0xGZEJRVmNzUlVOT2VVSXNUVUZCVFN4RlFVRkZMR0ZCUVdFc1JVRkJSU3huUWtGQlowSXNSVUZCUlN4VlFVRlZMRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeFZRVUZWTzBWRVQzSklMRk5CUVZNc1JVRkJSU3hIUVVGSE8wTkJhMGhxUWpzN1FVRjJTRVFzUVVGVlVTeExRVlpJTzBGQlFVd3NRVUZYVVN4TFFWaElMRU5CVjBjc1EwRkJRenRCUVZoVUxFRkJXVkVzUzBGYVNDeERRVmxITEVOQlFVTXNRVUZCUVN4UFFVRlBPMEZCV21oQ0xFRkJZVkVzUzBGaVNDeERRV0ZITEVOQlFVTXNRVUZCUVN4UlFVRlJMRU5CUVVNN1JVRkRUaXhWUVVGVkxFVkJRVVVzVlVGQlZUdERRVU42UWpzN1FVRm1WQ3hCUVc5Q1RTeExRWEJDUkN4RFFXOUNReXhEUVVGRExFVkJjRUpRTEVGQmIwSlRMRXRCY0VKS0xFTkJiMEpKTEUxQlFVMHNSVUZ3UW1Zc1FVRnZRbWxDTEV0QmNFSmFMRU5CYjBKWkxFdEJRVXNzUlVGd1FuUkNMRUZCYjBKM1FpeExRWEJDYmtJc1EwRnZRbTFDTEV0QlFVc3NRMEZCUXp0RlFVTjBRaXhaUVVGWkxFVkJRVVVzV1VGQldUdERRVU16UWpzN1FVRjBRbEFzUVVFd1Fra3NTMEV4UWtNc1FVRXdRa1FzVFVGQlR5eERRVUZETzBWQlEwb3NUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRZanM3UVVFMVFrd3NRVUVyUWtrc1MwRXZRa01zUTBFclFrUXNTMEZCU3p0QlFTOUNWQ3hCUVdkRFNTeExRV2hEUXl4RFFXZERSQ3hMUVVGTExFTkJRVU03UlVGRFJpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zWTBGQll5eEZRVUZGTEUxQlFVMDdSVUZEZEVJc1lVRkJZU3hGUVVGRkxFOUJRVTg3UTBGRGVrSTdPMEZCY2tOTUxFRkJlVU5KTEV0QmVrTkRMRU5CZVVORUxFdEJRVXNzUTBGQlFTeEJRVUZCTEVsQlFVTXNRMEZCU3l4UFFVRlBMRUZCUVZvc1JVRkJZenRGUVVOb1FpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RlFVTmtMRTFCUVUwc1JVRkJSU3hKUVVFeVJEdEZRVU51UlN4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhqUVVGakxFVkJRVVVzVFVGQlRUdEZRVVYwUWl4VlFVRlZMRVZCUVVVc1NVRkJTVHRGUVVOb1FpeE5RVUZOTEVWQlFVVXNUMEZCVHp0RlFVTm1MRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVlVGQlZTeEZRVUZGTEZkQlFWYzdRMEZyUlRGQ096dEJRWFJJVEN4QlFYbERTU3hMUVhwRFF5eERRWGxEUkN4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVDBGQlR5eEJRVUZhTEVOQlkwWXNLMEpCUVdkRExFTkJRVU03UlVWcVJYSkRMRTFCUVUwc1JVUnBSRGhDTEVkQlFVYzdSVU5vUkhaRExGVkJRVlVzUlVGQlJTeFhRVUZYTzBWQlEzWkNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzWVVGQllTeEZRVUZGTEVkQlFUaENPMFZCUXpkRExGZEJRVmNzUlVGQlJTeEpRVUZKTzBOR0swUmFPenRCUVhwRVZDeEJRWGxEU1N4TFFYcERReXhEUVhsRFJDeExRVUZMTEVOQlFVRXNRVUZCUVN4SlFVRkRMRU5CUVVzc1QwRkJUeXhCUVVGYUxFTkJhVUpHTEhOQ1FVRjFRaXhEUVVGRE8wVkJRM0JDTEd0Q1FVRnJRaXhGUVVGRkxFbEJRVWs3UlVGRGVFSXNWVUZCVlN4RlFVRkpMRWxCUVhsRU8wVkZMMFF2UlN4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeE5RVUZOTEVWRU1FTTRRaXhKUVVGdFF6dEZRM3BEZGtVc1MwRkJTeXhGUkRCREswSXNTVUZCYlVNN1JVTjZRM1pGTEZWQlFWVXNSVVF3UXpCQ0xFbEJRVWs3UlVONlEzaERMRTFCUVUwc1JVUXdRemhDTEVkQlFVY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1YwRkJWenRGUTNwRGVrUXNZVUZCWVN4RlFVRkZMRWxCUVVrN1JVRkRia0lzVlVGQlZTeEZRVUZGTEhkRVFVRjNSRHRGUVVOd1JTeFZRVUZWTEVWRWQwTXdRaXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4dFFrRkJORU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zYlVKQlFYbENPMFZEZGtNdlNDeFZRVUZWTEVWQlFVVXNWVUZCVlR0RFJubEVha0k3TzBGQk9VUlVMRUZCZVVOSkxFdEJla05ETEVOQmVVTkVMRXRCUVVzc1EwRkJRU3hCUVVGQkxFbEJRVU1zUTBGQlN5eFBRVUZQTEVGQlFWb3NRMEYzUWtZc2EwSkJRVzFDTEVOQlFVTTdSVVV6UlhoQ0xFMUJRVTBzUlVScFJEaENMRWRCUVVjN1JVTm9SSFpETEZWQlFWVXNSVUZCUlN4WFFVRlhPMFZCUTNaQ0xFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNZVUZCWVN4RlFVRkZMRWRCUVRoQ08wVkJRemRETEZkQlFWY3NSVUZCUlN4SlFVRkpPME5HZVVWYU96dEJRVzVGVkN4QlFYbERTU3hMUVhwRFF5eERRWGxEUkN4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVDBGQlR5eEJRVUZhTEVOQk1rSkdMR3RDUVVGdFFpeERRVUZETzBWRmRrVjRRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TlFVRk5MRVZFTUVNNFFpeEpRVUZ0UXp0RlEzcERka1VzUzBGQlN5eEZSREJESzBJc1NVRkJiVU03UlVONlEzWkZMRlZCUVZVc1JVUXdRekJDTEVsQlFVazdSVU42UTNoRExFMUJRVTBzUlVRd1F6aENMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zVjBGQlZ6dEZRM3BEZWtRc1lVRkJZU3hGUVVGRkxFbEJRVWs3UlVGRGJrSXNWVUZCVlN4RlFVRkZMSGRFUVVGM1JEdEZRVU53UlN4VlFVRlZMRVZFZDBNd1FpeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXh0UWtGQk5FTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNiVUpCUVhsQ08wVkRka012U0N4VlFVRlZMRVZCUVVVc1ZVRkJWVHREUm1sRmFrSTdPMEZCZEVWVUxFRkJlVU5KTEV0QmVrTkRMRU5CZVVORUxFdEJRVXNzUTBGQlFTeEJRVUZCTEVsQlFVTXNRMEZCU3l4UFFVRlBMRUZCUVZvc1EwRm5RMFlzVjBGQldTeERRVUZETzBWQlExUXNUVUZCVFN4RlEyNURjMElzUjBGQlJ6dEZSRzlETDBJc1ZVRkJWU3hGUVVGRkxGZEJRVmM3UlVGRGRrSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hMUVVGTExFVkJRVVVzVjBGQlZ6dERRVU55UWpzN1FVRTVSVlFzUVVGNVEwa3NTMEY2UTBNc1EwRjVRMFFzUzBGQlN5eERRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkxMRTlCUVU4c1FVRkJXaXhEUVhORFJpeG5Ra0ZCYVVJc1EwRkJRenRGUlhwR2RFSXNUVUZCVFN4RlJHbEVPRUlzUjBGQlJ6dEZRMmhFZGtNc1ZVRkJWU3hGUVVGRkxGZEJRVmM3UlVGRGRrSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hoUVVGaExFVkJRVVVzUjBGQk9FSTdSVUZETjBNc1YwRkJWeXhGUVVGRkxFbEJRVWs3UTBaMVJsbzdPMEZCYWtaVUxFRkJlVU5KTEV0QmVrTkRMRU5CZVVORUxFdEJRVXNzUTBGQlFTeEJRVUZCTEVsQlFVTXNRMEZCU3l4UFFVRlBMRUZCUVZvc1EwRjVRMFlzWjBKQlFXbENMRU5CUVVNN1JVVTFSblJDTEUxQlFVMHNSVVJwUkRoQ0xFZEJRVWM3UlVOb1JIWkRMRlZCUVZVc1JVRkJSU3hYUVVGWE8wVkJRM1pDTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1lVRkJZU3hGUVVGRkxFZEJRVGhDTzBWQlF6ZERMRmRCUVZjc1JVRkJSU3hKUVVGSk8wVkdNRVpVTEZWQlFWVXNSVU42Um10Q0xFOUJRVTg3UTBRd1JuUkRPenRCUVhKR1ZDeEJRWGxEU1N4TFFYcERReXhEUVhsRFJDeExRVUZMTEVOQlFVRXNRVUZCUVN4SlFVRkRMRU5CUVVzc1QwRkJUeXhCUVVGYUxFTkJOa05HTEZkQlFWa3NRMEZCUXp0RlJYcEdha0lzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1RVRkJUU3hGUkRCRE9FSXNTVUZCYlVNN1JVTjZRM1pGTEV0QlFVc3NSVVF3UXl0Q0xFbEJRVzFETzBWRGVrTjJSU3hWUVVGVkxFVkVNRU13UWl4SlFVRkpPMFZEZWtONFF5eE5RVUZOTEVWRU1FTTRRaXhIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZETEZkQlFWYzdSVU42UTNwRUxHRkJRV0VzUlVGQlJTeEpRVUZKTzBWQlEyNUNMRlZCUVZVc1JVRkJSU3gzUkVGQmQwUTdSVUZEY0VVc1ZVRkJWU3hGUkhkRE1FSXNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zYlVKQlFUUkRMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRzFDUVVGNVFqdEZRM1pETDBnc1ZVRkJWU3hGUVVGRkxGVkJRVlU3UlVadlJtUXNWVUZCVlN4RlFVRkZMRU5CUVVNN1EwRkRhRUk3TzBGQk1VWlVMRUZCZVVOSkxFdEJla05ETEVOQmVVTkVMRXRCUVVzc1EwRkJRU3hCUVVGQkxFbEJRVU1zUTBGQlN5eFBRVUZQTEVGQlFWb3NRMEZyUkVZc1lVRkJZeXhEUVVGRE8wVkJRMWdzVDBGQlR5eEZRVUZGTEVsQlFVazdRMEZEYUVJN08wRkJOMFpVTEVGQmVVTkpMRXRCZWtORExFTkJlVU5FTEV0QlFVc3NRMEZCUVN4QlFVRkJMRWxCUVVNc1EwRkJTeXhQUVVGUExFRkJRVm9zUTBGMVJFWXNUVUZCVHl4RFFVRkRPMFZCUTBvc1QwRkJUeXhGUVVGRkxFTkJRVU03UTBGRFlqczdRVUZzUjFRc1FVRjVRMGtzUzBGNlEwTXNRMEY1UTBRc1MwRkJTeXhEUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEU5QlFVOHNRVUZCV2l4RFFUQkVSaXhyUWtGQmJVSXNRMEZCUXp0RlFVTm9RaXhOUVVGTkxFVkJRVVVzUTBGQlF6dERRVU5hT3p0QlFYSkhWQ3hCUVhsRFNTeExRWHBEUXl4RFFYbERSQ3hMUVVGTExFTkJRVUVzUVVGQlFTeEpRVUZETEVOQlFVc3NUMEZCVHl4QlFVRmFMRU5CTmtSR0xGVkJRVmNzUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZEWkN4alFVRmpMRVZCUVVVc1IwRkJSenREUVVOMFFqczdRVUY0UjFRc1FVRjVRMGtzUzBGNlEwTXNRMEY1UTBRc1MwRkJTeXhEUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEU5QlFVOHNRVUZCV2l4RFFXdEZSaXhQUVVGUkxFRkJRMG9zYzBKQlFYVkNMRU5CUVVNN1JVVndSMmhETEZWQlFWVXNSVVJpTUVJc1QwRkJUenRGUTJNelF5eFpRVUZaTEVWRWIwTjNRaXhKUVVGSk8wVkRia040UXl4VFFVRlRMRVZCUVVVc1YwRkJjVU03UTBadlIzWkRPenRCUVRsSFlpeEJRWGxEU1N4TFFYcERReXhEUVhsRFJDeExRVUZMTEVOQlFVRXNRVUZCUVN4SlFVRkRMRU5CUVVzc1QwRkJUeXhCUVVGYUxFTkJhMFZHTEU5QlFWRXNRVUZKU2l4clFrRkJiVUlzUTBGQlF6dEZSWFpITlVJc1ZVRkJWU3hGUkdJd1FpeFBRVUZQTzBWRFl6TkRMRmxCUVZrc1JVUnZRM2RDTEVsQlFVazdSVU51UTNoRExGTkJRVk1zUlVGQlJTeFhRVUZ4UXp0RFJuVkhka003TzBGQmFraGlMRUZCZVVOSkxFdEJla05ETEVOQmVVTkVMRXRCUVVzc1EwRkJRU3hCUVVGQkxFbEJRVU1zUTBGQlN5eFBRVUZQTEVGQlFWb3NRMEZyUlVZc1QwRkJVU3hCUVU5S0xGZEJRVmtzUTBGQlF6dEZSVEZIY2tJc1ZVRkJWU3hGUkdJd1FpeFBRVUZQTzBWRFl6TkRMRmxCUVZrc1JVUnZRM2RDTEVsQlFVazdSVU51UTNoRExGTkJRVk1zUlVGQlJTeFhRVUZ4UXp0RFJqQkhka003TzBGQlRXSXNRVUZCWVN4WlFVRkVMRU5CUVVNc1MwRkJTeXhEUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEU5QlFVOHNRVUZCV2l4RFFVRmhMRlZCUVZVc1FVRkJRU3hOUVVGTkxFTkJRVU03UlVGRE4wTXNUMEZCVHl4RlFVRkZMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zZDBKQlFUWkRPME5CUTNCRk96dEJRVWRFTEVGQlFXRXNXVUZCUkN4RFFVRkRMRXRCUVVzc1EwRkJRU3hCUVVGQkxFbEJRVU1zUTBGQlN5eFBRVUZQTEVGQlFWb3NRMEZCWVN4VlFVRlZMRUZCUVVFc1RVRkJUU3hEUVVGRE8wVkJRemRETEU5QlFVOHNSVUZCUlN4SFFVRkhMRU5CUVVNc1RVRkJUU3hEUVVGRExITkNRVUUyUXp0RFFVTndSVHM3UVVGSFJDeEJRVUZCTEdOQlFXTXNRMEZCUXp0RlFVTllMRWxCUVVrc1JVRkJSU3gzUWtGQmQwSTdSVUZET1VJc1VVRkJVU3hGUVVGRkxFMUJRVTA3UlVGSldpeFJRVUZSTEVWQlFVVXNiVUpCUVcxQ08wVkJRemRDTEU5QlFVOHNSVUZCUlN4WlFVRlpPMFZCUTNKQ0xFMUJRVTBzUlVGQlJTeFpRVUZaTzBWQlEzQkNMRTFCUVUwc1JVRkJSU3hqUVVGak8wVkJRM1JDTEV0QlFVc3NSVUZCUlN4alFVRmpPME5CVVRWQ096dEJRVWRFTEVGQlFVRXNiMEpCUVc5Q0xFTkJRVU03UlVGRGFrSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVlVGQlZTeEZRVUZGTEVsQlFVazdSVUZEYUVJc1lVRkJZU3hGUVVGRkxFOUJRVTg3UTBGRGVrSTdPMEZCUjBRc1FVRkJRU3hyUWtGQmEwSXNRMEZCUXp0RlFVTm1MR05CUVdNc1JVRkJSU3hOUVVGTk8wVkJRVWNzVlVGQlZUdEZRVU51UXl4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxHRkJRV0VzUlVGQlJTeFBRVUZQTzBWQlIzUkNMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEU5QlFVOHNSVUZCUlN4RFFVRkRPME5CYTBKaU96dEJRWHBDUkN4QlFWTkpMR3RDUVZSakxFTkJVMlFzVFVGQlRTeERRVUZETzBWQlEwZ3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUjBGQlJ5eEZRVUZGTEVOQlFVTTdSVUZEVGl4SlFVRkpMRVZCUVVVc1EwRkJRenRGUVVOUUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEZkQlFWY3NSVUZCUlN4SlFVRkpPME5CUTNCQ096dEJRV3BDVEN4QlFXOUNUU3hyUWtGd1Fsa3NSMEZ2UWxvc1IwRkJSeXhEUVVGRE8wVkJRMFlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1kwRkJZeXhGUVVGRkxFbEJRVWs3UlVGRGNFSXNVMEZCVXl4RlFVRkZMRzFDUVVGdFFqdERRVU5xUXpzN1FVRkhUQ3hCUVVGNVFpeExRVUZ3UWl4RFFVRkRMR3RDUVVGclFpeERRVUZETEUxQlFVMHNRMEZCUXp0RlFVTTFRaXhqUVVGakxFVkJRVVVzU1VGQlNUdERRVU4yUWpzN1FVRkxSQ3hCUVVGTkxFdEJRVVFzUTBGQlF5eExRVUZMTEVGQlFVRXNiME5CUVc5RExFTkJRVU03UlVGRE5VTXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGQlEwUXNRVUZCUVN4bFFVRmxMRU5CUVVNN1JVRkRXaXhQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNTVUZCU1N4RlFVRkZMRU5CUVVNN1JVRkRVQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEU5QlFVOHNSVUZCUlN4SlFVRXlRanRGUVVOd1F5eFRRVUZUTEVWQlFVVXNhVUpCUVhkRE8wVkJRMjVFTEZWQlFWVXNSVUZCUlN4clFrRkJhMEk3UlVGRE9VSXNTMEZCU3l4RlF6Rk5LMElzU1VGQlNUdEZSREpOZUVNc1UwRkJVeXhGUXk5Tk1rSXNTVUZCU1R0RlJHZE9lRU1zVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc1YwRkJWeXhGUVVGRkxFZEJRVWM3UTBGblFtNUNPenRCUVRWQ1JDeEJRV05KTEdWQlpGY3NRMEZqV0N4SlFVRkpMRU5CUVVNN1JVRkRSQ3hoUVVGaExFVkJRVVVzUjBGQlJ6dEZRVU5zUWl4UFFVRlBMRVZCUVVVc1IwRkJaME1zUTBNeFRWUXNTVUZCU1R0RlJESk5jRU1zVlVGQlZTeEZRMjVPYzBJc2EwSkJRWGRDTzBWRWIwNTRSQ3h2UWtGQmIwSXNSVUZCUlN4TFFVRkxPMFZCUXpOQ0xGZEJRVmNzUlVGQlJTeEpRVUZKTzBOQlEzQkNPenRCUVhCQ1RDeEJRWEZDU1N4bFFYSkNWeXhEUVhGQ1dDeEpRVUZKTEVGQlFVRXNUVUZCVFN4RFFVRkRPMFZCUTFBc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGRGFFSTdPMEZCUlVRc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmVrSTFRaXhCUVVGQkxHVkJRV1VzUTBGQlF6dEpRVEJDVWl4VFFVRlRMRVZEZWs1MVFpeEpRVUZuUXp0SFJESk9ka1U3T3p0QlFVTkVMRUZCUVhWQ0xITkNRVUZFTEVOQlFVTXNaVUZCWlN4RFFVRkRPMFZCUTI1RExFOUJRVThzUlVGQlJTeExRVUZMTzBOQlEycENPenRCUVVORUxFRkJRWEZDTEc5Q1FVRkVMRU5CUVVNc1pVRkJaU3hEUVVGRE8wVkJRMnBETEZOQlFWTXNSVUZCUlN4cFFrRkJkME03UTBGRGRFUTdPMEZCUlVRc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQlEzSkNMRUZCUVhsQ0xIZENRVUZFTEVOQlFVTXNaVUZCWlN4RFFVRkRPMGxCUTNKRExGTkJRVk1zUlVOd1QzVkNMRWxCUVRCQ08wZEVjVTgzUkRzN08wRkJUVXdzUVVGQlRTeExRVUZFTEVOQlFVTXNkMEpCUVhkQ0xFTkJRVU03UlVGRE0wSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGQlIwUXNRVUZCUVN4bFFVRmxMRU5CUVVNN1JVRkRXaXhQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEZkQlFWY3NSVUZCUlN4TlFVRk5PMFZCUTI1Q0xGZEJRVmNzUlVGQlJTeERRVUZETzBWQlEyUXNWVUZCVlN4RlFVRkZMRTFCUVUwN1EwRTJSSEpDT3p0QlFXcEZSQ3hCUVU5TkxHVkJVRk1zUjBGUFZDeE5RVUZOTzBGQlVGb3NRVUZSU1N4bFFWSlhMRU5CVVZnc1pVRkJaVHRCUVZKdVFpeEJRVk5KTEdWQlZGY3NRMEZUV0N4WFFVRlhMRU5CUVVNN1JVRkRVaXhYUVVGWExFVkJRVVVzUjBGQk1rSTdRMEZMTTBNN08wRkJaa3dzUVVGUFRTeGxRVkJUTEVkQlQxUXNUVUZCVFN4QlFVdE9MRmxCUVdVN1FVRmFja0lzUVVGUlNTeGxRVkpYTEVOQlVWZ3NaVUZCWlN4QlFVbGlMRmxCUVdVN1FVRmFja0lzUVVGVFNTeGxRVlJYTEVOQlUxZ3NWMEZCVnl4QlFVZFVMRmxCUVdVc1EwRkJRenRGUVVOV0xGZEJRVmNzUlVGQlJTeERRVUZETzBOQlEycENPenRCUVdSVUxFRkJaMEpKTEdWQmFFSlhMRU5CWjBKWUxHRkJRV0VzUTBGQlF6dEZRVU5XTEZkQlFWY3NSVUZCUlN4SFFVRXlRanREUVVNelF6czdRVUZzUWt3c1FVRnRRa2tzWlVGdVFsY3NSVUZ0UWxnc1FVRkJRU3hUUVVGRExFTkJRVlVzVDBGQlR5eEJRVUZxUWl4RlFVRnRRanRGUVVOb1FpeFhRVUZYTEVWQlFVVXNRMEZCUXp0RFFVTnFRanM3UVVGeVFrd3NRVUYzUWtrc1pVRjRRbGNzUTBGM1FsZ3NUVUZCVFN4RFFVRkRPMFZCUTBnc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRmxCUVZrN1JVRkRja0lzVjBGQlZ5eEZRVUZGTEVOQlFVTTdSVUZEWkN4UlFVRlJMRVZCUVVVc1QwRkJUenRGUVVOcVFpeGpRVUZqTEVWQlFVVXNUVUZCVFR0RlFVTjBRaXhQUVVGUExFVkJRVVVzUjBGQk5FSTdSVUZEY2tNc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGRFZDeFZRVUZWTEVWQlFVVXNWMEZCVnp0RlFVTjJRaXhoUVVGaExFVkJRVVVzUjBGQlJ6dEZRVU5zUWl4TlFVRk5MRVZCUVVVc1QwRkJUenRGUVVObUxGVkJRVlVzUlVGQlJTeHhSRUZCY1VRN1JVRkRha1VzUzBGQlN5eEZRVUZGTEU5QlFVODdRMEZoYWtJN08wRkJha1JNTEVGQmMwTlJMR1ZCZEVOUExFTkJkMEpZTEUxQlFVMHNRMEZqUml4SFFVRkhMRU5CUVVNN1JVRkRRU3hMUVVGTExFVkRjRkoxUWl4SlFVRkpPMFZFY1ZKb1F5eE5RVUZOTEVWRGNsSnpRaXhKUVVGSk8wVkVjMUpvUXl4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVOa0xFbEJRVWtzUlVGQlJTeFpRVUZaTzBOQlEzSkNPenRCUVRORFZDeEJRWGRDU1N4bFFYaENWeXhEUVhkQ1dDeE5RVUZOTEVGQmMwSkdMRTFCUVU4c1EwRkJRenRGUVVOS0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlEySTdPMEZCYUVSVUxFRkJiMFJKTEdWQmNFUlhMRU5CYjBSWUxITkNRVUZ6UWp0QlFYQkVNVUlzUVVGeFJFa3NaVUZ5UkZjc1EwRnhSRmdzV1VGQldUdEJRWEpFYUVJc1FVRnpSRWtzWlVGMFJGY3NRMEZ6UkZnc2EwSkJRV3RDTEVOQlFVTTdSVUZEWml4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVOb1FqczdRVUZGUkN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFeFJEVkNMRUZCTWtSVkxHVkJNMFJMTEVkQk1rUk1MRTFCUVUwN1JVRXpSR2hDTEVGQk5FUlJMR1ZCTlVSUExFTkJORVJRTEdWQlFXVTdSVUUxUkhaQ0xFRkJOa1JSTEdWQk4wUlBMRU5CTmtSUUxGZEJRVmNzUTBGQlF6dEpRVU5TTEZkQlFWY3NSVU14VTJsQ0xFbEJRVWs3UjBReVUyNURPenM3UVVGSlZDeEJRVUZ4UWl4dlFrRkJSQ3hEUVVGRExHVkJRV1VzUTBGQlF6dEZRVU5xUXl4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xHTkJRV01zUlVGQlJTeEpRVUZKTzBOQlEzWkNPenRCUVVkRUxFRkJRV0VzV1VGQlJDeERRVUZETEdWQlFXVXNRMEZCUXp0RlFVTjZRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4SlFVRkpMRVZCUVVVc1EwRkJRenRGUVVOUUxFdEJRVXNzUlVGQlJTeERRVUZETzBWQlExSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hQUVVGUExFVkJRVVVzU1VGQk1rSXNRME14VkVFc1NVRkJTU3hEUVVGS0xFbEJRVWs3UlVReVZIaERMRlZCUVZVc1JVRkJSU3huUkVGQmQwYzdSVUZEY0Vnc2VVSkJRWGxDTEVWQlFVVXNUMEZCVHp0RlFVTnNReXd3UWtGQk1FSXNSVUZCUlN4UFFVRlBPMFZCUTI1RExFdEJRVXNzUlVNelZDdENMRWxCUVVrN1JVUTBWSGhETEZWQlFWVXNSVUZCUlN4blFrRkJaMEk3UTBGVkwwSTdPMEZCY0VKRUxFRkJXVWtzV1VGYVVTeERRVUZETEdWQlFXVXNRMEZaZUVJc1RVRkJUU3hCUVVWR0xGVkJRVmNzUVVGQlFTeE5RVUZOTEVWQlpIcENMRUZCV1Vrc1dVRmFVU3hEUVVGRExHVkJRV1VzUTBGWmVFSXNUVUZCVFN4QlFVZEdMRTFCUVU4c1EwRkJRenRGUVVOS0xGVkJRVlVzUlVOeVZtdENMRTlCUVU4N1JVUnpWbTVETEV0QlFVc3NSVU5zVlhWQ0xFbEJRVWs3UTBSdFZXNURPenRCUVV0VUxFRkJRV0VzV1VGQlJDeERRVUZETEdWQlFXVXNRMEZCUXp0RlFVTjZRaXhQUVVGUExFVkROMVUyUWl4SlFVRkpPMFZFT0ZWNFF5eGhRVUZoTEVWQlFVVXNUMEZCVHp0RlFVTjBRaXhWUVVGVkxFVkRlbFV3UWl4SlFVRkpPMFZFTUZWNFF5eE5RVUZOTEVWRGVsVTRRaXhIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVODdSVVF3VlhKRUxFdEJRVXNzUlVONlZTdENMRTlCUVU4N1EwUnRWamxET3p0QlFXWkVMRUZCVDBrc1dVRlFVU3hEUVVGRExHVkJRV1VzUTBGUGVFSXNUVUZCVFN4QlFVVkdMRlZCUVZjc1FVRkJRU3hOUVVGTkxFVkJWSHBDTEVGQlQwa3NXVUZRVVN4RFFVRkRMR1ZCUVdVc1EwRlBlRUlzVFVGQlRTeEJRVWRHTEUxQlFVOHNRMEZCUXp0RlFVTktMRlZCUVZVc1JVTjJWMnRDTEU5QlFVODdSVVIzVjI1RExFdEJRVXNzUlVNdlZYVkNMRWxCUVVrN1EwUm5WbTVET3p0QlFVdFVMRUZCUVVFc2FVSkJRV2xDTEVOQlFVTTdSVUZEWkN4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzUjBGQlJ5eEZRVUZGTEVkQlFVYzdSVUZEVWl4SlFVRkpMRVZCUVVVc1IwRkJSenRGUVVOVUxGTkJRVk1zUlVGQlJTeHhRa0ZCY1VJN1JVRkRhRU1zVDBGQlR5eEZRM0pYTmtJc1NVRkJTVHRGUkhOWGVFTXNWVUZCVlN4RlEzUllNRUlzVDBGQlR6dEZSSFZZTTBNc1RVRkJUU3hGUVVGRkxITkNRVUZ6UWp0RlFVTTVRaXhoUVVGaExFVkJRVVVzU1VGQlNUdEZRVU51UWl4VlFVRlZMRVZCUVVVc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNiVUpCUVhsQ08wVkJReTlETEV0QlFVc3NSVU4yVnl0Q0xFbEJRVWs3UlVSM1YzaERMRlZCUVZVc1JVRkJSU3haUVVGWk8wTkJZek5DT3p0QlFUTkNSQ3hCUVdWSkxHbENRV1poTEVOQlpXSXNSMEZCUnl4RFFVRkRPMFZCUTBFc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNTVUZCU1N4RlFVRkZMRWRCUVVjN1JVRkRWQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1QwRkJUeXhGUVVGRkxFdEJRVXM3UlVGRFpDeEpRVUZKTEVWQlFVVXNXVUZCV1R0RFFVTnlRanM3UVVGMFFrd3NRVUYzUWtrc2FVSkJlRUpoTEVGQmQwSmlMRTFCUVU4c1EwRkJRenRGUVVOS0xFOUJRVThzUlVGQlJTeEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMSGRDUVVFMlF6dERRVU53UlRzN1FVRkZUQ3hCUVVGTkxFdEJRVVFzUTBGQlF5eHBRa0ZCYVVJc1EwRkJRenRGUVVOd1FpeFBRVUZQTEVWQlFVVXNXVUZCV1R0RFFVTjRRanM3UVVGRFJDeEJRVUZoTEZsQlFVUXNRMEZCUXl4cFFrRkJhVUlzUTBGQlF6dEZRVU16UWl4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVOb1FqczdRVUZEUkN4QlFVRmxMR05CUVVRc1EwRkJReXhwUWtGQmFVSXNRMEZCUXp0RlFVTTNRaXhQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEZWQlFWVXNSVUZCUlN4TlFVRk5PME5CUTNKQ096dEJRVWRFTEVGQlFXZENMR1ZCUVVRc1JVRkJReXhCUVVGQkxGTkJRVU1zUTBGQlZTeFBRVUZQTEVGQlFXcENPMEZCUTJwQ0xFRkJRU3RDTEdOQlFXcENMRU5CUVVNc1pVRkJaU3hGUVVGRExFRkJRVUVzVTBGQlF5eERRVUZWTEUxQlFVMHNRVUZCYUVJc1JVRkJhMEk3UlVGRE9VTXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGQlEwUXNRVUZCSzBJc1kwRkJha0lzUTBGQlF5eGxRVUZsTEVWQlFVTXNRVUZCUVN4VFFVRkRMRU5CUVZVc1QwRkJUeXhCUVVGcVFpeEZRVUZ0UWp0RlFVTXZReXhQUVVGUExFVkJRVVVzV1VGQldUdERRVU40UWpzN1FVRkhSQ3hCUVVGNVFpeDNRa0ZCUkN4RFFVRkRMSE5DUVVGelFqdEJRVU12UXl4QlFVRTJRaXhaUVVGcVFpeERRVUZETEdWQlFXVXNRMEZCUXl4WlFVRlpPMEZCUTNwRExFRkJRWFZETEhOQ1FVRnFRaXhEUVVGRExHVkJRV1VzUTBGQlF5eHJRa0ZCYTBJc1EwRkJRenRGUVVOMFJDeFBRVUZQTEVWQlFVVXNTMEZCU3p0RFFVdHFRanM3UVVGU1JDeEJRVXRSTEhkQ1FVeG5RaXhEUVVGRExITkNRVUZ6UWl4SFFVdDJReXhIUVVGSE8wRkJTbGdzUVVGSlVTeFpRVXBKTEVOQlFVTXNaVUZCWlN4RFFVRkRMRmxCUVZrc1IwRkpha01zUjBGQlJ6dEJRVWhZTEVGQlIxRXNjMEpCU0dNc1EwRkJReXhsUVVGbExFTkJRVU1zYTBKQlFXdENMRWRCUjJwRUxFZEJRVWNzUTBGQlF6dEZRVU5LTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJoQ096dEJRVWxNTEVGQlFVMHNTMEZCUkN4RlFVRkRMRUZCUVVFc1UwRkJReXhEUVVGVkxGVkJRVlVzUVVGQmNFSTdRVUZEVUN4QlFVRk5MRXRCUVVRc1JVRkJReXhCUVVGQkxGTkJRVU1zUTBGQlZTeFpRVUZaTEVGQlFYUkNMRVZCUVhkQ08wVkJRek5DTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJoQ096dEJRVU5FTEVGQlFYZENMSFZDUVVGRUxFVkJRVU1zUVVGQlFTeFRRVUZETEVOQlFWVXNWVUZCVlN4QlFVRndRanRCUVVONlFpeEJRVUV3UWl4NVFrRkJSQ3hGUVVGRExFRkJRVUVzVTBGQlF5eERRVUZWTEZsQlFWa3NRVUZCZEVJc1JVRkJkMEk3UlVGREwwTXNUMEZCVHl4RlFVRkZMRmxCUVZrN1EwRkRlRUk3TzBGQlNVUXNRVUZCUVN4alFVRmpMRU5CUVVNN1JVRkRXQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NZVUZCWVN4RlFVRkZMRWxCUVRKQ08wVkJRekZETEU5QlFVOHNSVU16V2paQ0xFZEJRVEpDTEVORU1scG9ReXhMUVVFMlFqdEZRVU0xUkN4alFVRmpMRVZCUVVVc1NVRkJTVHRGUVVWd1FpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRlZCUVZVc1JVTnFZVEJDTEd0Q1FVRjNRanRGUkd0aE5VUXNZVUZCWVN4RlF6bGFkVUlzUjBGQlJ6dEZSR2RoZGtNc1MwRkJTeXhGUTI1aEswSXNTVUZCU1R0RlJHOWhlRU1zVTBGQlV5eEZRemxpTWtJc1NVRkJTVHRGUkN0aWVFTXNWMEZCVnl4RlFVRkZMRWRCUVVjN1JVRkZhRUlzVTBGQlV5eEZRVUZGTEhGQ1FVRnhRaXhEUVVGRExGVkJRVk03UlVGRE1VTXNaMEpCUVdkQ0xFVkJRVVVzVVVGQlVUdEZRVU14UWl4VlFVRlZMRVZCUVVVc05FTkJRVFJETzBOQmEwSXpSRHM3UVVGd1EwUXNRVUZ2UWtrc1kwRndRbFVzUVVGdlFsWXNVVUZCVXl4RFFVRkRPMFZCUlU0c1QwRkJUeXhGUVVGRkxFVkJRVVU3UlVGRFdDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhMUVVGTExFVkJRVVVzUTBGQlF6dEZRVU5TTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1NVRkJTU3hGUVVGRkxFZEJRVWM3UlVGRFZDeFRRVUZUTEVWQlFVVXNaMEpCUVdkQ08wVkJSek5DTEUxQlFVMHNSVU51WWpCQ0xFbEJRVWM3UlVSdlltNURMRmxCUVZrc1JVTndZbTlDTEVkQlFVY3NRMFJ2WWtrc1MwRkJTeXhEUVVGRExGZEJRVmM3UlVGRGVFUXNWVUZCVlN4RlEzSmljMElzUjBGQlJ5eERSSEZpUlN4TFFVRkxMRU5EZUdKV0xHdENRVUYzUWp0RlJIbGllRVFzVjBGQlZ5eEZRM1JpY1VJc1IwRkJSeXhEUkhOaVJ5eExRVUZMTEVOQlFVTXNWMEZCVnp0RlFVTjJSQ3hQUVVGUExFVkJRVVVzUTBGQlF6dERRVU5pT3p0QlFVVk1MRUZCUVcxQ0xFdEJRV1FzUTBGQlF5eE5RVUZOTEVGQlFVRXNUVUZCVFN4RFFVRkRMR05CUVdNN1FVRkRha01zUVVGQk5rSXNTMEZCZUVJc1EwRkJReXhOUVVGTkxFRkJRVUVzVlVGQlZTeEJRVUZCTEUxQlFVMHNRMEZCUXl4alFVRmpPMEZCUXpORExFRkJRVUVzZFVKQlFYVkNMRU5CUVVNN1JVRkRjRUlzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4VFFVRlRMRVZCUVVVc2EwSkJRV3RDTEVOQlFVTXNVVUZCVVR0RFFVTjZRenM3UVVGRFJDeEJRVUZ0UWl4TFFVRmtMRU5CUVVNc1RVRkJUU3hCUVVGQkxFMUJRVTBzUTBGQlF5eGpRVUZqTEVOQlFVTTdSVUZET1VJc1QwRkJUeXhGUVVGRkxFTkJRVU03UTBGRFlqczdRVUZIUkN4QlFVRnRReXhsUVVGd1FpeERRVUZETEUxQlFVMHNRVUZCUVN4WlFVRlpMRU5CUVVNc1kwRkJZeXhEUVVGRE8wVkJRemxETEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1UwRkJVeXhGUVVGRkxHdENRVUZyUWl4RFFVRkRMRlZCUVZNN1JVRkRka01zWjBKQlFXZENMRVZCUVVVc1RVRkJUVHREUVVzelFqczdRVUZTUkN4QlFVRnRReXhsUVVGd1FpeERRVUZETEUxQlFVMHNRVUZCUVN4WlFVRlpMRU5CUVVNc1kwRkJZeXhCUVVzM1F5eFJRVUZUTEVOQlFVTTdSVUZEVGl4SlFVRkpMRVZCUVVVc1NVRkJjVVE3UTBGRE9VUTdPMEZCU1V3c1FVRkJhME1zWlVGQmJrSXNRMEZCUXl4TlFVRk5MRUZCUVVFc1YwRkJWeXhEUVVGRExHTkJRV01zUTBGQlF6dEZRVU0zUXl4TFFVRkxMRVZCUVVVc1EwRkJRenRGUVVOU0xGTkJRVk1zUlVGQlJTeHJRa0ZCYTBJc1EwRkJReXhWUVVGVE8wVkJRM1pETEdkQ1FVRm5RaXhGUVVGRkxGTkJRVk03UTBGUE9VSTdPMEZCVmtRc1FVRkJhME1zWlVGQmJrSXNRMEZCUXl4TlFVRk5MRUZCUVVFc1YwRkJWeXhEUVVGRExHTkJRV01zUVVGTE5VTXNVVUZCVXl4RFFVRkRPMFZCUTA0c1NVRkJTU3hGUVVGRkxFbEJRVWs3UlVGRFZpeExRVUZMTEVWQlFVVXNTVUZCY1VRN1JVRkROVVFzVTBGQlV5eEZRVUZGTEdWQlFXVTdRMEZETjBJN08wRkJSMHdzUVVGRldTeGxRVVpITEVOQlFVTXNUVUZCVFN4QlFVRkJMRmxCUVZrc1FVRkZMMElzVFVGQlVTeERRVUZETEdOQlFXTTdRVUZHTVVJc1FVRkhjMElzWlVGSVVDeERRVUZETEUxQlFVMHNRVUZCUVN4WlFVRlpMRUZCUnk5Q0xGVkJRVmtzUVVGQlFTeE5RVUZOTEVOQlFVTXNZMEZCWXp0QlFVaHdReXhCUVVsSkxHVkJTbGNzUTBGQlF5eE5RVUZOTEVGQlFVRXNXVUZCV1N4RFFVazVRaXgxUWtGQmRVSTdRVUZJTTBJc1FVRkRXU3hsUVVSSExFTkJRVU1zVFVGQlRTeEJRVUZCTEZkQlFWY3NRVUZET1VJc1RVRkJVU3hEUVVGRExHTkJRV003UVVGRU1VSXNRVUZGYzBJc1pVRkdVQ3hEUVVGRExFMUJRVTBzUVVGQlFTeFhRVUZYTEVGQlJUbENMRlZCUVZrc1FVRkJRU3hOUVVGTkxFTkJRVU1zWTBGQll6dEJRVVp3UXl4QlFVZEpMR1ZCU0Zjc1EwRkJReXhOUVVGTkxFRkJRVUVzVjBGQlZ5eERRVWMzUWl4MVFrRkJkVUlzUTBGQlF6dEZRVU53UWl4VFFVRlRMRVZCUVVVc1pVRkJaU3hEUVVGRExGRkJRVkU3UTBGRGRFTTdPMEZCVFV3c1FVRkJRU3hsUVVGbExFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVsQlFVa3NSVUZCUlN4RFFVRkRPME5CY1VKV096dEJRWGhDUkN4QlFVdEpMR1ZCVEZjc1EwRkxXQ3hMUVVGTExFTkJRVUVzUVVGQlFTeEpRVUZETEVOQlFVc3NUMEZCVHl4QlFVRmFMRVZCUVdNN1JVRkRhRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFTkJRVU03UTBGWFlqczdRVUZzUWt3c1FVRkxTU3hsUVV4WExFTkJTMWdzUzBGQlN5eERRVUZCTEVGQlFVRXNTVUZCUXl4RFFVRkxMRTlCUVU4c1FVRkJXaXhEUVVsR0xDdENRVUZuUXl4RFFVRkRPMFZCUXpkQ0xGVkJRVlVzUlVGQlJTeFhRVUZYTzBOQlF6RkNPenRCUVZoVUxFRkJTMGtzWlVGTVZ5eERRVXRZTEV0QlFVc3NRMEZCUVN4QlFVRkJMRWxCUVVNc1EwRkJTeXhQUVVGUExFRkJRVm9zUTBGUFJpeHJRa0ZCYlVJc1EwRkJRenRGUVVOb1FpeFZRVUZWTEVWQlFVVXNWMEZCVnp0RFFVTXhRanM3UVVGa1ZDeEJRVXRKTEdWQlRGY3NRMEZMV0N4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVDBGQlR5eEJRVUZhTEVOQlZVWXNaMEpCUVdsQ0xFTkJRVU03UlVGRFpDeFZRVUZWTEVWQlFVVXNWMEZCVnp0RFFVTXhRanM3UVVGcVFsUXNRVUZ4UWtrc1pVRnlRbGNzUTBGeFFsZ3NZMEZCWXl4RFFVRkRPMFZCUTFnc1NVRkJTU3hGUVVGRkxFTkJRVU03UTBGRFZqczdRVUZGVEN4QlFVRk5MRXRCUVVRc1EwRkJReXhsUVVGbExFTkJRVU03UlVGRGJFSXNUMEZCVHl4RlFVRkZMRmxCUVZrN1EwRkRlRUk3TzBGQlJVUXNRVUZCUVN4MVFrRkJkVUk3UVVGRGRrSXNRVUZCUVN4MVFrRkJkVUk3UVVGRGRrSXNRVUZCUVN4elFrRkJjMElzUTBGQlF6dEZRVU51UWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRWRCUVVjc1JVRkJSU3hIUVVGSE8wVkJRMUlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZEYUdkQ09FSXNSMEZCUnp0RlJHbG5RblpETEUxQlFVMHNSVUZCU1N4SlFVRTBRaXhEUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzBWQlF6TkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzWTBGQll5eEZRVUZGTEVkQlFVYzdSVUZEYmtJc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhoUVVGaExFVkJRVVVzUzBGQlN6dERRV3RDZGtJN08wRkJMMEpFTEVGQlpVa3NkVUpCWm0xQ0xFRkJaWEpDTEhOQ1FVRjVRanRCUVdRelFpeEJRV05KTEhWQ1FXUnRRaXhCUVdOeVFpeHpRa0ZCZVVJN1FVRmlNMElzUVVGaFNTeHpRa0ZpYTBJc1FVRmhjRUlzYzBKQlFYbENMRU5CUVVNN1JVRkRjRUlzVlVGQlZTeEZRVUZGTEZkQlFWYzdRMEZETVVJN08wRkJha0pNTEVGQmEwSkpMSFZDUVd4Q2JVSXNRVUZyUW5KQ0xIZENRVUV5UWp0QlFXcENOMElzUVVGcFFra3NkVUpCYWtKdFFpeEJRV2xDY2tJc2QwSkJRVEpDTzBGQmFFSTNRaXhCUVdkQ1NTeHpRa0ZvUW10Q0xFRkJaMEp3UWl4M1FrRkJNa0lzUTBGQlF6dEZRVU4wUWl4VlFVRlZMRVZCUVVVc1dVRkJXVHRGUVVONFFpeGhRVUZoTEVWQlFVVXNTMEZCU3p0RlFVTndRaXhUUVVGVExFVkRPV2RDZFVJc1IwRkJSenREUkN0blFuUkRPenRCUVhSQ1RDeEJRWFZDU1N4MVFrRjJRbTFDTEVGQmRVSnlRaXh0UWtGQmMwSTdRVUYwUW5oQ0xFRkJjMEpKTEhWQ1FYUkNiVUlzUVVGelFuSkNMRzFDUVVGelFqdEJRWEpDZUVJc1FVRnhRa2tzYzBKQmNrSnJRaXhCUVhGQ2NFSXNiVUpCUVhOQ0xFTkJRVU03UlVGRGFrSXNWVUZCVlN4RlFVRkZMRmxCUVZrN1JVRkRlRUlzWVVGQllTeEZRVUZGTEV0QlFVczdSVUZEY0VJc1UwRkJVeXhGUTI1b1FuVkNMRWRCUVVjN1EwUnZhRUowUXpzN1FVRXpRa3dzUVVFMFFra3NkVUpCTlVKdFFpeEJRVFJDY2tJc1ZVRkJZVHRCUVROQ1ppeEJRVEpDU1N4MVFrRXpRbTFDTEVGQk1rSnlRaXhWUVVGaE8wRkJNVUptTEVGQk1FSkpMSE5DUVRGQ2EwSXNRVUV3UW5CQ0xGVkJRV0VzUTBGQlF6dEZRVU5TTEdGQlFXRXNSVUZCUlN4TFFVRkxPME5CUTNaQ096dEJRVVZNTEVGQlFVRXNkVUpCUVhWQ08wRkJRM1pDTEVGQlFVRXNjMEpCUVhOQ0xFTkJRVU03UlVGRGJrSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhMUVVGTExFVkRlR3RDSzBJc1QwRkJUenRGUkhsclFqTkRMRlZCUVZVc1JVRkJSU3hYUVVGWE8wVkJRM1pDTEZWQlFWVXNSVUZCUlN4SlFVRkpPME5CYlVKdVFqczdRVUY0UWtRc1FVRlBTU3gxUWtGUWJVSXNRVUZQY0VJc2QwSkJRVEJDTzBGQlRqZENMRUZCVFVrc2MwSkJUbXRDTEVGQlRXNUNMSGRDUVVFd1FpeERRVUZETzBWQlEzUkNMRk5CUVZNc1JVTnFhVUoxUWl4SFFVRkhPMFZFYTJsQ2JrTXNVMEZCVXl4RlFVRkZMRWRCUVVjN1JVRkRaQ3gxUWtGQmRVSXNSVUZCUlN4RFFVRkRPMFZCUXpGQ0xEQkNRVUV3UWl4RlFVRkZMRU5CUVVNN1JVRkROMElzVlVGQlZTeEZRVUZGTEVsQlFVazdRMEZEYmtJN08wRkJZa3dzUVVGalNTeDFRa0ZrYlVJc1FVRmpjRUlzYlVKQlFYRkNPMEZCWW5oQ0xFRkJZVWtzYzBKQlltdENMRUZCWVc1Q0xHMUNRVUZ4UWl4RFFVRkRPMFZCUTJwQ0xGTkJRVk1zUlVONGFVSjFRaXhIUVVGSE8wVkVlV2xDYmtNc1UwRkJVeXhGUVVGRkxFZEJRVWM3UlVGRFpDeDFRa0ZCZFVJc1JVRkJSU3hEUVVGRE8wVkJRekZDTERCQ1FVRXdRaXhGUVVGRkxFTkJRVU03UlVGRE4wSXNWVUZCVlN4RlFVRkZMRWxCUVVrN1EwRkRia0k3TzBGQmNFSk1MRUZCY1VKSkxIVkNRWEpDYlVJc1FVRnhRbkJDTEZWQlFWazdRVUZ3UW1Zc1FVRnZRa2tzYzBKQmNFSnJRaXhCUVc5Q2JrSXNWVUZCV1N4RFFVRkRPMFZCUTFJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGRGFFSTdPMEZCUlV3c1FVRkRTU3gxUWtGRWJVSXNRVUZEYmtJc2QwSkJRWGxDTEVOQlFVTTdSVUZEZEVJc1ZVRkJWU3hGUVVGRkxHTkJRV003UTBGRE4wSTdPMEZCU0V3c1FVRkpTU3gxUWtGS2JVSXNRVUZKYmtJc2JVSkJRVzlDTEVOQlFVTTdSVUZEYWtJc1ZVRkJWU3hGUVVGRkxHTkJRV003UTBGRE4wSTdPMEZCVGt3c1FVRlBTU3gxUWtGUWJVSXNRVUZQYmtJc1ZVRkJWeXhEUVVGRE8wVkJRMUlzVlVGQlZTeEZRVUZGTEdOQlFXTTdRMEZETjBJN08wRkJSVXdzUVVGQllTeFpRVUZFTEVOQlFVTXNkVUpCUVhWQ08wRkJRM0JETEVGQlFXRXNXVUZCUkN4RFFVRkRMSE5DUVVGelFpeERRVUZETzBWQlEyaERMRlZCUVZVc1JVTnlhMEl3UWl4NVFrRkJlVUk3UTBSemEwSm9SVHM3UVVGRFJDeEJRVUZoTEZsQlFVUXNRMEZCUXl4MVFrRkJkVUlzUTBGQlF6dEZRVU5xUXl4TFFVRkxMRVZEZUd0Q0swSXNlVUpCUVhsQ08wTkVlV3RDYUVVN08wRkJRMFFzUVVGQllTeFpRVUZFTEVOQlFVTXNkVUpCUVhWQ08wRkJRM0JETEVGQlFXRXNXVUZCUkN4RFFVRkRMSE5DUVVGelFpeERRVUZETzBWQlEyaERMRlZCUVZVc1JVTXhhMEl3UWl4NVFrRkJORUk3UTBReWEwSnVSVHM3UVVGRFJDeEJRVUZoTEZsQlFVUXNRMEZCUXl4MVFrRkJkVUlzUTBGQlF6dEZRVU5xUXl4TFFVRkxMRVZETjJ0Q0swSXNlVUpCUVRSQ08wTkVPR3RDYmtVN08wRkJSMFFzUVVGQlpTeGpRVUZFTEVOQlFVTXNkVUpCUVhWQ0xFTkJRVU03UlVGRGJrTXNVMEZCVXl4RlFVRkZMR2REUVVGblF6dEZRVU16UXl4bFFVRmxMRVZEZG14Q2NVSXNTVUZCU1N4RFFVRktMRWxCUVVrN1JVUjNiRUo0UXl4cFFrRkJhVUlzUlVGQlJTeFJRVUZSTzBWQlF6TkNMR2RDUVVGblFpeEZRVUZGTEd0TFFWRkdPMFZCUTJoQ0xFdEJRVXNzUlVGQlJTeFhRVUZYTzBOQlEzSkNPenRCUVVORUxFRkJRVEpDTEZsQlFXWXNRVUZCUVN4alFVRmpMRU5CUVVNc2RVSkJRWFZDTEVOQlFVTTdSVUZETDBNc1owSkJRV2RDTEVWRGJtMUNiMElzZVVKQlFYbENPME5FYjIxQ2FFVTdPMEZCUTBRc1FVRkJNa0lzV1VGQlppeEJRVUZCTEdOQlFXTXNRMEZCUXl4MVFrRkJkVUlzUTBGQlF6dEZRVU12UXl4blFrRkJaMElzUlVOd2JVSnZRaXg1UWtGQk5FSTdRMFJ4YlVKdVJUczdRVUZKUkN4QlFVRkJMRmRCUVZjc1EwRkJRenRGUVVOU0xFOUJRVThzUlVGQlJTeFpRVUZaTzBWQlEzSkNMR05CUVdNc1JVRkJSU3hOUVVGTk8wVkJRM1JDTEZOQlFWTXNSVU5vY0VJeVFpeEpRVUZKTzBORWFYQkNNME03TzBGQlJVUXNRVUZCWXl4WFFVRklMRWRCUVVjc1YwRkJWeXhEUVVGRE8wVkJRM1JDTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CVjJoQ096dEJRVlJITEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVVnMVFpeEJRVUZqTEZkQlFVZ3NSMEZCUnl4WFFVRlhMRU5CUVVNN1NVRkpiRUlzVDBGQlR5eEZRVUZGTEZsQlFWazdSMEZSTlVJN096dEJRVnBFTEVGQlFXTXNWMEZCU0N4SFFVRkhMRmRCUVZjc1FVRlJja0lzVVVGQlV5eERRVUZETzBWQlEwNHNUMEZCVHl4RlFVRkZMRTlCUVU4N1JVRkRhRUlzV1VGQldTeEZRMnB3UW05Q0xFbEJRVWs3UTBScmNFSjJRenM3UVVGTFRDeEJRVUZCTEdGQlFXRXNRMEZCUXp0RlFVTldMRTlCUVU4c1JVRkJSU3hKUVVGSk8wTkJRMmhDT3p0QlFVTkVMRUZCUVUwc1MwRkJSQ3hEUVVGRExHRkJRV0VzUTBGQlF6dEZRVU5vUWl4SlFVRkpMRVZCUVVVc1EwRkJRenRGUVVOUUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBOQllYSkNPenRCUVdaRUxFRkJTVWtzUzBGS1F5eERRVUZETEdGQlFXRXNRMEZKWml4TFFVRkxMRU5CUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVDBGQlR5eEJRVUZhTEVWQlFXTTdSVUZEYUVJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRZanM3UVVGRFJDeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRlNOVUlzUVVGQlRTeExRVUZFTEVOQlFVTXNZVUZCWVN4RFFVRkRPMGxCVTFvc1QwRkJUeXhGUVVGRkxFdEJRVXM3U1VGRFpDeFRRVUZUTEVWQlFVVXNTVUZCU1R0SFFVdDBRanM3TzBGQlNFY3NUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJXalZDTEVGQlFVMHNTMEZCUkN4RFFVRkRMR0ZCUVdFc1EwRkJRenRKUVdGYUxGTkJRVk1zUlVGQlJTeExRVUZMTzBkQlJYWkNPenM3UVVGTFJDeEJRVUZqTEdGQlFVUXNRMEZCUXl4aFFVRmhPMEZCUXpOQ0xFRkJRV01zWVVGQlJDeEZRVUZETEVGQlFVRXNVMEZCUXl4RFFVRlZMRTFCUVUwc1FVRkJhRUlzUlVGQmEwSTdSVUZETjBJc1QwRkJUeXhGUVVGRkxHVkJRV1U3UTBGRE0wSTdPMEZCU1VRc1FVRkJRU3gzUWtGQmQwSXNRMEZCUXp0RlFVTnlRaXhSUVVGUkxFVkJRVVVzUzBGQlN6dEZRVU5tTEVkQlFVY3NSVUZCUlN4RFFVRkRPMFZCUTA0c1NVRkJTU3hGUVVGRkxFTkJRVU03UlVGRFVDeExRVUZMTEVWQlFVVXNRMEZCUXp0RlFVTlNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFOUJRVThzUlVGQlJTeFJRVUZSTzBWQlEycENMRlZCUVZVc1JVRkJSU3hKUVVGSk8wVkJRMmhDTEdGQlFXRXNSVUZCUlN4WlFVRlpPME5CTUVJNVFqczdRVUZ3UTBRc1FVRlpTU3gzUWtGYWIwSXNRMEZaY0VJc1MwRkJTeXhEUVVGRE8wVkJRMFlzVFVGQlRTeEZRVUZGTEVsQlFVazdRMEZEWmpzN1FVRmtUQ3hCUVdWSkxIZENRV1p2UWl4RFFXVndRaXh2UWtGQmIwSXNRMEZCUXp0RlFVTnFRaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEV0QlFVc3NSVUZCUlN4SlFVRkpPME5CUTJRN08wRkJiRUpNTEVGQmJVSkpMSGRDUVc1Q2IwSXNRMEZ0UW5CQ0xHdENRVUZyUWl4RFFVRkRPMFZCUldZc1VVRkJVU3hGUVVGRkxFOUJRVTg3UTBGRGNFSTdPMEZCZEVKTUxFRkJkVUpKTEhkQ1FYWkNiMElzUTBGMVFuQkNMR1ZCUVdVc1EwRkJRenRGUVVOYUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzU1VGQlNTeEZRVUZGTEVOQlFVTTdSVUZEVUN4TFFVRkxMRVZCUVVVc1EwRkJRenREUVVOWU96dEJRVFZDVEN4QlFTdENhMElzZDBKQkwwSk5MRUZCSzBKd1FpeFpRVUZoTEVOQlFVTXNiMEpCUVc5Q0xFTkJRVU03UlVGREwwSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hIUVVGSExFVkJRVVVzUjBGQlJ6dEZRVU5TTEZOQlFWTXNSVUZCUlN4blFrRkJaMEk3UTBGRE9VSTdPMEZKY0haQ1REczdOa0pCUlRaQ08wRkpSamRDT3pzMlFrRkZOa0k3UVVOR04wSTdPelpDUVVVMlFqdEJRMFkzUWpzN05rSkJSVFpDTzBGRFJqZENPenMyUWtGRk5rSTdRVU5HTjBJN08yZEdRVVZuUmp0QlFVVm9SanM3TzBkQlIwYzdRVUZGU0N4QlFVRkJMRWxCUVVrc1EwRkJRenRGUVVOSUxGVkJRVlVzUlVGQlJTeFZRVUZWTzBOQlEzWkNPenRCUVVWRUxFRkJSVVVzUTBGR1JDeEZRVUZFTEVGQlIwVXNRMEZJUkN4QlFVZERMRTlCUVZFc1JVRklWaXhCUVVsRkxFTkJTa1FzUVVGSlF5eE5RVUZQTEVOQlFVTTdSVUZEVGl4VlFVRlZMRVZCUVVVc1QwRkJUenREUVVOd1FqczdRVU51UWtnc05FVkJRVFJGTzBGQlJUVkZPMmRHUVVOblJqdEJRVVZvUmpzN096dEhRVWxITzBGQlJVZ3NRVUZCUVN4SlFVRkpMRU5CUVVNN1JVRkRTQ3hYUVVGWExFVkJRVVVzU1VGQlNUdEZRVUZITEU5QlFVODdSVUZETTBJc2IwSkJRVzlDTEVWQlFVVXNTVUZCU1R0RlFVRkhMRTlCUVU4N1JVRkRjRU1zZDBKQlFYZENMRVZCUVVVc1NVRkJTVHRGUVVGSExFOUJRVTg3UTBGRGVrTTdPMEZCUlVRN1owWkJRMmRHTzBGQlJXaEdPenRIUVVWSE8wRkJSVWdzUVVGQlFTeEpRVUZKTEVOQlFVTTdSVUZEU0N4TlFVRk5MRVZCUVVVc1EwRkJRenREUVVOV096dEJRVVZFT3p0SFFVVkhPMEZCUlVnc1FVRkJRU3hQUVVGUE8wRkJRMUFzUVVGQlFTeExRVUZMTzBGQlEwd3NRVUZCUVN4TlFVRk5PMEZCUTA0c1FVRkJRU3hOUVVGTk8wRkJRMDRzUVVGQlFTeEhRVUZITzBGQlEwZ3NRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRUaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5tT3p0QlFVVkVPenM3UjBGSFJ6dEJRVVZJTEVGQlFVRXNSVUZCUlN4RFFVRkRPMFZCUTBRc1UwRkJVeXhGUVVGRkxFZEJRVWM3UlVGRFpDeE5RVUZOTEVWQlFVVXNVVUZCVVR0RFFVTnFRanM3UVVGRlJEdG5Sa0ZEWjBZN1FVRkZhRVk3T3p0SFFVZEhPMEZCUlVnc1FVRkJRU3hWUVVGVk8wRkJRMVlzUVVGQlFTeE5RVUZOTzBGQlEwNHNRVUZCUVN4SlFVRkpMRU5CUVVNN1JVRkJSU3hQUVVGUE8wVkJRMW9zVDBGQlR5eEZRVUZGTEV0QlFVczdRMEZEWmpzN1FVRkZSRHM3UjBGRlJ6dEJRVVZJTEVGQlFVRXNUVUZCVFN4RFFVRkRPMFZCUTB3c1RVRkJUU3hGUVVGRkxGRkJRVkU3UTBGRGFrSTdPMEZCUlVRN096dEhRVWRITzBGQlJVZ3NRVUZCUVN4RlFVRkZMRU5CUVVNN1JVRkRSQ3hWUVVGVkxFVkJRVVVzVjBGQlZ6dEZRVUZITEU5QlFVODdSVUZEYWtNc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGQlJ5eFBRVUZQTzBWQlEyNUNMRkZCUVZFc1JVRkJSU3hQUVVGUE8wVkJRVWNzVDBGQlR6dERRVU0xUWpzN1FVRkZSRHM3TzBkQlIwYzdRVUZGU0N4QlFVRkJMRWRCUVVjc1EwRkJRenRGUVVOR0xGZEJRVmNzUlVGQlJTeHZRa0ZCYjBJN1JVRkJSeXhQUVVGUE8wVkJRek5ETEZOQlFWTXNSVUZCUlN4SFFVRkhPMFZCUVVjc1QwRkJUenREUVVONlFqczdRVUZGUkR0blJrRkRaMFk3UVVGRmFFWTdPenRIUVVkSE8wRkJSVWdzUVVGQlFTeERRVUZETEVOQlFVTTdSVUZEUVN4blFrRkJaMElzUlVGQlJTeFhRVUZYTzBWQlFVY3NUMEZCVHp0RlFVTjJReXcwUWtGQk5FSXNSVUZCUlN4UFFVRlBPMFZCUVVjc1QwRkJUenREUVVOb1JEczdRVUZGUkRzN08wZEJSMGM3UVVGRlNDeEJRVUZCTEVsQlFVa3NRMEZCUVN4QlFVRkJMRXRCUVVNc1FVRkJRU3hGUVVGUE8wVkJRMVlzWVVGQllTeEZRVUZGTEVsQlFVazdSVUZCUnl4UFFVRlBPMFZCUXpkQ0xHVkJRV1VzUlVGQlJTeFRRVUZUTzBWQlFVY3NUMEZCVHp0RlFVTndReXhsUVVGbExFVkJRVVVzWjBKQlFXZENPMFZCUVVjc1QwRkJUenREUVVNMVF6czdRVUZGUkRzN1IwRkZSenRCUVVWSUxFRkJRVUVzUTBGQlF6dEJRVU5FTEVGQlFVRXNUVUZCVFN4RFFVRkRPMFZCUTB3c1YwRkJWeXhGUVVGRkxFOUJRVTg3UTBGRGNrSTdPMEZCUlVRN08wZEJSVWM3UVVGRlNDeEJRVUZCTEVOQlFVTTdRVUZEUkN4QlFVRkJMRTFCUVUwc1EwRkJRenRGUVVOTUxGZEJRVmNzUlVGQlJTeE5RVUZOTzBOQlEzQkNPenRCUVVWRU96czdSMEZIUnp0QlFVVklMRUZCUVVFc1NVRkJTVHRCUVVOS0xFRkJRVUVzUjBGQlJ6dEJRVU5JTEVGQlFVRXNTVUZCU1N4RFFVRkRPMFZCUTBnc1YwRkJWeXhGUVVGRkxHOUNRVUZ2UWp0RlFVRkhMRTlCUVU4N1JVRkRNME1zVTBGQlV5eEZRVUZGTEVkQlFVYzdSVUZCUnl4UFFVRlBPME5CUTNwQ096dEJRVVZFT3p0SFFVVkhPMEZCUlVnc1FVRkJRU3hIUVVGSExFTkJRVU03UlVGRFJpeFZRVUZWTEVWQlFVVXNUVUZCVFR0RFFVTnVRanM3UVVGRlJEczdSMEZGUnp0QlFVVklMRUZCUVVFc1NVRkJTU3hEUVVGRE8wVkJRMGdzWjBKQlFXZENMRVZCUVVVc1NVRkJTVHRGUVVOMFFpeExRVUZMTEVWQlFVVXNTVUZCU1R0RFFVTmFPenRCUVVWRU96dEhRVVZITzBGQlJVZ3NRVUZCUVN4TFFVRkxMRU5CUVVNN1JVRkRTaXhUUVVGVExFVkJRVVVzUjBGQlJ6dERRVU5tT3p0QlFVVkVPenM3UjBGSFJ6dEJRVVZJTEVGQlFVRXNSMEZCUnp0QlFVTklMRUZCUVVFc1IwRkJSeXhEUVVGRE8wVkJRMFlzVTBGQlV5eEZRVUZGTEVkQlFVYzdSVUZEWkN4WFFVRlhMRVZCUVVVc1EwRkJRenRGUVVOa0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMR05CUVdNc1JVRkJSU3hSUVVGUk8wTkJRM3BDT3p0QlFVVkVMRUZCUVVFc1IwRkJSeXhEUVVGRE8wVkJRMFlzVFVGQlRTeEZRVUZGTEU5QlFVODdRMEZEYUVJN08wRkJSVVFzUVVGQlFTeEhRVUZITEVOQlFVTTdSVUZEUml4SFFVRkhMRVZCUVVVc1RVRkJUVHREUVVOYU96dEJRVVZFTzJkR1FVTm5SanRCUVVWb1JqczdSMEZGUnp0QlFVVklMRUZCUVVFc1MwRkJTenRCUVVOTUxFRkJRVUVzUzBGQlN5eERRVUZETzBWQlEwb3NUMEZCVHl4RlFVRkZMRmxCUVZrN1EwRkRkRUk3TzBGQlJVUTdPMGRCUlVjN1FVRkZTQ3hCUVVGQkxFdEJRVXNzUVVGQlFTeEpRVUZMTEVWQlFVRXNRVUZCUVN4QlFVRkJMRkZCUVVNc1FVRkJRU3hIUVVGWE8wVkJRM0JDTEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc1RVRkJUU3hGUVVGRkxFTkJRVU03UTBGRFZqczdRVUZGUkRzN1IwRkZSenRCUVVWSUxFRkJRVUVzUjBGQlJ5eERRVUZETzBWQlEwWXNXVUZCV1N4RlFVRkZMRWxCUVVrN1EwRkRia0k3TzBGQlJVUTdPMGRCUlVjN1FVRkZTQ3hCUVVGQkxFZEJRVWNzUVVGQlFTeEpRVUZMTEVOQlFVRXNRVUZCUVN4TFFVRkxMRVZCUVVVN1JVRkRZaXhSUVVGUkxFVkJRVVVzVFVGQlRUdERRVU5xUWpzN1FVRkZSRHRuUmtGRFowWTdRVUZGYUVZN096dEhRVWRITzBGQlJVZ3NRVUZCUVN4TlFVRk5PMEZCUTA0c1FVRkJRU3hMUVVGTE8wRkJRMHdzUVVGQlFTeFJRVUZSTzBGQlExSXNRVUZCUVN4TlFVRk5PMEZCUTA0c1FVRkJRU3hSUVVGUkxFTkJRVU03UlVGRFVDeFhRVUZYTEVWQlFVVXNWVUZCVlR0RlFVRkhMRTlCUVU4N1JVRkRha01zVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZCUnl4UFFVRlBPMFZCUTNwQ0xGZEJRVmNzUlVGQlJTeEpRVUZKTzBWQlFVY3NUMEZCVHp0RlFVTXpRaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVUZITEU5QlFVODdRMEZEY0VJN08wRkJSVVE3T3p0SFFVZEhPMEZCUlVnc1FVRkJRU3hOUVVGTk8wRkJRMDRzUVVGQlFTeExRVUZMTEVOQlFVTTdSVUZCUlN4UFFVRlBPMFZCUTJJc1VVRkJVU3hGUVVGRkxFOUJRVTg3UTBGRGJFSTdPMEZCUlVRN096dEhRVWRITzBGQlJVZ3NRVUZCUVN4TlFVRk5PMEZCUTA0c1FVRkJRU3hOUVVGTkxFTkJRVU03UlVGQlJTeFBRVUZQTzBWQlEyUXNZMEZCWXl4RlFVRkZMRWxCUVVrN1EwRkRja0k3TzBGQlJVUTdPenM3UjBGSlJ6dEJRVVZJTEVGQlFVRXNUVUZCVFR0QlFVTk9MRUZCUVVzc1NVRkJSQ3hGUVVGRExFRkJRVUVzU1VGQlF5eERRVUZMTEZGQlFWRXNRVUZCWWp0RFFVTk9MRUZCUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVDBGQlR5eEJRVUZhTzBOQlEwUXNRVUZCUVN4QlFVRkJMRWxCUVVNc1EwRkJTeXhSUVVGUkxFRkJRV0lzUlVGQlpUdEZRVU5rTEd0Q1FVRnJRaXhGUVVGRkxFMUJRVTA3UlVGQlJ5eFBRVUZQTzBOQlEzSkRPenRCUVVWRU96dEhRVVZITzBGQlJVZ3NRVUZCUVN4TlFVRk5MRUZCUVVFc2EwSkJRV3RDTzBOQlEzaENMRUZCUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVVVGQlVTeEJRVUZpTEVOQlFXTXNhMEpCUVd0Q08wTkJRMnBETEVGQlFVRXNRVUZCUVN4SlFVRkRMRU5CUVVzc1QwRkJUeXhCUVVGYUxFTkJRV0VzYTBKQlFXdENPME5CUTJoRExFRkJRVUVzUVVGQlFTeEpRVUZETEVOQlFVc3NVVUZCVVN4QlFVRmlMRU5CUVdNc2EwSkJRV3RDTEVOQlFVTTdSVUZEYUVNc1dVRkJXU3hGUVVGRkxFbEJRVWs3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRXRHM3UVVGRlJEczdSMEZGUnp0QlFVVklMRUZCUVVFc1RVRkJUU3hCUVVGQkxHVkJRV1U3UTBGRGNrSXNRVUZCUVN4QlFVRkJMRWxCUVVNc1EwRkJTeXhSUVVGUkxFRkJRV0lzUTBGQll5eGxRVUZsTzBOQlF6bENMRUZCUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVDBGQlR5eEJRVUZhTEVOQlFXRXNaVUZCWlR0RFFVTTNRaXhCUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEZGQlFWRXNRVUZCWWl4RFFVRmpMR1ZCUVdVc1EwRkJRenRGUVVNM1FpeFBRVUZQTEVWQlFVVXNjVUpCUVhGQ08wTkJReTlDT3p0QlFVVkVPenRIUVVWSE8wRkJSVWdzUVVGQlFTeFJRVUZSTEVOQlFVTTdSVUZEVUN4UFFVRlBMRVZCUVVVc2NVSkJRWEZDTzBOQlF5OUNPenRCUVVWRU96czdPenRIUVV0SE8wRkJSVWdzUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZEVEN4VlFVRlZMRVZCUVVVc1ZVRkJWVHRGUVVGSExFOUJRVTg3UlVGRGFFTXNTMEZCU3l4RlFVRkZMRTlCUVU4N1JVRkJSeXhQUVVGUE8wVkJRM2hDTEU5QlFVOHNSVUZCUlN4TFFVRkxPMFZCUVVjc1QwRkJUenRGUVVONFFpeFRRVUZUTEVWQlFVVXNTVUZCU1R0RlFVRkhMRTlCUVU4N1JVRkRla0lzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZCUnl4UFFVRlBPMFZCUTNCQ0xGZEJRVmNzUlVGQlJTeE5RVUZOTzBWQlFVY3NUMEZCVHp0RFFVTTVRanM3UVVGRlJEczdPMGRCUjBjN1FVRkZTQ3hCUVVGQkxGRkJRVkVzUTBGQlF6dEZRVU5RTEU5QlFVOHNSVUZCUlN4WlFVRlpPMFZCUVVjc1QwRkJUenRGUVVNdlFpeGpRVUZqTEVWQlFVVXNVVUZCVVR0RlFVRkhMRTlCUVU4N1EwRkRia003TzBGQlJVUTdPMGRCUlVjN1FVRkZTQ3hCUVVGQkxGRkJRVkVzUTBGQlF6dEZRVU5RTEZGQlFWRXNSVUZCUlN4SlFVRkpPME5CUTJZN08wRkJSVVE3T3p0SFFVZEhPME5CUlVnc1FVRkJRU3hCUVVGQkxFbEJRVU1zUTBGQlN5eFZRVUZWTEVGQlFXWTdRMEZEUkN4QlFVRkJMRUZCUVVFc1NVRkJReXhEUVVGTExFOUJRVThzUVVGQldpeEZRVUZqTzBWQlEySXNWVUZCVlN4RlFVRkZMRlZCUVZVN1JVRkJSeXhQUVVGUE8wVkJRMmhETEU5QlFVOHNSVUZCUlN4RFFVRkRPMFZCUVVjc1QwRkJUenREUVVOeVFqczdRVUZGUkRzN1IwRkZSenREUVVWSUxFRkJRVUVzUVVGQlFTeEpRVUZETEVOQlFVc3NVVUZCVVN4QlFVRmlMRU5CUVdNc01rSkJRVEpDTzBOQlF6RkRMRUZCUVVFc1FVRkJRU3hKUVVGRExFTkJRVXNzVVVGQlVTeEJRVUZpTEVOQlFXTXNNa0pCUVRKQ0xFTkJRVU03UlVGRGVrTXNUVUZCVFN4RlFVRkZMRWxCUVVrN1EwRkRZanM3UVVGRlJEczdPMGRCUjBjN1EwRkZTQ3hCUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEZGQlFWRXNRVUZCWWl4RlFVRmxPMFZCUTJRc2EwSkJRV3RDTEVWQlFVVXNVMEZCVXp0RlFVRkhMRTlCUVU4N1JVRkRka01zWTBGQll5eEZRVUZGTEVsQlFVazdSVUZCUnl4UFFVRlBPME5CUXk5Q096dEJRVVZFT3p0SFFVVkhPME5CUlVnc1FVRkJRU3hCUVVGQkxFbEJRVU1zUTBGQlN5eFJRVUZSTEVGQlFXSXNRMEZCWXl3NFFrRkJPRUk3UTBGRE4wTXNRVUZCUVN4QlFVRkJMRWxCUVVNc1EwRkJTeXhSUVVGUkxFRkJRV0lzUTBGQll5d3lRa0ZCTWtJc1EwRkJRenRGUVVONlF5eHJRa0ZCYTBJc1JVRkJSU3hKUVVGSk8wTkJRM3BDT3p0QlFVVkVPenM3UjBGSFJ6dEJRVVZJTEVGQlFVRXNORUpCUVRSQ0xFTkJRVU03UlVGRE0wSXNhMEpCUVd0Q0xFVkJRVVVzVFVGQlRUdEZRVUZITEU5QlFVODdSVUZEY0VNc1NVRkJTU3hGUVVGRkxFOUJRVTg3UlVGQlJ5eFBRVUZQTzBOQlEzaENPenRCUVVWRU8yZEdRVU5uUmp0QlFVVm9SanM3TzBkQlIwYzdRVUZGU0N4QlFVRkJMRTlCUVU4N1FVRkRVQ3hCUVVGQkxFbEJRVWtzUTBGQlF6dEZRVU5JTEU5QlFVOHNSVUZCUlN4TFFVRkxPME5CUTJZN08wRkJSVVE3TzBkQlJVYzdRVUZGU0N4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOT0xFOUJRVThzUlVGQlJTeFRRVUZUTzBOQlEyNUNPenRCUVVWRU8yZEdRVU5uUmp0QlFVVm9SanM3UjBGRlJ6dEJRVVZJTEVGQlFVRXNUVUZCVFN4RFFVRkRPMFZCUTB3c1QwRkJUeXhGUVVGRkxGbEJRVms3UTBGRGRFSTdPMEZCUlVRN08wZEJSVWM3UVVGRlNDeEJRVUZCTEZGQlFWRXNRMEZCUXp0RlFVTlFMRTlCUVU4c1JVRkJSU3hKUVVGSk8wTkJRMlE3TzBGQlJVUTdaMFpCUTJkR08wRkJSV2hHT3p0SFFVVkhPME5CUlVnc1FVRkJRU3hCUVVGQkxFMUJRVU1zUVVGQlFTeEZRVUZSTzBWQlExQXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRaRHM3UVVNNVlrUTdPMmRHUVVWblJqdEJRVVZvUmpzN1IwRkZSenRCUVVWSUxFRkJRVUVzU1VGQlNUdEJRVU5LTEVGQlFVRXNSVUZCUlN4RlFVRkZMRUZCUVVFc1JVRkJSU3hGUVVGRkxFRkJRVUVzUlVGQlJTeEZRVUZGTEVGQlFVRXNSVUZCUlN4RlFVRkZMRUZCUVVFc1JVRkJSU3hGUVVGRkxFRkJRVUVzUlVGQlJUdEJRVU4wUWl4QlFVRkJMRlZCUVZVc1JVRkJSU3hCUVVGQkxFTkJRVU1zUlVGQlJTeEJRVUZCTEVkQlFVYzdRVUZEYkVJc1FVRkJRU3hGUVVGRkxFVkJRVVVzUVVGQlFTeEZRVUZGTEVWQlFVVXNRVUZCUVN4RlFVRkZMRVZCUVVVc1FVRkJRU3hGUVVGRk8wRkJRMlFzUVVGQlFTeE5RVUZOTzBGQlEwNHNRVUZCUVN4RlFVRkZPMEZCUTBZc1FVRkJRU3hSUVVGUkxFVkJRVVVzUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZEWml4TlFVRk5MRVZCUVVjc1EwRkJRenRGUVVOV0xFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZCUjBRN08wZEJSVWM3UVVGRlNDeEJRVVZGTEVWQlJrRXNSMEZGUVN4RlFVRkZPMEZCUmtvc1FVRkhSU3hGUVVoQkxFZEJSMEVzUlVGQlJTeERRVUZETzBWQlEwUXNZVUZCWVN4RlFVRkZMRU5CUVVNN1EwRkRha0k3TzBGQlMwZzdPMGRCUlVjN1FVRkZTQ3hCUVVGQkxFdEJRVXNzUTBGQlF6dEZRVU5LTEdWQlFXVXNSVUZCUlN4UlFVRlJPMFZCUTNwQ0xHTkJRV01zUlVGQlJTeERRVUZETzBOQlEyeENPenRCUVVkRU96czdSMEZIUnp0QlFVVklMRUZCUVVFc1VVRkJVU3hEUVVGRE8wVkJRMUFzVTBGQlV5eEZRVUZGTEVOQlFVTTdSVUZCUnl4VFFVRlRPMFZCUTNoQ0xFMUJRVTBzUlVGQlJTeERRVUZETzBOQlExWTdPMEZEY0VSRU96dG5Sa0ZGWjBZN1FVRkZhRVk3TzBkQlJVYzdRVUZGU0RzN08wZEJSMGM3UVVGRlNDeDVSRUZCZVVRN1FVRkZla1FzUVVGQlFTeFBRVUZQTzBGQlExQXNRVUZCUVN4RlFVRkZMRVZCUVVVc1FVRkJRU3hGUVVGRkxFVkJRVVVzUVVGQlFTeEZRVUZGTEVWQlFVVXNRVUZCUVN4RlFVRkZMRVZCUVVVc1FVRkJRU3hGUVVGRkxFVkJRVVVzUVVGQlFTeEZRVUZGTzBGQlEzUkNMRUZCUVVFc1ZVRkJWU3hGUVVGRkxFRkJRVUVzUTBGQlF5eEZRVUZGTEVGQlFVRXNSMEZCUnp0QlFVTnNRaXhCUVVGQkxFVkJRVVVzUlVGQlJTeEJRVUZCTEVWQlFVVXNSVUZCUlN4QlFVRkJMRVZCUVVVN1FVRkRWaXhCUVVGQkxFMUJRVTA3UVVGRFRpeEJRVUZCTEVWQlFVVTdRVUZEUml4QlFVRkJMRXRCUVVzN1FVRkRUQ3hCUVVGQkxGRkJRVkVzUTBGQlF6dEZRVU5RTEdGQlFXRXNSWEJDUVdFc1NVRkJaME03UTI5Q1F6TkVPenRCUVVkRU96dEhRVVZITzBGQlJVZ3NRVUZCUVN4RlFVRkZMRVZCUVVVc1FVRkJRU3hGUVVGRkxFVkJRVVVzUVVGQlFTeEZRVUZGTEVOQlFVTTdSVUZEVkN4WFFVRlhMRVZ3UWxSbExFbEJRV2RETzBOdlFsVXpSRHM3UVVGRlJDeDNSRUZCZDBRN1FVTnVRM2hFT3p0blJrRkZaMFk3UVVGRmFFWTdPenM3T3pzN096czdSMEZWUnp0QlFVVklMRUZCUVVFc1NVRkJTU3hEUVVGRE8wVkJRMGdzVTBGQlV5eEZRVUZGTEVkQlFYTkRPMFZCUVVVc1UwRkJVenRGUVVNMVJDeFhRVUZYTEVWQlFVVXNSMEZCYlVRN1JVRkJSU3hUUVVGVE8wVkJRek5GTEZWQlFWVXNSVUZCUlN4TlFVRk5PMFZCUVVjc1UwRkJVenRGUVVNNVFpeFZRVUZWTEVWQlFVVXNTVUZCU1R0RlFVRkhMRk5CUVZNN1EwRkROMEk3TzBGRGNrSkVPenMyUWtGRk5rSTdRVUZGTjBJc1FVRkJRU3hKUVVGSkxFVkJRVVVzUVVGQlFTeEpRVUZKTEVOQlFVTTdSVUZEVkN4WFFVRlhMRVZCUVVVc2RVSkJRWFZDTzBOQlEzSkRPenRCUVVWRUxFRkJRVUVzU1VGQlNTeERRVUZETzBWQlEwZ3NZMEZCWXl4RlFVRkZMR3RDUVVGclFqdEZRVU5zUXl4elFrRkJjMElzUlVGQlJTeFhRVUZYTzBOQlEzQkRPenRCUVUxRUxFRkJRMFVzU1VGRVJTeEJRVU5HTEUxQlFVOHNRMEZCUXp0RlFVTk9MRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzVDBGQlR5eEZRVUZGTEZGQlFWRTdRMEZEYkVJN08wRldNazFMTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1QwRkJUenRGVlM5TmJFTXNRVUZQU1N4SlFWQkJMRUZCVDBFc1RVRkJUeXhEUVVGRE8wbEJRMDRzVDBGQlR5eEZRVUZGTEZGQlFWRTdSMEZEYkVJN096dEJWbk5OUnl4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFOUJRVTg3UlZVdlRXeERMRUZCWVVrc1NVRmlRU3hCUVdGQkxFMUJRVThzUTBGQlF6dEpRVU5PTEU5QlFVOHNSVUZCUlN4VFFVRlRPMGRCUTI1Q096czdRVlpuVFVjc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeFBRVUZQTzBWVkwwMXNReXhCUVcxQ1NTeEpRVzVDUVN4QlFXMUNRU3hOUVVGUExFTkJRVU03U1VGRFRpeFBRVUZQTEVWQlFVVXNVMEZCVXp0SFFVTnVRanM3TzBGRGRFTk1PenRuUmtGRlowWTdRVUZGYUVZN096czdPenRIUVUxSE8wRkJSVWdzUVVGQlFTeEhRVUZITEVOQlFVTTdSVUZEUml4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVGSExGTkJRVk03UlVGRE0wSXNWVUZCVlN4RlFVRkZMRTFCUVUwN1JVRkJSeXhUUVVGVE8wVkJRemxDTEdOQlFXTXNSVUZCUlN4TlFVRk5PMFZCUVVjc1UwRkJVenREUVVOdVF6czdRVUZIUkRzN08wZEJSMGM3UVVGRlNDeEJRVUZCTEVkQlFVY3NRMEZCUVN4QlFVRkJMRXRCUVVNc1FVRkJRVHRCUVVOS0xFRkJRVUVzUjBGQlJ5eERRVUZCTEVGQlFVRXNUVUZCUXl4QlFVRkJMRVZCUVZFN1JVRkJSeXhUUVVGVE8wVkJRM1JDTEZOQlFWTXNSVUZCUlN4SlFVRkpPME5CUTJoQ096dEJRek5DUkRzN1owWkJSV2RHTzBGQlJXaEdPenRIUVVWSE8wRkJSVWdzUVVGQlFTeExRVUZMTEVOQlFVTTdSVUZEU2l4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVGSExGTkJRVk03UTBGRGVFSTdPMEZEVmtRN096WkNRVVUyUWp0QlFVVTNRaXhCUVVGQkxFTkJRVU1zUTBGQlF6dEZRVU5CTEV0QlFVc3NSVUZCUlN4UFFVRlBPMFZCUTJRc1pVRkJaU3hGUVVGRkxGTkJRVk03UTBGTE0wSTdPMEZCVUVRc1FVRkpSU3hEUVVwRUxFRkJTVU1zVFVGQlR5eERRVUZETzBWQlEwNHNaVUZCWlN4RlFVRkZMRWxCUVVrN1EwRkRkRUk3TzBGRFZrZzdPMmRHUVVWblJqdEJRVVZvUmpzN1IwRkZSenRCUVVsSUxIVkNRVUYxUWp0QlFVbDJRaXh6UWtGQmMwSTdRVUZGZEVJc1FVRkJRU3hWUVVGVkxFTkJRVU03UlVGRlZDeGhRVUZoTEVVeFFrdGhMRWxCUVdkRE8wVXdRa294UkN4WlFVRlpMRVV4UWtsakxFbEJRV2RETzBVd1FrZ3hSQ3haUVVGWkxFVkJRVVVzU1VGQlNUdEZRVU5zUWl4WFFVRlhMRVZCUVVjc1NVRkJTVHRGUVVOc1FpeFRRVUZUTEVWQlpGY3NUVUZCVFR0RFFXVXpRanM3UVVGUVJDeEJhRUpLUlN4VlowSkpVU3hCYUVKS1ZpeE5RVUZUTEVOQlFVTTdSVUZEVGl4UFFVRlBMRVZCUVVVc1lVRkJZVHRGUVVOMFFpeFBRVUZQTEVWQlFVVXNaMEpCUVdkQ08wVkJRM3BDTEV0QlFVc3NSVUZCUlN4bFFVRmxPME5CUTNaQ096dEJaMEpoU0R0blJrRkRaMFk3UVVGRmFFWXNRVUZCUVN4blFrRkJaMElzUTBGQlF6dEZRVU5tTEdGQlFXRXNSVEZDSzBOdFFpeEhRVUV3UlR0Rk1FSTVRekZITEZsQlFWa3NSVEZDT0VOdlFpeEhRVUV3UlR0RE1FSTNRek5IT3p0QlFVVkVMRUZCUVVFc2FVSkJRV2xDTEVOQlFVTTdSVUZEYUVJc1lVRkJZU3hGTVVJeVEyMUNMRWxCUVRKRk8wVXdRakZETTBjc1dVRkJXU3hGTVVJd1EyOUNMRWxCUVRKRk8wTXdRbnBETlVjN08wRkJSVVFzUVVGQlFTeHBRa0ZCYVVJc1EwRkJRenRGUVVOb1FpeGhRVUZoTEVVeFFuVkRiVUlzU1VGQk1rVTdSVEJDZEVNelJ5eFpRVUZaTEVVeFFuTkRiMElzU1VGQk1rVTdRekJDY2tNMVJ6czdRVUZGUkN4QlFVRkJMR2RDUVVGblFpeERRVUZETzBWQlEyWXNZVUZCWVN4Rk1VSnRRMjFDTEVsQlFUQkZPMFV3UW14RE1VY3NXVUZCV1N4Rk1VSnJRMjlDTEVsQlFUQkZPME13UW1wRE0wYzdPMEZEYkVSRU96czJRa0ZGTmtJN1FVRkZOMElzUVVGQlFTeFZRVUZWTEVOQlFVTTdSVUZEVkN4VFFVRlRMRVZCUVVNc1NVRkJTVHRGUVVOa0xGbEJRVmtzUlROQ2FVSmpMRWxCUVdkRE8wVXlRbWhDTVVRc1lVRkJZU3hGTTBKblFtRXNTVUZCWjBNN1F6SkNaak5FT3p0QlpuZE9UeXhOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEU5QlFVODdSV1YwVG14RExFRkJRVUVzYVVKQlFXbENMRU5CUVVNN1NVRkZaQ3hoUVVGaExFVXpRbk5GYVVJc1NVRkJNa1U3U1RKQ2NrVjZSeXhaUVVGWkxFVXpRbkZGYTBJc1NVRkJNa1U3UnpKQ2JrVTFSenM3TzBGbWFVNVBMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVDBGQlR6dEZaUzlOYkVNc1FVRkJRU3huUWtGQlowSXNRMEZCUXp0SlFVVmlMR0ZCUVdFc1JUTkNLMFJwUWl4SlFVRXlSVHRKTWtJNVJIcEhMRmxCUVZrc1JUTkNPRVJyUWl4SlFVRXlSVHRITWtKMlJEVkhPenM3UVdaeFRVOHNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hQUVVGUE8wVmxMMDFzUXl4QlFVRkJMR2RDUVVGblFpeERRVUZETzBsQlQySXNZVUZCWVN4Rk0wSXlSR2xDTEVsQlFUQkZPMGt5UWpGRWVFY3NXVUZCV1N4Rk0wSXdSR3RDTEVsQlFUQkZPMGN5UW5oRU0wYzdPenRCWm5GTlR5eE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTlCUVU4N1JXVnVUV3hETEVGQlFVRXNkMEpCUVhkQ0xFTkJRVU03U1VGRmNrSXNZVUZCWVN4RlFVRkZMRU5CUVVNN1NVRkRhRUlzV1VGQldTeEZRVUZGTEVOQlFVTTdSMEZGYkVJN096dEJRMnhEUkRzN1owWkJSV2RHTzBGQlJXaEdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPMGRCT0VOSE8wRkJWMGc3WjBaQlEyZEdPMEZCUldoR096czdPenRIUVV0SE8wRkJSVWdzUVVGQlFTeFRRVUZUTEVOQlFVTTdSVUZEVWl4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVGSExGTkJRVk03UlVGRE1VSXNUVUZCVFN4RlFVRkhMRU5CUVVNN1JVRkJSeXhUUVVGVE8wVkJRM1JDTEU5QlFVOHNSVUZCUlN4RFFVRkRPMFZCUVVjc1UwRkJVenRGUVVOMFFpeFZRVUZWTEVWQlFVVXNTVUZCU1R0RlFVRkhMRk5CUVZNN1JVRkROVUlzVjBGQlZ5eEZOVUp5UkdVc1MwRkJaME03UlRSQ2NVUm9RaXhUUVVGVE8wVkJSMnBFTEZOQlFWTXNSVUZCUlN4RFFVRkRPME5CUjJZN08wRkJSME03T3pzN096czdPenM3UzBGVlJ6dEJRVVZJTEVGQlFVRXNaVUZCWlN4RFFVRkRPMFZCUTJRc1ZVRkJWU3hGUVVGRkxGVkJRVlU3UlVGQlJ5eFRRVUZUTzBWQlEyeERMRTlCUVU4c1JVRkJSU3haUVVGWk8wVkJRVWNzVTBGQlV6dEZRVU5xUXl4alFVRmpMRVZCUVVVc1IwRkJSenRGUVVGSExGTkJRVk03UlVGREwwSXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkJSeXhUUVVGVE8wVkJRM1pDTEZsQlFWa3NSVFZDTDBWWkxFbEJRV2RETzBVMFFpdEZaQ3hUUVVGVE8wVkJSMnBFTEZOQlFWTXNSVFZDTjBaaExFbEJRVWs3UlRSQ05rWlZMRk5CUVZNN1JVRkROME1zVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZIYkVJN08wRkJUVWc3WjBaQlEyZEdPMEZCUldoR0xFRkJRVUVzWjBKQlFXZENMRU5CUVVNN1JVRkRaaXhYUVVGWExFVkJRVVVzUTBGQlF6dERRVTFtT3p0QlFWQkVMRUZCUjBrc1owSkJTRmtzUjBGSFdpeGxRVUZsTEVOQlFVTTdSVUZEYUVJc1dVRkJXU3hGUVVGRkxFTkJRVU03UTBGRGFFSTdPMEZCUzBnc1FVRkJRU3hsUVVGbExFTkJRVU03UlVGRFpDeFhRVUZYTEVVMVFtcEVjVUlzU1VGQk1FVTdRelJDZFVRelJ6czdRVUZRUkN4QlFVZEpMR1ZCU0Zjc1IwRkhXQ3hsUVVGbExFTkJRVU03UlVGRGFFSXNXVUZCV1N4Rk5VSndSR3RDTEVkQlFUQkZPME0wUW5GRWVrYzdPMEZCUzBnc1FVRkJRU3huUWtGQlowSXNRMEZCUXp0RlFVTm1MRmRCUVZjc1JUVkNNVVJ4UWl4TFFVRXlSVHRETkVKblJUVkhPenRCUVZCRUxFRkJSMGtzWjBKQlNGa3NSMEZIV2l4bFFVRmxMRU5CUVVNN1JVRkRhRUlzV1VGQldTeEZOVUkzUkd0Q0xFbEJRVEpGTzBNMFFqaEVNVWM3TzBGQlMwZ3NRVUZCUVN4blFrRkJaMElzUTBGQlF6dEZRVU5tTEZkQlFWY3NSVFZDYmtWeFFpeExRVUV5UlR0RE5FSjVSVFZIT3p0QlFWQkVMRUZCUjBrc1owSkJTRmtzUjBGSFdpeGxRVUZsTEVOQlFVTTdSVUZEYUVJc1dVRkJXU3hGTlVKMFJXdENMRWxCUVRKRk8wTTBRblZGTVVjN08wRkJTMGdzUVVGQlFTeGxRVUZsTEVOQlFVTTdSVUZEWkN4WFFVRlhMRVUxUWpWRmNVSXNTMEZCTUVVN1F6UkNhMFl6UnpzN1FVRlFSQ3hCUVVkSkxHVkJTRmNzUjBGSFdDeGxRVUZsTEVOQlFVTTdSVUZEYUVJc1dVRkJXU3hGTlVJdlJXdENMRWxCUVRCRk8wTTBRbWRHZWtjN08wRkJUMGc3WjBaQlEyZEdPMEZCUldoR096dEhRVVZITzBGQlJVZ3NRVUZGU1N4cFFrRkdZU3hIUVVWaUxHVkJRV1VzUTBGQlF6dEZRVU5vUWl4alFVRmpMRVZCUVVVc1RVRkJUVHREUVVOMlFqczdRVUZMU0RzN1IwRkZSenRCUVVWSUxFRkJSVWtzYVVKQlJtRXNSMEZGWWl4bFFVRmxMRU5CUVVNN1JVRkRhRUlzWTBGQll5eEZRVUZGTEUxQlFVMDdRMEZEZGtJN08wRkJTMGc3T3pzN1IwRkpSenRCUVVWSUxFRkJRVUVzYTBKQlFXdENMRU5CUVVNN1JVRkRha0lzVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4VFFVRlRMRVZCUVVVc1NVRkJTVHREUVUxb1FqczdRVUZTUkN4QlFVbEpMR3RDUVVwakxFZEJTV1FzWlVGQlpTeERRVUZETzBWQlEyaENMRTlCUVU4c1JVRkJSU3hKUVVGSk8wTkJRMlE3TzBGQlVVZzdaMFpCUTJkR08wRkJSV2hHT3p0SFFVVkhPMEZCUlVnc1FVRkJRU3hwUWtGQmFVSXNRMEZCUXp0RlFVTm9RaXhWUVVGVkxFVkJRVVVzVFVGQlRUdERRVTF1UWpzN1FVRlFSQ3hCUVVkSkxHbENRVWhoTEVkQlIySXNaVUZCWlN4RFFVRkRPMFZCUTJoQ0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBOQlEycENPenRCUVV0SU96dEhRVVZITzBGQlJVZ3NRVUZCUVN4blFrRkJaMElzUTBGQlF6dEZRVU5tTEZWQlFWVXNSVUZCUlN4TFFVRkxPME5CVFd4Q096dEJRVkJFTEVGQlIwa3NaMEpCU0Zrc1IwRkhXaXhsUVVGbExFTkJRVU03UlVGRGFFSXNWVUZCVlN4RlFVRkZMRWxCUVVrN1EwRkRha0k3TzBGQlMwZzdPenRIUVVkSE8wRkJSVWdzUVVGQlFTeGxRVUZsTEVOQlFVTTdSVUZEWkN4VlFVRlZMRVZCUVVVc1NVRkJTVHREUVUxcVFqczdRVUZRUkN4QlFVZEpMR1ZCU0Zjc1IwRkhXQ3hsUVVGbExFTkJRVU03UlVGRGFFSXNWVUZCVlN4RlFVRkZMRWxCUVVrN1EwRkRha0k3TzBGQlMwZzdPMGRCUlVjN1FVRkZTQ3hCUVVGQkxHdENRVUZyUWl4RFFVRkRPMFZCUTJwQ0xGTkJRVk1zUlVGQlJTeEhRVUZITzBOQlRXWTdPMEZCVUVRc1FVRkhTU3hyUWtGSVl5eEhRVWRrTEdWQlFXVXNRMEZCUXp0RlFVTm9RaXhUUVVGVExFVkJRVVVzUjBGQlJ6dERRVU5tT3p0QlFWRklPMmRHUVVOblJqdEJRVVZvUmpzN1IwRkZSenRCUVVWSUxFRkJSVWtzWlVGR1Z5eEhRVVZZTEdWQlFXVXNRMEZCUXp0RlFVTm9RaXhMUVVGTExFVkJRVVVzU1VGQlNUdERRVU5hT3p0QlEzSlRTRHM3TmtKQlJUWkNPMEZCUlRkQ0xFRkJRVUVzZFVKQlFYVkNMRU5CUVVNN1JVRkRkRUlzVDBGQlR5eEZRVUZGTEV0QlFVczdSVUZEWkN4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGTkJRVk1zUlVGQlJTeEpRVUZKTzBOQlEyaENPenRCUVVkRExFRkJRWGRDTEhWQ1FVRkVMRU5CUkhwQ0xHVkJRV1VzUTBGRFlUdEZRVU40UWl4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVOa096dEJRVWRJTEVGQlEwVXNhVUpCUkdVc1EwRkRaaXgxUWtGQmRVSXNRMEZCUXp0RlFVTjBRaXhYUVVGWExFVkJRVVVzVFVGQlRUdERRVU53UWpzN1FVRkhTQ3hCUVVORkxHbENRVVJsTEVOQlEyWXNkVUpCUVhWQ0xFTkJRVU03UlVGRGRFSXNWMEZCVnl4RlFVRkZMRkZCUVZFN1EwRkRkRUk3TzBGQlIwZ3NRVUZEUlN4blFrRkVZeXhEUVVOa0xIVkNRVUYxUWl4RFFVRkRPMFZCUTNSQ0xHVkJRV1VzUlVGQlJTeFJRVUZSTzBOQlF6RkNPenRCUVVkSUxFRkJRMFVzYVVKQlJHVXNRMEZEWml4MVFrRkJkVUlzUTBGQlF6dEZRVU4wUWl4bFFVRmxMRVZCUVVVc1RVRkJUVHREUVVONFFqczdRVU55UTBnN08yZEdRVVZuUmp0QlFVVm9SanM3TzBkQlIwYzdRVUZGU0N4QlFVRkJMRkZCUVZFc1EwRkJRenRGUVVWUUxFOUJRVThzUlVGQlJTeExRVUZMTzBOQlEyWTdPMEZCU0VRc1FYQkNSMFVzVVc5Q1NFMHNRWEJDUjFJc1RVRkJVeXhEUVVGRE8wVkJRMDRzVDBGQlR5eEZRVUZGTEdGQlFXRTdSVUZEZEVJc1QwRkJUeXhGUVVGRkxHZENRVUZuUWp0RlFVTjZRaXhMUVVGTExFVkJRVVVzWlVGQlpUdERRVU4yUWpzN1FXOUNSRVFzUVVGQlFTeGhRVUZoTEVOQlFVTTdSVUZEV2l4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxGbEJRVmtzUlRsQ1RWa3NTVUZCWjBNN1F6aENRWHBFT3p0QlFWSkVMRUZCU1Vrc1lVRktVeXhIUVVsVUxFZEJRVWNzUTBGQlF6dEZRVU5LTEU5QlFVOHNSVUZCUlN4TFFVRkxPME5CUTJZN08wRkJTMGdzUVVGQlFTeGpRVUZqTEVOQlFVTTdSVUZEWWl4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RFFVOW1PenRCUVZSRUxFRkJTVVVzWTBGS1dUdEJRVUZrTEVGQlMwa3NZMEZNVlN4SFFVdFdMRmRCUVZjc1EwRkJRenRGUVVOYUxHRkJRV0VzUlVGQlJTeERRVUZETzBOQlEycENPenRCUVZGTU8yZEdRVU5uUmp0QlFVVm9SanM3TzBkQlIwYzdRVUZIU0RzclJVRkRLMFU3UVVGRkwwVXNRVUZGU1N4bFFVWlhMRWRCUlZnc1lVRkJZU3hEUVVGRE8wVkJRMlFzV1VGQldTeEZRVUZGTEVOQlFVTTdSVUZEWml4WFFVRlhMRVZCUVVVc1EwRkJRenREUVVOb1FqczdRVUZMUml4QlFVVkpMR05CUmxVc1IwRkZWaXhoUVVGaExFTkJRVU03UlVGRFpDeFpRVUZaTEVVNVFtTnJRaXhIUVVFd1JUdERPRUppZWtjN08wRkJTa2dzUVVGUlRTeGpRVkpSTEVGQlRWb3NhVUpCUVd0Q0xFZEJSV1FzWVVGQllTeERRVUZETzBWQlEyUXNXVUZCV1N4RlFVRkZMRU5CUVVNN1JVRkRaaXhYUVVGWExFVTVRazlwUWl4SFFVRXdSVHRET0VKT2RrYzdPMEZCVDB3c1FVRkZTU3hsUVVaWExFZEJSVmdzWVVGQllTeERRVUZETzBWQlEyUXNXVUZCV1N4Rk9VSklhMElzU1VGQk1rVTdRemhDU1RGSE96dEJRVXBJTEVGQlVVMHNaVUZTVXl4QlFVMWlMR2xDUVVGclFpeEhRVVZrTEdGQlFXRXNRMEZCUXp0RlFVTmtMRmxCUVZrc1JVRkJSU3hEUVVGRE8wVkJRMllzVjBGQlZ5eEZPVUpXYVVJc1NVRkJNa1U3UXpoQ1YzaEhPenRCUVU5TUxFRkJSVWtzWlVGR1Z5eEhRVVZZTEdGQlFXRXNRMEZCUXp0RlFVTmtMRmxCUVZrc1JUbENjRUpyUWl4SlFVRXlSVHRET0VKeFFqRkhPenRCUVVwSUxFRkJVVTBzWlVGU1V5eEJRVTFpTEdsQ1FVRnJRaXhIUVVWa0xHRkJRV0VzUTBGQlF6dEZRVU5rTEZsQlFWa3NSVUZCUlN4RFFVRkRPMFZCUTJZc1YwRkJWeXhGT1VJelFtbENMRWxCUVRKRk8wTTRRalJDZUVjN08wRkJUMHdzUVVGRlNTeGpRVVpWTEVkQlJWWXNZVUZCWVN4RFFVRkRPMFZCUTJRc1dVRkJXU3hGT1VKeVEydENMRWxCUVRCRk8wTTRRbk5EZWtjN08wRkJTa2dzUVVGUlRTeGpRVkpSTEVGQlRWb3NhVUpCUVd0Q0xFZEJSV1FzWVVGQllTeERRVUZETzBWQlEyUXNXVUZCV1N4RlFVRkZMRU5CUVVNN1JVRkRaaXhYUVVGWExFVTVRalZEYVVJc1NVRkJNRVU3UXpoQ05rTjJSenM3UVVGUlREdG5Sa0ZEWjBZN1FVRkZhRVlzUVVGRlNTeHBRa0ZHWVN4SFFVVmlMR0ZCUVdFc1EwRkJRenRGUVVOa0xFdEJRVXNzUlVGQlJTeExRVUZMTzBWQlExb3NXVUZCV1N4RlFVRkZMRU5CUVVNN1JVRkRaaXhYUVVGWExFVTVRbnBJWVN4SlFVRm5RenRET0VJd1NIcEVPenRCUTJwS1NEczdaMFpCUldkR08wRkJSV2hHT3pzN096czdPenM3T3p0SFFWZEhPMEZCUlVnc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFRpeFBRVUZQTEVWQlFVVXNTMEZCU3p0RlFVRkhMRk5CUVZNN1JVRkRNVUlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZCUnl4VFFVRlRPMFZCUTNaQ0xHTkJRV01zUlVGQlJTeERRVUZETzBWQlFVY3NVMEZCVXp0RFFVTTVRanM3UVVGSFF6czdPenRMUVVsSE8wRkJSVWdzUVVGQlFTeFpRVUZaTzBGQlExb3NRVUZCUVN4aFFVRmhMRU5CUVVNN1JVRkRXaXhQUVVGUExFVkJRVVVzVlVGQlZUdEZRVU51UWl4alFVRmpMRVZCUVVVc1RVRkJUVHRGUVVGSExGTkJRVk03UTBGRGJrTTdPMEZCUjBRN096czdPMHRCUzBjN1FVRkZTQ3hCUVVGQkxGbEJRVmtzUTBGQlF6dEZRVU5ZTEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUVVjc1UwRkJVenRGUVVOMFFpeGhRVUZoTEVVdlFuWkNWeXhKUVVGblF6dEZLMEl3UW5oRU96dFBRVVZITzBOQlRVbzdPMEZCWWtRc1FVRlRTU3haUVZSUkxFZEJVMUlzUjBGQlJ5eERRVUZETzBWQlEwb3NVMEZCVXl4RlFVRkZMRWxCUVVrN1JVRkJSeXhUUVVGVE8wTkJRelZDT3p0QlFVdElPenM3TzB0QlNVYzdRVUZGU0N4QlFVRkJMR0ZCUVdFc1EwRkJRenRGUVVOYUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlFVY3NVMEZCVXp0RFFVOTRRanM3UVVGU1JDeEJRVWRGTEdGQlNGYzdRVUZCWWl4QlFVbEpMR0ZCU2xNc1IwRkpWQ3hYUVVGWExFTkJRVU03UlVGRFdpeGhRVUZoTEVWQlFVVXNRMEZCUXp0RFFVTnFRanM3UVVGUlREdG5Sa0ZEWjBZN1FVRkZhRVlzUVVGRlNTeGpRVVpWTEVkQlJWWXNXVUZCV1N4RFFVRkRPMFZCUTJJc1lVRkJZU3hGUVVGRkxFTkJRVU03UlVGRGFFSXNXVUZCV1N4RlFVRkhMRU5CUVVNN1EwRkRha0k3TzBGQlMwZ3NRVUZGU1N4aFFVWlRMRWRCUlZRc1dVRkJXU3hEUVVGRE8wVkJRMklzWVVGQllTeEZMMEpvUW1sQ0xFZEJRVEJGTzBNclFtbENla2M3TzBGQlNrZ3NRVUZSVFN4aFFWSlBMRUZCVFZnc1owSkJRV2xDTEVkQlJXSXNXVUZCV1N4RFFVRkRPMFZCUTJJc1lVRkJZU3hGUVVGRkxFTkJRVU03UlVGRGFFSXNXVUZCV1N4RkwwSjJRbWRDTEVkQlFUQkZPME1yUW5kQ2RrYzdPMEZCVDB3c1FVRkZTU3hqUVVaVkxFZEJSVllzV1VGQldTeERRVUZETzBWQlEySXNZVUZCWVN4RkwwSnFRMmxDTEVsQlFUSkZPME1yUW10RE1VYzdPMEZCU2tnc1FVRlJUU3hqUVZKUkxFRkJUVm9zWjBKQlFXbENMRWRCUldJc1dVRkJXU3hEUVVGRE8wVkJRMklzWVVGQllTeEZRVUZGTEVOQlFVTTdSVUZEYUVJc1dVRkJXU3hGTDBKNFEyZENMRWxCUVRKRk8wTXJRbmxEZUVjN08wRkJUMHdzUVVGRlNTeGpRVVpWTEVkQlJWWXNXVUZCV1N4RFFVRkRPMFZCUTJJc1lVRkJZU3hGTDBKc1JHbENMRWxCUVRKRk8wTXJRbTFFTVVjN08wRkJTa2dzUVVGUlRTeGpRVkpSTEVGQlRWb3NaMEpCUVdsQ0xFZEJSV0lzV1VGQldTeERRVUZETzBWQlEySXNZVUZCWVN4RlFVRkZMRU5CUVVNN1JVRkRhRUlzV1VGQldTeEZMMEo2UkdkQ0xFbEJRVEpGTzBNclFqQkVlRWM3TzBGQlQwd3NRVUZGU1N4aFFVWlRMRWRCUlZRc1dVRkJXU3hEUVVGRE8wVkJRMklzWVVGQllTeEZMMEp1UldsQ0xFbEJRVEJGTzBNclFtOUZla2M3TzBGQlNrZ3NRVUZSVFN4aFFWSlBMRUZCVFZnc1owSkJRV2xDTEVkQlJXSXNXVUZCV1N4RFFVRkRPMFZCUTJJc1lVRkJZU3hGUVVGRkxFTkJRVU03UlVGRGFFSXNXVUZCV1N4RkwwSXhSV2RDTEVsQlFUQkZPME1yUWpKRmRrYzdPMEZCVTB3N1owWkJRMmRHTzBGQlJXaEdPenM3TzBkQlNVYzdRVUZGU0N4QlFVRkJMR2RDUVVGblFpeERRVUZETzBWQlEyWXNVMEZCVXl4RlFVRkZMRWRCUVVjN1JVRkJSeXhUUVVGVE8wTkJXVE5DT3p0QlFXSkVMRUZCUjBrc1owSkJTRmtzUjBGSFdpeFpRVUZaTzBGQlNHaENMRUZCU1Vrc1owSkJTbGtzUjBGSldpeGhRVUZoTEVOQlFVTTdSVUZEWkN4VFFVRlRMRVZCUVVVc1IwRkJSenRGUVVGSExGTkJRVk03UTBGRE0wSTdPMEZCVGtnc1FVRlJTU3huUWtGU1dTeEhRVkZhTEZsQlFWa3NRMEZCUXp0RlFVTmlMR0ZCUVdFc1JVRkJSU3hEUVVGRE8wVkJRVWNzVTBGQlV6dEZRVU0xUWl4WlFVRlpMRVV2UW01TFdTeEpRVUZuUXp0RkswSnRTMlFzVTBGQlV6dERRVU53UkRzN1FVRlJTRHRuUmtGRFowWTdRVUZGYUVZN08wZEJSVWM3UVVGRlNDeEJRVVZKTEZsQlJsRXNSMEZGVWl4WlFVRlpPMEZCUm1oQ0xFRkJSMGtzV1VGSVVTeEhRVWRTTEdGQlFXRXNRMEZCUXp0RlFVTmtMR05CUVdNc1JVRkJSU3hIUVVGSE8wTkJRM0JDT3p0QlFVdElMRUZCUlVrc1pVRkdWeXhIUVVWWUxGbEJRVms3UVVGR2FFSXNRVUZIU1N4bFFVaFhMRWRCUjFnc1lVRkJZU3hEUVVGRE8wVkJRMlFzWTBGQll5eEZRVUZGTEUxQlFVMDdRMEZEZGtJN08wRkRlazVJT3p0blJrRkZaMFk3UVVGRmFFWTdPenM3T3p0SFFVMUhPMEZCUlVnc1FVRkJRU3haUVVGWkxFTkJRVU03UlVGRFdDeFZRVUZWTEVWQlFVVXNTVUZCU1R0RlFVTm9RaXhYUVVGWExFVkJRVVVzUTBGQlF6dERRVU5tT3p0QlFVZERMRUZCUVVFc2EwSkJRV3RDTEVOQlFVTTdSVUZEYWtJc1YwRkJWeXhGUVVGRkxFTkJRVU03UTBGRFpqczdRVU53UWtnN08yZEdRVVZuUmp0QlFVVm9SanM3UjBGRlJ6dEJRVVZJTEVGQlFVRXNZMEZCWXl4RFFVRkRPMFZCUTJJc1YwRkJWeXhGUVVGRkxFTkJRVU03UlVGRFpDeFZRVUZWTEVWQlFVVXNTVUZCU1R0RFFVTnFRanM3UVVGSFF5eEJRVUZCTEc5Q1FVRnZRaXhEUVVGRE8wVkJRMjVDTEU5QlFVOHNSVUZCUlN4WlFVRlpPME5CUTNSQ096dEJRMmhDU0RzN1owWkJSV2RHTzBGQlJXaEdPenM3UjBGSFJ6dEJRVVZJTEVGQlFVRXNVVUZCVVN4RFFVRkRPMFZCUTFBc1QwRkJUeXhGUVVGRkxFdEJRVXM3UlVGRFpDeFZRVUZWTEVWQlFVVXNUVUZCVFR0RFFVTnVRanM3UVVGSFF5eEJRVUZCTEdGQlFXRXNRMEZCUXp0RlFVTmFMR0ZCUVdFc1JXeERUMWNzU1VGQlowTTdSV3REU25oRU8yZEdRVU0wUlR0RFFYTkNOMFU3TzBGQmNFSkRMRUZCUVd0Q0xHVkJRVWdzUjBGUWFrSXNZVUZCWVN4RFFVOVRPMFZCUTJ4Q0xHRkJRV0VzUlVGQlJTeERRVUZETzBOQlEycENPenRCUVVWRUxFRkJRV2xDTEdOQlFVZ3NSMEZZYUVJc1lVRkJZU3hEUVZkUk8wVkJRMnBDTEdGQlFXRXNSV3hEY1VSbExFZEJRVEJGTzBOclEzQkVka2M3TzBGQlJVUXNRVUZCYTBJc1pVRkJTQ3hIUVdacVFpeGhRVUZoTEVOQlpWTTdSVUZEYkVJc1lVRkJZU3hGYkVOclJHVXNTVUZCTWtVN1EydERha1I0UnpzN1FVRkZSQ3hCUVVGclFpeGxRVUZJTEVkQmJrSnFRaXhoUVVGaExFTkJiVUpUTzBWQlEyeENMR0ZCUVdFc1JXeERLME5sTEVsQlFUSkZPME5yUXpsRGVFYzdPMEZCUlVRc1FVRkJhVUlzWTBGQlNDeEhRWFpDYUVJc1lVRkJZU3hEUVhWQ1VUdEZRVU5xUWl4aFFVRmhMRVZzUXpSRFpTeEpRVUV3UlR0RGEwTXpRM1pIT3p0QlFVdElMRUZCUVVFc1kwRkJZeXhEUVVGRE8wVkJRMklzVDBGQlR5eEZRVUZGTEV0QlFVczdRMEZEWmpzN1FVRk5TRHRuUmtGRFowWTdRVUZGYUVZc1FVRkJRU3hsUVVGbExFTkJRVU03UlVGRFpDeFZRVUZWTEVWQlFVVXNTMEZCU3p0RFFVTnNRanM3UVVGRlJDeEJRVUZCTEdOQlFXTXNRMEZCUXp0RlFVTmlMRlZCUVZVc1JVRkJSU3hKUVVGSk8wTkJRMnBDT3p0QlF6bEVSRHM3TmtKQlJUWkNPMEZEUmpkQ096czJRa0ZGTmtJN1FVRkpNMElzUVVGQlFTeHBRa0ZCYVVJc1EwRkJRenRGUVVOb1FpeG5Ra0ZCWjBJc1JXNURSRmdzVDBGQlR6dEZiVU5GV2l4TlFVRk5MRVZCUVVVc1IwRkJSeXhEUVVGRExFdEJRVXNzUTI1RFJsb3NUMEZCVHp0RmJVTkhXaXhOUVVGTkxFVkJRVVVzVDBGQlR6dEZRVU5tTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeFBRVUZQTEVWd1EzRkZkVUlzU1VGQk1rVXNRMEZETTBVc1NVRkJNa1U3Ulc5RGNrVjZSeXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4VlFVRlZMRVZCUVVVc1RVRkJUVHRGUVVOc1FpeGxRVUZsTEVWQlFVVXNTVUZCU1R0RlFVTnlRaXhWUVVGVkxFVkJRVVVzVDBGQlR6dEZRVU51UWl4TFFVRkxMRVZCUVVVc1NVRkJTVHREUVcxQ1dqczdRWGhDTkV4TExFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUMEZCVHp0RmQwSXhUbWhETEVGQlFVRXNhVUpCUVdsQ0xFTkJRVU03U1VGalpDeFRRVUZUTEVWQlFVVXNTMEZCU3p0SFFXZENia0k3T3p0QmVFSTBURXNzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4UFFVRlBPMFYzUWpGT2FFTXNRVUZCUVN4cFFrRkJhVUlzUTBGQlF6dEpRV3RDWkN4VFFVRlRMRVZCUVVVc1NVRkJTVHRKUVVObUxFdEJRVXNzUlVGQlJTeFBRVUZQTzBkQlYycENPenM3UVVFNVFrUXNRVUZ6UWtVc2FVSkJkRUpsTEVGQmMwSm1MRTFCUVU4c1EwRkJRenRGUVVOT0xHZENRVUZuUWl4RmJrTjRRbUlzVDBGQlR6dERiVU41UWxnN08wRkJlRUpJTEVGQk1FSlZMR2xDUVRGQ1R5eEJRVEJDWml4TlFVRlBMRU5CUVVNc1pVRkJaVHRCUVRGQ2VrSXNRVUV5UWxVc2FVSkJNMEpQTEVGQk1rSm1MRTFCUVU4c1EwRkJReXh6UWtGQmMwSXNRMEZCUXp0RlFVTTNRaXhMUVVGTExFVnVRelZDUml4UFFVRlBPME50UXpaQ1dEczdRVUZIUkN4QlFVRkJMR1ZCUVdVN1FVRkRaaXhCUVVGQkxITkNRVUZ6UWl4RFFVRkRPMFZCUTNKQ0xFdEJRVXNzUlc1RGJrTkdMRTlCUVU4N1JXMURiME5XTEZWQlFWVXNSVUZCUlN4UFFVRlBPME5CUTNCQ096dEJRVVZFTEVGQlFVRXNaVUZCWlN4RFFVRkRPMFZCUTJRc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNWVUZCVlN4RlFVRkZMRTFCUVUwN1JVRkRiRUlzWTBGQll5eEZRVUZGTEZOQlFWTTdSVFZDZGtJM1FpeFRRVUZUTEVVMFFuZENZeXhKUVVGSk8wVTFRblpDTTBJc1UwRkJVeXhGUVVGRkxGRkJRVFpETzBWQlIzUkVMRmRCUVZjc1JVRkJSU3hWUVVGMVJqdERORUp4UW01SE96dEJRVVZFTEVGQlFVRXNjMEpCUVhOQ0xFTkJRVU03UlVGRGNrSXNWMEZCVnl4RmNFTTJRbWxDTEVsQlFUSkZPMFZ2UXpWQ2RrY3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUzBGQlN5eEZRVUZGTEVsQlFXbENPMFZCUTNoQ0xFZEJRVWNzUlVGQlJTeEhRVUZITzBWQlExSXNVMEZCVXl4RlFVRkZMR2RDUVVGblFqdEZOVUpvUXk5Q0xGTkJRVk1zUlRSQ2FVTmpMRWxCUVVrN1JUVkNhRU16UWl4VFFVRlRMRVZCUVVVc1VVRkJOa003UlVGSGRFUXNWMEZCVnl4RlFVRkZMRlZCUVhWR08wTTBRamhDYmtjN08wRkRNVVJNT3p0blJrRkZaMFk3UVVGRmFFWTdPMGRCUlVjN1FVRkZTQ3hCTTBKSlJTeFhNa0pLVXl4Qk0wSkpXQ3hOUVVGVExFTkJRVU03UlVGRFRpeFBRVUZQTEVWQlFVVXNZVUZCWVR0RlFVTjBRaXhQUVVGUExFVkJRVVVzWjBKQlFXZENPMFZCUTNwQ0xFdEJRVXNzUlVGQlJTeGxRVUZsTzBOQlEzWkNPenRCTkVKb1FrZzdPMmRHUVVWblJqdEJRVVZvUmpzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenRIUVhsQ1J6dEJRWGRIU0RzN096czdPenM3TzBkQlUwYzdRVUUxUTBjc1FVRkJRU3hQUVVGUExFTkJRV2xGTzBWQlEzUkZMRXRCUVVzc1JVRkJSU3hKUVVGclF5eERRVUZETEZWQlFWVTdRMEZEY2tRN08wRkJSa1FzUVVGQlFTeFBRVUZQTEVOQlFXbEZPMFZCUTNSRkxFdEJRVXNzUlVGQlJTeEhRVUZyUXl4RFFVRkRMRlZCUVZVN1EwRkRja1E3TzBGQlJrUXNRVUZCUVN4UFFVRlBMRU5CUVdsRk8wVkJRM1JGTEV0QlFVc3NSVUZCUlN4SlFVRnJReXhEUVVGRExGVkJRVlU3UTBGRGNrUTdPMEZCUmtRc1FVRkJRU3hQUVVGUExFTkJRV2xGTzBWQlEzUkZMRXRCUVVzc1JVRkJSU3haUVVGclF5eERRVUZETEZWQlFWVTdRMEZEY2tRN08wRkJSa1FzUVVGQlFTeFBRVUZQTEVOQlFXbEZPMFZCUTNSRkxFdEJRVXNzUlVGQlJTeFpRVUZyUXl4RFFVRkRMRlZCUVZVN1EwRkRja1E3TzBGQlJrUXNRVUZCUVN4UFFVRlBMRU5CUVdsRk8wVkJRM1JGTEV0QlFVc3NSVUZCUlN4SlFVRnJReXhEUVVGRExGVkJRVlU3UTBGRGNrUTdPMEZCUmtRc1FVRkJRU3hQUVVGUExFTkJRV2xGTzBWQlEzUkZMRXRCUVVzc1JVRkJSU3hIUVVGclF5eERRVUZETEZWQlFWVTdRMEZEY2tRN08wRkJSa1FzUVVGQlFTeFBRVUZQTEVOQlFXbEZPMFZCUTNSRkxFdEJRVXNzUlVGQlJTeEhRVUZyUXl4RFFVRkRMRlZCUVZVN1EwRkRja1E3TzBGQlJrUXNRVUZCUVN4UFFVRlBMRU5CUVdsRk8wVkJRM1JGTEV0QlFVc3NSVUZCUlN4SFFVRnJReXhEUVVGRExGVkJRVlU3UTBGRGNrUTdPMEZCUmtRc1FVRkJRU3hQUVVGUExFTkJRV2xGTzBWQlEzUkZMRXRCUVVzc1JVRkJSU3hKUVVGclF5eERRVUZETEZWQlFWVTdRMEZEY2tRN08wRkJSa1FzUVVGQlFTeFBRVUZQTEVOQlFXbEZPMFZCUTNSRkxFdEJRVXNzUlVGQlJTeEhRVUZyUXl4RFFVRkRMRlZCUVZVN1EwRkRja1E3TzBGQlJrUXNRVUZCUVN4UFFVRlBMRU5CUVdsRk8wVkJRM1JGTEV0QlFVc3NSVUZCUlN4SFFVRnJReXhEUVVGRExGVkJRVlU3UTBGRGNrUTdPMEZCUmtRc1FVRkJRU3hQUVVGUExFTkJRV2xGTzBWQlEzUkZMRXRCUVVzc1JVRkJSU3hIUVVGclF5eERRVUZETEZWQlFWVTdRMEZEY2tRN08wRkJSa1FzUVVGQlFTeFBRVUZQTEVOQlFXbEZPMFZCUTNSRkxFdEJRVXNzUlVGQlJTeEhRVUZyUXl4RFFVRkRMRlZCUVZVN1EwRkRja1E3TzBGQlJrUXNRVUZCUVN4UFFVRlBMRU5CUVdsRk8wVkJRM1JGTEV0QlFVc3NSVUZCUlN4SlFVRnJReXhEUVVGRExGVkJRVlU3UTBGRGNrUTdPMEZCYVVSUU96czdPenRIUVV0SE8wRXhRbk5GU3l4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlRCQ09VaDZRaXhCUVVGQkxHVkJRV1VzUTBGQmVVUTdTVUZEZEVVc1MwRkJTeXhGUVVGRkxFbEJRV3RETEVOQlFVTXNWVUZCVlR0SFFVTnlSRHRGUVVaRUxFRkJRVUVzWlVGQlpTeERRVUY1UkR0SlFVTjBSU3hMUVVGTExFVkJRVVVzUjBGQmEwTXNRMEZCUXl4VlFVRlZPMGRCUTNKRU8wVkJSa1FzUVVGQlFTeGxRVUZsTEVOQlFYbEVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeEpRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdWQlFXVXNRMEZCZVVRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEZsQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNaVUZCWlN4RFFVRjVSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNXVUZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4bFFVRmxMRU5CUVhsRU8wbEJRM1JGTEV0QlFVc3NSVUZCUlN4SlFVRnJReXhEUVVGRExGVkJRVlU3UjBGRGNrUTdSVUZHUkN4QlFVRkJMR1ZCUVdVc1EwRkJlVVE3U1VGRGRFVXNTMEZCU3l4RlFVRkZMRWRCUVd0RExFTkJRVU1zVlVGQlZUdEhRVU55UkR0RlFVWkVMRUZCUVVFc1pVRkJaU3hEUVVGNVJEdEpRVU4wUlN4TFFVRkxMRVZCUVVVc1IwRkJhME1zUTBGQlF5eFZRVUZWTzBkQlEzSkVPMFZCUmtRc1FVRkJRU3hsUVVGbExFTkJRWGxFTzBsQlEzUkZMRXRCUVVzc1JVRkJSU3hIUVVGclF5eERRVUZETEZWQlFWVTdSMEZEY2tRN1JVRkdSQ3hCUVVGQkxHVkJRV1VzUTBGQmVVUTdTVUZEZEVVc1MwRkJTeXhGUVVGRkxFbEJRV3RETEVOQlFVTXNWVUZCVlR0SFFVTnlSRHRGUVVaRUxFRkJRVUVzWlVGQlpTeERRVUY1UkR0SlFVTjBSU3hMUVVGTExFVkJRVVVzUjBGQmEwTXNRMEZCUXl4VlFVRlZPMGRCUTNKRU8wVkJSa1FzUVVGQlFTeGxRVUZsTEVOQlFYbEVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeEhRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdWQlFXVXNRMEZCZVVRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEVkQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNaVUZCWlN4RFFVRjVSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNSMEZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4bFFVRmxMRU5CUVhsRU8wbEJRM1JGTEV0QlFVc3NSVUZCUlN4SlFVRnJReXhEUVVGRExGVkJRVlU3UjBGRGNrUTdPenRCTVVJMFNFTXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hQUVVGUE8wVXdRamxJTlVJc1FVRkJRU3hsUVVGbExFTkJRWGxFTzBsQlEzUkZMRXRCUVVzc1JVRkJSU3hKUVVGclF5eERRVUZETEZWQlFWVTdSMEZEY2tRN1JVRkdSQ3hCUVVGQkxHVkJRV1VzUTBGQmVVUTdTVUZEZEVVc1MwRkJTeXhGUVVGRkxFZEJRV3RETEVOQlFVTXNWVUZCVlR0SFFVTnlSRHRGUVVaRUxFRkJRVUVzWlVGQlpTeERRVUY1UkR0SlFVTjBSU3hMUVVGTExFVkJRVVVzU1VGQmEwTXNRMEZCUXl4VlFVRlZPMGRCUTNKRU8wVkJSa1FzUVVGQlFTeGxRVUZsTEVOQlFYbEVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeFpRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdWQlFXVXNRMEZCZVVRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEZsQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNaVUZCWlN4RFFVRjVSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNTVUZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4bFFVRmxMRU5CUVhsRU8wbEJRM1JGTEV0QlFVc3NSVUZCUlN4SFFVRnJReXhEUVVGRExGVkJRVlU3UjBGRGNrUTdSVUZHUkN4QlFVRkJMR1ZCUVdVc1EwRkJlVVE3U1VGRGRFVXNTMEZCU3l4RlFVRkZMRWRCUVd0RExFTkJRVU1zVlVGQlZUdEhRVU55UkR0RlFVWkVMRUZCUVVFc1pVRkJaU3hEUVVGNVJEdEpRVU4wUlN4TFFVRkxMRVZCUVVVc1IwRkJhME1zUTBGQlF5eFZRVUZWTzBkQlEzSkVPMFZCUmtRc1FVRkJRU3hsUVVGbExFTkJRWGxFTzBsQlEzUkZMRXRCUVVzc1JVRkJSU3hKUVVGclF5eERRVUZETEZWQlFWVTdSMEZEY2tRN1JVRkdSQ3hCUVVGQkxHVkJRV1VzUTBGQmVVUTdTVUZEZEVVc1MwRkJTeXhGUVVGRkxFZEJRV3RETEVOQlFVTXNWVUZCVlR0SFFVTnlSRHRGUVVaRUxFRkJRVUVzWlVGQlpTeERRVUY1UkR0SlFVTjBSU3hMUVVGTExFVkJRVVVzUjBGQmEwTXNRMEZCUXl4VlFVRlZPMGRCUTNKRU8wVkJSa1FzUVVGQlFTeGxRVUZsTEVOQlFYbEVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeEhRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdWQlFXVXNRMEZCZVVRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEVkQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNaVUZCWlN4RFFVRjVSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNTVUZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFT3pzN1FURkNORWhETEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1QwRkJUenRGTUVJNVNEVkNMRUZCUVVFc1owSkJRV2RDTEVOQlFYZEVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeEpRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdkQ1FVRm5RaXhEUVVGM1JEdEpRVU4wUlN4TFFVRkxMRVZCUVVVc1IwRkJhME1zUTBGQlF5eFZRVUZWTzBkQlEzSkVPMFZCUmtRc1FVRkJRU3huUWtGQlowSXNRMEZCZDBRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEVsQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNaMEpCUVdkQ0xFTkJRWGRFTzBsQlEzUkZMRXRCUVVzc1JVRkJSU3haUVVGclF5eERRVUZETEZWQlFWVTdSMEZEY2tRN1JVRkdSQ3hCUVVGQkxHZENRVUZuUWl4RFFVRjNSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNXVUZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4blFrRkJaMElzUTBGQmQwUTdTVUZEZEVVc1MwRkJTeXhGUVVGRkxFbEJRV3RETEVOQlFVTXNWVUZCVlR0SFFVTnlSRHRGUVVaRUxFRkJRVUVzWjBKQlFXZENMRU5CUVhkRU8wbEJRM1JGTEV0QlFVc3NSVUZCUlN4SFFVRnJReXhEUVVGRExGVkJRVlU3UjBGRGNrUTdSVUZHUkN4QlFVRkJMR2RDUVVGblFpeERRVUYzUkR0SlFVTjBSU3hMUVVGTExFVkJRVVVzUjBGQmEwTXNRMEZCUXl4VlFVRlZPMGRCUTNKRU8wVkJSa1FzUVVGQlFTeG5Ra0ZCWjBJc1EwRkJkMFE3U1VGRGRFVXNTMEZCU3l4RlFVRkZMRWRCUVd0RExFTkJRVU1zVlVGQlZUdEhRVU55UkR0RlFVWkVMRUZCUVVFc1owSkJRV2RDTEVOQlFYZEVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeEpRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdkQ1FVRm5RaXhEUVVGM1JEdEpRVU4wUlN4TFFVRkxMRVZCUVVVc1IwRkJhME1zUTBGQlF5eFZRVUZWTzBkQlEzSkVPMFZCUmtRc1FVRkJRU3huUWtGQlowSXNRMEZCZDBRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEVkQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNaMEpCUVdkQ0xFTkJRWGRFTzBsQlEzUkZMRXRCUVVzc1JVRkJSU3hIUVVGclF5eERRVUZETEZWQlFWVTdSMEZEY2tRN1JVRkdSQ3hCUVVGQkxHZENRVUZuUWl4RFFVRjNSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNSMEZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4blFrRkJaMElzUTBGQmQwUTdTVUZEZEVVc1MwRkJTeXhGUVVGRkxFbEJRV3RETEVOQlFVTXNWVUZCVlR0SFFVTnlSRHM3TzBFeFFqUklReXhOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEU5QlFVODdSVEJDT1VnMVFpeEJRVUZCTEdGQlFXRXNRMEZCTWtRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEVsQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNZVUZCWVN4RFFVRXlSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNSMEZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4aFFVRmhMRU5CUVRKRU8wbEJRM1JGTEV0QlFVc3NSVUZCUlN4SlFVRnJReXhEUVVGRExGVkJRVlU3UjBGRGNrUTdSVUZHUkN4QlFVRkJMR0ZCUVdFc1EwRkJNa1E3U1VGRGRFVXNTMEZCU3l4RlFVRkZMRmxCUVd0RExFTkJRVU1zVlVGQlZUdEhRVU55UkR0RlFVWkVMRUZCUVVFc1lVRkJZU3hEUVVFeVJEdEpRVU4wUlN4TFFVRkxMRVZCUVVVc1dVRkJhME1zUTBGQlF5eFZRVUZWTzBkQlEzSkVPMFZCUmtRc1FVRkJRU3hoUVVGaExFTkJRVEpFTzBsQlEzUkZMRXRCUVVzc1JVRkJSU3hKUVVGclF5eERRVUZETEZWQlFWVTdSMEZEY2tRN1JVRkdSQ3hCUVVGQkxHRkJRV0VzUTBGQk1rUTdTVUZEZEVVc1MwRkJTeXhGUVVGRkxFZEJRV3RETEVOQlFVTXNWVUZCVlR0SFFVTnlSRHRGUVVaRUxFRkJRVUVzWVVGQllTeERRVUV5UkR0SlFVTjBSU3hMUVVGTExFVkJRVVVzUjBGQmEwTXNRMEZCUXl4VlFVRlZPMGRCUTNKRU8wVkJSa1FzUVVGQlFTeGhRVUZoTEVOQlFUSkVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeEhRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdGQlFXRXNRMEZCTWtRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEVsQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNZVUZCWVN4RFFVRXlSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNSMEZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4aFFVRmhMRU5CUVRKRU8wbEJRM1JGTEV0QlFVc3NSVUZCUlN4SFFVRnJReXhEUVVGRExGVkJRVlU3UjBGRGNrUTdSVUZHUkN4QlFVRkJMR0ZCUVdFc1EwRkJNa1E3U1VGRGRFVXNTMEZCU3l4RlFVRkZMRWRCUVd0RExFTkJRVU1zVlVGQlZUdEhRVU55UkR0RlFVWkVMRUZCUVVFc1lVRkJZU3hEUVVFeVJEdEpRVU4wUlN4TFFVRkxMRVZCUVVVc1IwRkJhME1zUTBGQlF5eFZRVUZWTzBkQlEzSkVPMFZCUmtRc1FVRkJRU3hoUVVGaExFTkJRVEpFTzBsQlEzUkZMRXRCUVVzc1JVRkJSU3hKUVVGclF5eERRVUZETEZWQlFWVTdSMEZEY2tRN096dEJNVUkwU0VNc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTzBVd1FqbElNVUlzUVVGQlFTeGxRVUZsTEVOQlFYbEVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeEpRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdWQlFXVXNRMEZCZVVRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEVkQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNaVUZCWlN4RFFVRjVSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNTVUZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4bFFVRmxMRU5CUVhsRU8wbEJRM1JGTEV0QlFVc3NSVUZCUlN4WlFVRnJReXhEUVVGRExGVkJRVlU3UjBGRGNrUTdSVUZHUkN4QlFVRkJMR1ZCUVdVc1EwRkJlVVE3U1VGRGRFVXNTMEZCU3l4RlFVRkZMRmxCUVd0RExFTkJRVU1zVlVGQlZUdEhRVU55UkR0RlFVWkVMRUZCUVVFc1pVRkJaU3hEUVVGNVJEdEpRVU4wUlN4TFFVRkxMRVZCUVVVc1NVRkJhME1zUTBGQlF5eFZRVUZWTzBkQlEzSkVPMFZCUmtRc1FVRkJRU3hsUVVGbExFTkJRWGxFTzBsQlEzUkZMRXRCUVVzc1JVRkJSU3hIUVVGclF5eERRVUZETEZWQlFWVTdSMEZEY2tRN1JVRkdSQ3hCUVVGQkxHVkJRV1VzUTBGQmVVUTdTVUZEZEVVc1MwRkJTeXhGUVVGRkxFZEJRV3RETEVOQlFVTXNWVUZCVlR0SFFVTnlSRHRGUVVaRUxFRkJRVUVzWlVGQlpTeERRVUY1UkR0SlFVTjBSU3hMUVVGTExFVkJRVVVzUjBGQmEwTXNRMEZCUXl4VlFVRlZPMGRCUTNKRU8wVkJSa1FzUVVGQlFTeGxRVUZsTEVOQlFYbEVPMGxCUTNSRkxFdEJRVXNzUlVGQlJTeEpRVUZyUXl4RFFVRkRMRlZCUVZVN1IwRkRja1E3UlVGR1JDeEJRVUZCTEdWQlFXVXNRMEZCZVVRN1NVRkRkRVVzUzBGQlN5eEZRVUZGTEVkQlFXdERMRU5CUVVNc1ZVRkJWVHRIUVVOeVJEdEZRVVpFTEVGQlFVRXNaVUZCWlN4RFFVRjVSRHRKUVVOMFJTeExRVUZMTEVWQlFVVXNSMEZCYTBNc1EwRkJReXhWUVVGVk8wZEJRM0pFTzBWQlJrUXNRVUZCUVN4bFFVRmxMRU5CUVhsRU8wbEJRM1JGTEV0QlFVc3NSVUZCUlN4SFFVRnJReXhEUVVGRExGVkJRVlU3UjBGRGNrUTdSVUZHUkN4QlFVRkJMR1ZCUVdVc1EwRkJlVVE3U1VGRGRFVXNTMEZCU3l4RlFVRkZMRWRCUVd0RExFTkJRVU1zVlVGQlZUdEhRVU55UkR0RlFVWkVMRUZCUVVFc1pVRkJaU3hEUVVGNVJEdEpRVU4wUlN4TFFVRkxMRVZCUVVVc1NVRkJhME1zUTBGQlF5eFZRVUZWTzBkQlEzSkVPenM3UVVOd1IxQTdPMmRHUVVWblJqdEJRVVZvUmpzN096czdPenM3T3pzN1IwRlhSenRCUVVWSUxIRkRRVUZ4UXp0QlFXZERMMElzUVVGQlFTeFZRVUZWTEVOQlFYbEVPMFZCUnk5RUxFOUJRWGxDTEVWMlF6ZENVQ3hKUVVGblF5eERkVU0yUW1wQ0xGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3hsUVVGbExFTkJRVzlFTzBWQlJ5OUVMRTlCUVhsQ0xFVjJRelJDUkN4SFFVRXdSU3hEZFVNMVFtcEZMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4blFrRkJaMElzUTBGQmJVUTdSVUZITDBRc1QwRkJlVUlzUlhaRE5rSkVMRWxCUVRKRkxFTjFRemRDYkVVc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMR2RDUVVGblFpeERRVUZ0UkR0RlFVY3ZSQ3hQUVVGNVFpeEZka000UWtRc1NVRkJNa1VzUTNWRE9VSnNSU3hWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc1pVRkJaU3hEUVVGdlJEdEZRVWN2UkN4UFFVRjVRaXhGZGtNclFrUXNTVUZCTUVVc1EzVkRMMEpxUlN4VlFVRlZPME5CUnpsRE96dEJRVTVFTEVGQlFVRXNaVUZCWlN4RFFVRnZSRHRGUVVjdlJDeFBRVUY1UWl4RlFWcDRRaXhEUVVGRExFTkJXU3RDTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeGpRVUZqTEVOQlFYRkVPMFZCUnk5RUxGZEJRWGxDTEVWMlF6ZENVQ3hKUVVGblF5eERkVU0yUW1wQ0xGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3h0UWtGQmJVSXNRMEZCWjBRN1JVRkhMMFFzVjBGQmVVSXNSWFpETkVKRUxFZEJRVEJGTEVOMVF6VkNha1VzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxHOUNRVUZ2UWl4RFFVRXJRenRGUVVjdlJDeFhRVUY1UWl4RmRrTTJRa1FzU1VGQk1rVXNRM1ZETjBKc1JTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzYjBKQlFXOUNMRU5CUVN0RE8wVkJSeTlFTEZkQlFYbENMRVYyUXpoQ1JDeEpRVUV5UlN4RGRVTTVRbXhGTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeHRRa0ZCYlVJc1EwRkJaMFE3UlVGSEwwUXNWMEZCZVVJc1JYWkRLMEpFTEVsQlFUQkZMRU4xUXk5Q2FrVXNWVUZCVlR0RFFVYzVRenM3UVVGT1JDeEJRVUZCTEcxQ1FVRnRRaXhEUVVGblJEdEZRVWN2UkN4WFFVRjVRaXhGUVZwNFFpeERRVUZETEVOQldTdENMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4blFrRkJaMElzUTBGQmJVUTdSVUZITDBRc1lVRkJlVUlzUlhaRE4wSlFMRWxCUVdkRExFTjFRelpDYWtJc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMSEZDUVVGeFFpeERRVUU0UXp0RlFVY3ZSQ3hoUVVGNVFpeEZka00wUWtRc1IwRkJNRVVzUTNWRE5VSnFSU3hWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2MwSkJRWE5DTEVOQlFUWkRPMFZCUnk5RUxHRkJRWGxDTEVWMlF6WkNSQ3hKUVVFeVJTeERkVU0zUW14RkxGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3h6UWtGQmMwSXNRMEZCTmtNN1JVRkhMMFFzWVVGQmVVSXNSWFpET0VKRUxFbEJRVEpGTEVOMVF6bENiRVVzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxIRkNRVUZ4UWl4RFFVRTRRenRGUVVjdlJDeGhRVUY1UWl4RmRrTXJRa1FzU1VGQk1FVXNRM1ZETDBKcVJTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzY1VKQlFYRkNMRU5CUVRoRE8wVkJSeTlFTEdGQlFYbENMRVZCV25oQ0xFTkJRVU1zUTBGWkswSXNWVUZCVlR0RFFVYzVRenM3UVVGT1JDeEJRVUZCTEdsQ1FVRnBRaXhEUVVGclJEdEZRVWN2UkN4alFVRjVRaXhGZGtNM1FsQXNTVUZCWjBNc1EzVkROa0pxUWl4VlFVRlZPME5CUnpsRE96dEJRVTVFTEVGQlFVRXNjMEpCUVhOQ0xFTkJRVFpETzBWQlJ5OUVMR05CUVhsQ0xFVjJRelJDUkN4SFFVRXdSU3hEZFVNMVFtcEZMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4MVFrRkJkVUlzUTBGQk5FTTdSVUZITDBRc1kwRkJlVUlzUlhaRE5rSkVMRWxCUVRKRkxFTjFRemRDYkVVc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMSFZDUVVGMVFpeERRVUUwUXp0RlFVY3ZSQ3hqUVVGNVFpeEZka000UWtRc1NVRkJNa1VzUTNWRE9VSnNSU3hWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2MwSkJRWE5DTEVOQlFUWkRPMFZCUnk5RUxHTkJRWGxDTEVWMlF5dENSQ3hKUVVFd1JTeERkVU12UW1wRkxGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3h6UWtGQmMwSXNRMEZCTmtNN1JVRkhMMFFzWTBGQmVVSXNSVUZhZUVJc1EwRkJReXhEUVZrclFpeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzWlVGQlpTeERRVUZ2UkR0RlFVY3ZSQ3haUVVGNVFpeEZka00zUWxBc1NVRkJaME1zUTNWRE5rSnFRaXhWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2IwSkJRVzlDTEVOQlFTdERPMFZCUnk5RUxGbEJRWGxDTEVWMlF6UkNSQ3hIUVVFd1JTeERkVU0xUW1wRkxGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3h4UWtGQmNVSXNRMEZCT0VNN1JVRkhMMFFzV1VGQmVVSXNSWFpETmtKRUxFbEJRVEpGTEVOMVF6ZENiRVVzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxIRkNRVUZ4UWl4RFFVRTRRenRGUVVjdlJDeFpRVUY1UWl4RmRrTTRRa1FzU1VGQk1rVXNRM1ZET1VKc1JTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzYjBKQlFXOUNMRU5CUVN0RE8wVkJSeTlFTEZsQlFYbENMRVYyUXl0Q1JDeEpRVUV3UlN4RGRVTXZRbXBGTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeHZRa0ZCYjBJc1EwRkJLME03UlVGSEwwUXNXVUZCZVVJc1JVRmFlRUlzUTBGQlF5eERRVmtyUWl4VlFVRlZPME5CUnpsRE96dEJRVTVFTEVGQlFVRXNjVUpCUVhGQ0xFTkJRVGhETzBWQlJ5OUVMRmxCUVhsQ0xFVjJRemRDVUN4SlFVRm5ReXhEZFVNMlFtcENMRlZCUVZVN1JVRkJNME1zWVVGQmVVSXNSWFpETjBKUUxFbEJRV2RETEVOMVF6WkNha0lzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxEQkNRVUV3UWl4RFFVRjVRenRGUVVjdlJDeFpRVUY1UWl4RmRrTTBRa1FzUjBGQk1FVXNRM1ZETlVKcVJTeFZRVUZWTzBWQlFUTkRMR0ZCUVhsQ0xFVjJRelJDUkN4SFFVRXdSU3hEZFVNMVFtcEZMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN3eVFrRkJNa0lzUTBGQmQwTTdSVUZITDBRc1dVRkJlVUlzUlhaRE5rSkVMRWxCUVRKRkxFTjFRemRDYkVVc1ZVRkJWVHRGUVVFelF5eGhRVUY1UWl4RmRrTTJRa1FzU1VGQk1rVXNRM1ZETjBKc1JTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzTWtKQlFUSkNMRU5CUVhkRE8wVkJSeTlFTEZsQlFYbENMRVYyUXpoQ1JDeEpRVUV5UlN4RGRVTTVRbXhGTEZWQlFWVTdSVUZCTTBNc1lVRkJlVUlzUlhaRE9FSkVMRWxCUVRKRkxFTjFRemxDYkVVc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMREJDUVVFd1FpeERRVUY1UXp0RlFVY3ZSQ3haUVVGNVFpeEZka01yUWtRc1NVRkJNRVVzUTNWREwwSnFSU3hWUVVGVk8wVkJRVE5ETEdGQlFYbENMRVYyUXl0Q1JDeEpRVUV3UlN4RGRVTXZRbXBGTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTd3dRa0ZCTUVJc1EwRkJlVU03UlVGSEwwUXNXVUZCZVVJc1JVRmFlRUlzUTBGQlF5eERRVmtyUWl4VlFVRlZPMFZCUVRORExHRkJRWGxDTEVWQlduaENMRU5CUVVNc1EwRlpLMElzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxHMUNRVUZ0UWl4RFFVRm5SRHRGUVVjdlJDeFhRVUY1UWl4RmRrTTNRbEFzU1VGQlowTXNRM1ZETmtKcVFpeFZRVUZWTzBWQlFUTkRMR05CUVhsQ0xFVjJRemRDVUN4SlFVRm5ReXhEZFVNMlFtcENMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4M1FrRkJkMElzUTBGQk1rTTdSVUZITDBRc1YwRkJlVUlzUlhaRE5FSkVMRWRCUVRCRkxFTjFRelZDYWtVc1ZVRkJWVHRGUVVFelF5eGpRVUY1UWl4RmRrTTBRa1FzUjBGQk1FVXNRM1ZETlVKcVJTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzZVVKQlFYbENMRU5CUVRCRE8wVkJSeTlFTEZkQlFYbENMRVYyUXpaQ1JDeEpRVUV5UlN4RGRVTTNRbXhGTEZWQlFWVTdSVUZCTTBNc1kwRkJlVUlzUlhaRE5rSkVMRWxCUVRKRkxFTjFRemRDYkVVc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMSGxDUVVGNVFpeERRVUV3UXp0RlFVY3ZSQ3hYUVVGNVFpeEZka000UWtRc1NVRkJNa1VzUTNWRE9VSnNSU3hWUVVGVk8wVkJRVE5ETEdOQlFYbENMRVYyUXpoQ1JDeEpRVUV5UlN4RGRVTTVRbXhGTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeDNRa0ZCZDBJc1EwRkJNa003UlVGSEwwUXNWMEZCZVVJc1JYWkRLMEpFTEVsQlFUQkZMRU4xUXk5Q2FrVXNWVUZCVlR0RlFVRXpReXhqUVVGNVFpeEZka01yUWtRc1NVRkJNRVVzUTNWREwwSnFSU3hWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2QwSkJRWGRDTEVOQlFUSkRPMFZCUnk5RUxGZEJRWGxDTEVWQlduaENMRU5CUVVNc1EwRlpLMElzVlVGQlZUdEZRVUV6UXl4alFVRjVRaXhGUVZwNFFpeERRVUZETEVOQldTdENMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4VFFVRlRMRU5CUVRCRU8wVkJSeTlFTEUxQlFYbENMRVYyUXpkQ1VDeEpRVUZuUXl4RGRVTTJRbXBDTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeGpRVUZqTEVOQlFYRkVPMFZCUnk5RUxFMUJRWGxDTEVWMlF6UkNSQ3hIUVVFd1JTeERkVU0xUW1wRkxGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3hsUVVGbExFTkJRVzlFTzBWQlJ5OUVMRTFCUVhsQ0xFVjJRelpDUkN4SlFVRXlSU3hEZFVNM1FteEZMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4bFFVRmxMRU5CUVc5RU8wVkJSeTlFTEUxQlFYbENMRVYyUXpoQ1JDeEpRVUV5UlN4RGRVTTVRbXhGTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeGpRVUZqTEVOQlFYRkVPMFZCUnk5RUxFMUJRWGxDTEVWMlF5dENSQ3hKUVVFd1JTeERkVU12UW1wRkxGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3hqUVVGakxFTkJRWEZFTzBWQlJ5OUVMRTFCUVhsQ0xFVkJXbmhDTEVOQlFVTXNRMEZaSzBJc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMR0ZCUVdFc1EwRkJjMFE3UlVGSEwwUXNWVUZCZVVJc1JYWkROMEpRTEVsQlFXZERMRU4xUXpaQ2FrSXNWVUZCVlR0RFFVYzVRenM3UVVGT1JDeEJRVUZCTEd0Q1FVRnJRaXhEUVVGcFJEdEZRVWN2UkN4VlFVRjVRaXhGZGtNMFFrUXNSMEZCTUVVc1EzVkROVUpxUlN4VlFVRlZPME5CUnpsRE96dEJRVTVFTEVGQlFVRXNiVUpCUVcxQ0xFTkJRV2RFTzBWQlJ5OUVMRlZCUVhsQ0xFVjJRelpDUkN4SlFVRXlSU3hEZFVNM1FteEZMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4dFFrRkJiVUlzUTBGQlowUTdSVUZITDBRc1ZVRkJlVUlzUlhaRE9FSkVMRWxCUVRKRkxFTjFRemxDYkVVc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMR3RDUVVGclFpeERRVUZwUkR0RlFVY3ZSQ3hWUVVGNVFpeEZka01yUWtRc1NVRkJNRVVzUTNWREwwSnFSU3hWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2EwSkJRV3RDTEVOQlFXbEVPMFZCUnk5RUxGVkJRWGxDTEVWQlduaENMRU5CUVVNc1EwRlpLMElzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxHVkJRV1VzUTBGQmIwUTdSVUZITDBRc1dVRkJlVUlzUlhaRE4wSlFMRWxCUVdkRExFTjFRelpDYWtJc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMRzlDUVVGdlFpeERRVUVyUXp0RlFVY3ZSQ3haUVVGNVFpeEZka00wUWtRc1IwRkJNRVVzUTNWRE5VSnFSU3hWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2NVSkJRWEZDTEVOQlFUaERPMFZCUnk5RUxGbEJRWGxDTEVWMlF6WkNSQ3hKUVVFeVJTeERkVU0zUW14RkxGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3h4UWtGQmNVSXNRMEZCT0VNN1JVRkhMMFFzV1VGQmVVSXNSWFpET0VKRUxFbEJRVEpGTEVOMVF6bENiRVVzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxHOUNRVUZ2UWl4RFFVRXJRenRGUVVjdlJDeFpRVUY1UWl4RmRrTXJRa1FzU1VGQk1FVXNRM1ZETDBKcVJTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzYjBKQlFXOUNMRU5CUVN0RE8wVkJSeTlFTEZsQlFYbENMRVZCV25oQ0xFTkJRVU1zUTBGWkswSXNWVUZCVlR0RFFVYzVRenM3UVVGT1JDeEJRVUZCTEdkQ1FVRm5RaXhEUVVGdFJEdEZRVWN2UkN4aFFVRjVRaXhGZGtNM1FsQXNTVUZCWjBNc1EzVkROa0pxUWl4VlFVRlZPME5CUnpsRE96dEJRVTVFTEVGQlFVRXNjVUpCUVhGQ0xFTkJRVGhETzBWQlJ5OUVMR0ZCUVhsQ0xFVjJRelJDUkN4SFFVRXdSU3hEZFVNMVFtcEZMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4elFrRkJjMElzUTBGQk5rTTdSVUZITDBRc1lVRkJlVUlzUlhaRE5rSkVMRWxCUVRKRkxFTjFRemRDYkVVc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMSE5DUVVGelFpeERRVUUyUXp0RlFVY3ZSQ3hoUVVGNVFpeEZka000UWtRc1NVRkJNa1VzUTNWRE9VSnNSU3hWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2NVSkJRWEZDTEVOQlFUaERPMFZCUnk5RUxHRkJRWGxDTEVWMlF5dENSQ3hKUVVFd1JTeERkVU12UW1wRkxGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3h4UWtGQmNVSXNRMEZCT0VNN1JVRkhMMFFzWVVGQmVVSXNSVUZhZUVJc1EwRkJReXhEUVZrclFpeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzWTBGQll5eERRVUZ4UkR0RlFVY3ZSQ3hYUVVGNVFpeEZka00zUWxBc1NVRkJaME1zUTNWRE5rSnFRaXhWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2JVSkJRVzFDTEVOQlFXZEVPMFZCUnk5RUxGZEJRWGxDTEVWMlF6UkNSQ3hIUVVFd1JTeERkVU0xUW1wRkxGVkJRVlU3UTBGSE9VTTdPMEZCVGtRc1FVRkJRU3h2UWtGQmIwSXNRMEZCSzBNN1JVRkhMMFFzVjBGQmVVSXNSWFpETmtKRUxFbEJRVEpGTEVOMVF6ZENiRVVzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxHOUNRVUZ2UWl4RFFVRXJRenRGUVVjdlJDeFhRVUY1UWl4RmRrTTRRa1FzU1VGQk1rVXNRM1ZET1VKc1JTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzYlVKQlFXMUNMRU5CUVdkRU8wVkJSeTlFTEZkQlFYbENMRVYyUXl0Q1JDeEpRVUV3UlN4RGRVTXZRbXBGTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeHRRa0ZCYlVJc1EwRkJaMFE3UlVGSEwwUXNWMEZCZVVJc1JVRmFlRUlzUTBGQlF5eERRVmtyUWl4VlFVRlZPME5CUnpsRE96dEJRVTVFTEVGQlFVRXNiMEpCUVc5Q0xFTkJRU3RETzBWQlJ5OUVMRmRCUVhsQ0xFVjJRemRDVUN4SlFVRm5ReXhEZFVNMlFtcENMRlZCUVZVN1JVRkJNME1zV1VGQmVVSXNSWFpETjBKUUxFbEJRV2RETEVOMVF6WkNha0lzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxIbENRVUY1UWl4RFFVRXdRenRGUVVjdlJDeFhRVUY1UWl4RmRrTTBRa1FzUjBGQk1FVXNRM1ZETlVKcVJTeFZRVUZWTzBWQlFUTkRMRmxCUVhsQ0xFVjJRelJDUkN4SFFVRXdSU3hEZFVNMVFtcEZMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN3d1FrRkJNRUlzUTBGQmVVTTdSVUZITDBRc1YwRkJlVUlzUlhaRE5rSkVMRWxCUVRKRkxFTjFRemRDYkVVc1ZVRkJWVHRGUVVFelF5eFpRVUY1UWl4RmRrTTJRa1FzU1VGQk1rVXNRM1ZETjBKc1JTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzTUVKQlFUQkNMRU5CUVhsRE8wVkJSeTlFTEZkQlFYbENMRVYyUXpoQ1JDeEpRVUV5UlN4RGRVTTVRbXhGTEZWQlFWVTdSVUZCTTBNc1dVRkJlVUlzUlhaRE9FSkVMRWxCUVRKRkxFTjFRemxDYkVVc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMSGxDUVVGNVFpeERRVUV3UXp0RlFVY3ZSQ3hYUVVGNVFpeEZka01yUWtRc1NVRkJNRVVzUTNWREwwSnFSU3hWUVVGVk8wVkJRVE5ETEZsQlFYbENMRVYyUXl0Q1JDeEpRVUV3UlN4RGRVTXZRbXBGTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeDVRa0ZCZVVJc1EwRkJNRU03UlVGSEwwUXNWMEZCZVVJc1JVRmFlRUlzUTBGQlF5eERRVmtyUWl4VlFVRlZPMFZCUVRORExGbEJRWGxDTEVWQlduaENMRU5CUVVNc1EwRlpLMElzVlVGQlZUdERRVWM1UXpzN1FVRk9SQ3hCUVVGQkxHdENRVUZyUWl4RFFVRnBSRHRGUVVjdlJDeFZRVUY1UWl4RmRrTTNRbEFzU1VGQlowTXNRM1ZETmtKcVFpeFZRVUZWTzBWQlFUTkRMR0ZCUVhsQ0xFVjJRemRDVUN4SlFVRm5ReXhEZFVNMlFtcENMRlZCUVZVN1EwRkhPVU03TzBGQlRrUXNRVUZCUVN4MVFrRkJkVUlzUTBGQk5FTTdSVUZITDBRc1ZVRkJlVUlzUlhaRE5FSkVMRWRCUVRCRkxFTjFRelZDYWtVc1ZVRkJWVHRGUVVFelF5eGhRVUY1UWl4RmRrTTBRa1FzUjBGQk1FVXNRM1ZETlVKcVJTeFZRVUZWTzBOQlJ6bERPenRCUVU1RUxFRkJRVUVzZDBKQlFYZENMRU5CUVRKRE8wVkJSeTlFTEZWQlFYbENMRVYyUXpaQ1JDeEpRVUV5UlN4RGRVTTNRbXhGTEZWQlFWVTdSVUZCTTBNc1lVRkJlVUlzUlhaRE5rSkVMRWxCUVRKRkxFTjFRemRDYkVVc1ZVRkJWVHREUVVjNVF6czdRVUZPUkN4QlFVRkJMSGRDUVVGM1FpeERRVUV5UXp0RlFVY3ZSQ3hWUVVGNVFpeEZka000UWtRc1NVRkJNa1VzUTNWRE9VSnNSU3hWUVVGVk8wVkJRVE5ETEdGQlFYbENMRVYyUXpoQ1JDeEpRVUV5UlN4RGRVTTVRbXhGTEZWQlFWVTdRMEZIT1VNN08wRkJUa1FzUVVGQlFTeDFRa0ZCZFVJc1EwRkJORU03UlVGSEwwUXNWVUZCZVVJc1JYWkRLMEpFTEVsQlFUQkZMRU4xUXk5Q2FrVXNWVUZCVlR0RlFVRXpReXhoUVVGNVFpeEZka01yUWtRc1NVRkJNRVVzUTNWREwwSnFSU3hWUVVGVk8wTkJSemxET3p0QlFVNUVMRUZCUVVFc2RVSkJRWFZDTEVOQlFUUkRPMFZCUnk5RUxGVkJRWGxDTEVWQlduaENMRU5CUVVNc1EwRlpLMElzVlVGQlZUdEZRVUV6UXl4aFFVRjVRaXhGUVZwNFFpeERRVUZETEVOQldTdENMRlZCUVZVN1EwRkhPVU03TzBGQlVWQXNiME5CUVc5RE8wRkRMMFJ3UXpzN1owWkJSV2RHTzBGQlJXaEdPenM3T3pzN096czdPenRIUVZkSE8wRkJLMEpJTEhsRFFVRjVRenRCTlVKclRHcERMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzU1VGQlNUdEZORUowUzNKQ0xFRkJRVUVzTmtKQlFUWkNMRU5CUVRSR08wbEJSM0pJTEdGQlFYbENMRVZCY0VJMVFpeERRVUZETEVOQmIwSnRReXhWUVVGVk8wZEJSemxET3pzN1FUVkNaMHRJTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1QwRkJUenRGTkVKMFMzaENMRUZCUVVFc05rSkJRVFpDTEVOQlFUUkdPMGxCUjNKSUxHRkJRWGxDTEVWQmNFSTFRaXhEUVVGRExFTkJiMEp0UXl4VlFVRlZPMGRCUnpsRE96czdRVFZDWjB0SUxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUMEZCVHp0Rk5FSjBTM2hDTEVGQlFVRXNPRUpCUVRoQ0xFTkJRVEpHTzBsQlIzSklMR0ZCUVhsQ0xFVkJjRUkxUWl4RFFVRkRMRU5CYjBKdFF5eFZRVUZWTzBkQlJ6bERPenM3UVRWQ1owdElMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVDBGQlR6dEZORUowUzNoQ0xFRkJRVUVzTWtKQlFUSkNMRU5CUVRoR08wbEJSM0pJTEdGQlFYbENMRVZCY0VJMVFpeERRVUZETEVOQmIwSnRReXhWUVVGVk8wZEJSemxET3pzN1FUVkNaMHRJTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1MwRkJTenRGTkVKMFMzUkNMRUZCUVVFc05rSkJRVFpDTEVOQlFUUkdPMGxCUjNKSUxHRkJRWGxDTEVWQmNFSTFRaXhEUVVGRExFTkJiMEp0UXl4VlFVRlZPMGRCUnpsRE96czdRVUZaV0N4M1EwRkJkME03UVVNMVJYaERPenRuUmtGRlowWTdRVUZGYUVZN096czdSMEZKUnp0QlFVVklMRTFCUVUwc1EwRkJReXhMUVVGTE8wVkJSVlk3TzB0QlJVYzdSVUZGU0N4QlFVRkJMRU5CUVVNN1JVRkRSQ3hCUVVGQkxFTkJRVU1zUVVGQlFTeFBRVUZQTzBWQlExSXNRVUZCUVN4RFFVRkRMRUZCUVVFc1RVRkJUVHRGUVVOUUxFRkJRVUVzUTBGQlF5eEJRVUZCTEdGQlFXRTdSVUZEWkN4QlFVRkJMRU5CUVVNc1FVRkJRU3hYUVVGWExFTkJRVU03U1VGRFdDeFZRVUZWTEVWQlFVVXNjMEpCUVhOQ08wbEJRMnhETEV0QlFVc3NSVUZCUlN4bFFVRmxPMGxCUVVjc1UwRkJVenRKUVVOc1F5eFZRVUZWTEVWQlFVVXNaVUZCWlR0SlFVTXpRaXhYUVVGWExFVkJRVVVzWlVGQlpUdEhRVU0zUWp0RlFVZEVMRUZCUVVFc1EwRkJRenRGUVVORUxFRkJRVUVzUTBGQlF5eEJRVUZCTEZGQlFWRXNRMEZCUXp0SlFVTlNMR1ZCUVdVc1JVRkJSU3hUUVVGVE8wZEJRek5DTzBWQlJVUXNRVUZCUVN4RFFVRkRMRU5CUVVFc1FVRkJRU3hKUVVGRExFRkJRVUVzUTBGQlN5eE5RVUZOTEVOQlFVTTdTVUZEV2l4UFFVRlBMRVZCUVVVc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eEhRVUZITzBkQlF6ZENPMFZCUlVRc1FVRkJRU3hKUVVGSkxFTkJRVUVzUVVGQlFTeExRVUZETEVGQlFVRXNRMEZCVFN4TlFVRk5MRU5CUVVNN1NVRkRhRUlzVDBGQlR5eEZRVUZGTEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1IwRkJSenRIUVVNNVFqdEZRVWRFT3pzN1MwRkhSenRGUVVWSUxFRkJRVUVzUTBGQlF5eERRVUZCTEVGQlFVRXNTVUZCUXl4RlFVRk5MRWRCUVVjc1FVRkJWQ3hEUVVGVkxFMUJRVTA3UlVGRGJFSXNRVUZCUVN4RFFVRkRMRU5CUVVFc1FVRkJRU3hKUVVGRExFVkJRVTBzWVVGQllTeEJRVUZ1UWl4RFFVRnZRaXhOUVVGTkxFTkJRVU03U1VGRE0wSXNUMEZCVHl4RlFVRkZMRVZCUVVVN1IwRkRXanRGUVVWRUxFRkJRVUVzUjBGQlJ6dEZRVU5JTEVGQlFVRXNWVUZCVlN4RFFVRkRPMGxCUTFRc1RVRkJUU3hGUVVGRkxHTkJRV003U1VGRGRFSXNhVUpCUVdsQ0xFVkJRVVVzUzBGQlN6dEhRVU42UWp0RlFVZEVPenRMUVVWSE8wVkJSVWdzUVVGQlFTeExRVUZMTEVOQlFVTTdTVUZEU2l4UFFVRlBMRVZCUVVVc2EwSkJRV3RDTzBkQlF6VkNPMFZCUlVRc1FVRkJRU3hGUVVGRk8wVkJRMFlzUVVGQlFTeEhRVUZITEVOQlFVTTdTVUZEUml4cFFrRkJhVUlzUlVGQlJTeExRVUZMTzBkQlEzcENPMFZCUjBRc1FVRkJRU3hIUVVGSExFTkJRVU03U1VGRFJpeFRRVUZUTEVWQlFVVXNaVUZCWlR0SFFVTXpRanRGUVVWRUxFRkJRVUVzUTBGQlF6dEZRVU5FTEVGQlFVRXNSVUZCUlR0RlFVTkdMRUZCUVVFc1JVRkJSU3hEUVVGRE8wbEJRMFFzVDBGQlR5eEZRVUZGTEVOQlFVTTdTVUZEVml4TlFVRk5MRVZCUVVVc1EwRkJRenRIUVVOV08wVkJSVVFzUVVGQlFTeEZRVUZGTzBWQlEwWXNRVUZCUVN4RlFVRkZMRU5CUVVNN1NVRkRSQ3huUWtGQlowSXNSVUZCUlN4TFFVRkxPMGRCUTNoQ096czdRVU4yUmtnN08yZEdRVVZuUmp0QlFVVm9SanM3TzBkQlIwYzdRVUZGU0N4QlFVRkJMR3RDUVVGclFpeERRVUZETzBVdlFraHFRaXhOUVVGTkxFVkJRVVVzV1VGQldUdEZRVU53UWl4SlFVRkpMRVZCUVVVc1lVRkJZU3hEUVVGRExGVkJRVlU3UlVGRE9VSXNVMEZCVXl4RlFVRkZMRlZCUVZVc1EwRkJReXhWUVVGVk8wVkJRMmhETEUxQlFVMHNSVUZCUlN4alFVRmpPMFZCUTNSQ0xFMUJRVTBzUlVGQlJTeGxRVUZsTzBWQlEzWkNMRkZCUVZFc1JVRkJSU3hwUWtGQmFVSTdSVUZETTBJc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNVVUZCVVN4RlFVRkZMRzFDUVVGdFFqdEZRVU0zUWl4WFFVRlhMRVZCUVVVc2FVSkJRV2xDTzBWQlF6bENMRXRCUVVzc1JVRkJSU3hqUVVGak8wTXJRa3AwUWpzN1FVRkhSRHM3UjBGRlJ6dEJRVVZJTEVGQlFVRXNVMEZCVXl4RFFVRkRPMFZCUTFJc1QwRkJUeXhGUVVGRkxHVkJRV1U3UTBGRGVrSTdPMEZEY0VKRU96czJRa0ZGTmtJN1FTOUNPRTV5UWl4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlN0Q2VrNTZRaXhCUVVGQkxHbENRVUZwUWl4RFFVRlpPMGxCUXpOQ0xFOUJRVThzUlVGQlJTeGxRVUZsTzBkQlEzcENPMFZCUTBRc1FVRkJRU3huUWtGQlowSXNRMEZCV1R0SlFVTXhRaXhQUVVGUExFVkJRVVVzYTBKQlFXdENPMGRCUXpWQ08wVkJSVVFzUVVGQlFTeG5Ra0ZCWjBJc1FVRkJRU3huUWtGQlowSXNRMEZCV1R0SlFVTXhReXhQUVVGUExFVkJRVVVzWjBKQlFXZENPMGRCUXpGQ08wVkJSVVFzUVVGQlFTeDFRa0ZCZFVJc1FVRkJRU3huUWtGQlowSXNRMEZCV1R0SlFVTnFSQ3hQUVVGUExFVkJRVVVzZFVKQlFYVkNPMGRCUTJwRE8wVkJSVVFzUVVGQlFTeHBRa0ZCYVVJc1FVRkJRU3huUWtGQlowSXNRMEZCV1R0SlFVTXpReXhQUVVGUExFVkJRVVVzYVVKQlFXbENPMGRCUXpOQ096czdRUzlDZDAxRExFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUMEZCVHp0RkswSjZUalZDTEVGQlFVRXNhVUpCUVdsQ0xFTkJRVms3U1VGRE0wSXNUMEZCVHl4RlFVRkZMR1ZCUVdVN1IwRkRla0k3UlVGRFJDeEJRVUZCTEdkQ1FVRm5RaXhEUVVGWk8wbEJRekZDTEU5QlFVOHNSVUZCUlN4clFrRkJhMEk3UjBGRE5VSTdSVUZGUkN4QlFVRkJMR2RDUVVGblFpeEJRVUZCTEdkQ1FVRm5RaXhEUVVGWk8wbEJRekZETEU5QlFVOHNSVUZCUlN4blFrRkJaMEk3UjBGRE1VSTdSVUZGUkN4QlFVRkJMSFZDUVVGMVFpeEJRVUZCTEdkQ1FVRm5RaXhEUVVGWk8wbEJRMnBFTEU5QlFVOHNSVUZCUlN4MVFrRkJkVUk3UjBGRGFrTTdSVUZGUkN4QlFVRkJMR2xDUVVGcFFpeEJRVUZCTEdkQ1FVRm5RaXhEUVVGWk8wbEJRek5ETEU5QlFVOHNSVUZCUlN4cFFrRkJhVUk3UjBGRE0wSTdPenRCTDBKM1RVTXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hQUVVGUE8wVXJRbnBPTlVJc1FVRkJRU3hyUWtGQmEwSXNRMEZCVnp0SlFVTXpRaXhQUVVGUExFVkJRVVVzWlVGQlpUdEhRVU42UWp0RlFVTkVMRUZCUVVFc2FVSkJRV2xDTEVOQlFWYzdTVUZETVVJc1QwRkJUeXhGUVVGRkxHdENRVUZyUWp0SFFVTTFRanRGUVVWRUxFRkJRVUVzWjBKQlFXZENMRUZCUVVFc2FVSkJRV2xDTEVOQlFWYzdTVUZETVVNc1QwRkJUeXhGUVVGRkxHZENRVUZuUWp0SFFVTXhRanRGUVVWRUxFRkJRVUVzZFVKQlFYVkNMRUZCUVVFc2FVSkJRV2xDTEVOQlFWYzdTVUZEYWtRc1QwRkJUeXhGUVVGRkxIVkNRVUYxUWp0SFFVTnFRenRGUVVWRUxFRkJRVUVzYVVKQlFXbENMRUZCUVVFc2FVSkJRV2xDTEVOQlFWYzdTVUZETTBNc1QwRkJUeXhGUVVGRkxHbENRVUZwUWp0SFFVTXpRanM3TzBFdlFuZE5ReXhOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEU5QlFVODdSU3RDZWs0MVFpeEJRVUZCTEdWQlFXVXNRMEZCWXp0SlFVTXpRaXhQUVVGUExFVkJRVVVzWlVGQlpUdEhRVU42UWp0RlFVTkVMRUZCUVVFc1kwRkJZeXhEUVVGak8wbEJRekZDTEU5QlFVOHNSVUZCUlN4clFrRkJhMEk3UjBGRE5VSTdSVUZGUkN4QlFVRkJMR2RDUVVGblFpeEJRVUZCTEdOQlFXTXNRMEZCWXp0SlFVTXhReXhQUVVGUExFVkJRVVVzWjBKQlFXZENPMGRCUXpGQ08wVkJSVVFzUVVGQlFTeDFRa0ZCZFVJc1FVRkJRU3hqUVVGakxFTkJRV003U1VGRGFrUXNUMEZCVHl4RlFVRkZMSFZDUVVGMVFqdEhRVU5xUXp0RlFVVkVMRUZCUVVFc2FVSkJRV2xDTEVGQlFVRXNZMEZCWXl4RFFVRmpPMGxCUXpORExFOUJRVThzUlVGQlJTeHBRa0ZCYVVJN1IwRkRNMEk3T3p0QkwwSjNUVU1zVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFVyUW5wT01VSXNRVUZCUVN4cFFrRkJhVUlzUTBGQldUdEpRVU16UWl4UFFVRlBMRVZCUVVVc1pVRkJaVHRIUVVONlFqdEZRVU5FTEVGQlFVRXNaMEpCUVdkQ0xFTkJRVms3U1VGRE1VSXNUMEZCVHl4RlFVRkZMR3RDUVVGclFqdEhRVU0xUWp0RlFVVkVMRUZCUVVFc1owSkJRV2RDTEVGQlFVRXNaMEpCUVdkQ0xFTkJRVms3U1VGRE1VTXNUMEZCVHl4RlFVRkZMR2RDUVVGblFqdEhRVU14UWp0RlFVVkVMRUZCUVVFc2RVSkJRWFZDTEVGQlFVRXNaMEpCUVdkQ0xFTkJRVms3U1VGRGFrUXNUMEZCVHl4RlFVRkZMSFZDUVVGMVFqdEhRVU5xUXp0RlFVVkVMRUZCUVVFc2FVSkJRV2xDTEVGQlFVRXNaMEpCUVdkQ0xFTkJRVms3U1VGRE0wTXNUMEZCVHl4RlFVRkZMR2xDUVVGcFFqdEhRVU16UWpzN08wRkRlRUpRT3pzMlFrRkZOa0k3UVVGRk4wSXNRVUZCUVN4clFrRkJhMElzUTBGQlF6dEZRVU5xUWl4VFFVRlRMRVZCUVVVc1RVRkJUVHREUVVOc1FqczdRVUZGUkN4QlFVRkJMRzFDUVVGdFFpeERRVUZETzBWQlEyeENMRk5CUVZNc1JVRkJSU3hOUVVGTk8wTkJRMnhDT3p0QlFVVkVMRUZCUVVFc1dVRkJXU3hEUVVGRE8wVkJRMWdzVTBGQlV5eEZRVUZGTEUxQlFVMDdRMEZEYkVJN08wRkJSVVFzUVVGQlFTeHRRa0ZCYlVJc1EwRkJRenRGUVVOc1FpeFRRVUZUTEVWQlFVVXNTMEZCU3p0RFFVTnFRanM3UVVGRlJDeEJRVUZCTEd0Q1FVRnJRaXhEUVVGRE8wVkJRMnBDTEZOQlFWTXNSVUZCUlN4TFFVRkxPME5CUTJwQ096dEJRM1JDUkRzN05rSkJSVFpDTzBGQlF6ZENMRUZCUVVFc1QwRkJUeXhEUVVGRE8wVkJRMDRzVDBGQlR5eEZRVUZGTEVsQlFVazdRMEZEWkRzN1FVRkZSQ3hCUVVGQkxHVkJRV1VzUTBGQlF6dEZRVU5rTEZkQlFWY3NSVUZCUlN4TlFVRk5PMFZCUTI1Q0xHVkJRV1VzUlVGQlJTeE5RVUZOTzBOQlEzaENPenRCUVVWRUxFRkJRVUVzWTBGQll5eERRVUZETzBWQlEySXNaVUZCWlN4RlFVRkZMRkZCUVZFN1EwRkRNVUk3TzBGQlJVUXNRVUZCUVN4elFrRkJjMElzUTBGQlF6dEZRVU55UWl4WFFVRlhMRVZCUVVVc1RVRkJUVHRGUVVOdVFpeGxRVUZsTEVWQlFVVXNUVUZCVFR0RFFVTjRRanM3UVVGRlJDeEJRVUZCTEdWQlFXVXNRMEZCUXp0RlFVTmtMRmRCUVZjc1JVRkJSU3hSUVVGUk8wTkJRM1JDT3p0QlEzWkNSRHM3TmtKQlJUWkNJbjA9ICovXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9tYWluLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgU2V0dGluZ3MvQ29sb3JzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4kY29sb3JzOiAoXG4gIHdoaXRlOiAjZmZmZmZmLFxuICBibGFjazogIzAwMDAwMFxuKTtcblxuJGJhc2UtdGV4dC1jb2xvci1kYXJrOiBtYXAtZ2V0KCRjb2xvcnMsICdibGFjaycpO1xuJGJhc2UtdGV4dC1jb2xvci1saWdodDogbWFwLWdldCgkY29sb3JzLCAnd2hpdGUnKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fc2V0dGluZ3MuY29sb3JzLnNjc3MiLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBTZXR0aW5ncy9Db2xvcnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBTZXR0aW5nL1RyYW5zaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgU2V0dGluZ3MvTWVhc3VyZW1lbnRzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgVGhlIEJsYWNrIFRpZSBGb250IGlzIGNvbW1lcmNpYWwgc29mdHdhcmUuIFBsZWFzZSBkbyBub3QgZGlzdHJpYnV0ZS5cbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0JsYWNrIFRpZSc7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9zb2xpZC9CbGFja1RpZS1Tb2xpZC13ZWJmb250LmVvdD92PTEuMC4wXCIpO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvc29saWQvQmxhY2tUaWUtU29saWQtd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjBcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvc29saWQvQmxhY2tUaWUtU29saWQtd2ViZm9udC53b2ZmMj92PTEuMC4wXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL3NvbGlkL0JsYWNrVGllLVNvbGlkLXdlYmZvbnQud29mZj92PTEuMC4wXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvc29saWQvQmxhY2tUaWUtU29saWQtd2ViZm9udC50dGY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9zb2xpZC9CbGFja1RpZS1Tb2xpZC13ZWJmb250LnN2Zz92PTEuMC4wI2JsYWNrX3RpZXNvbGlkXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCbGFjayBUaWUnO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYm9sZC9CbGFja1RpZS1Cb2xkLXdlYmZvbnQuZW90P3Y9MS4wLjBcIik7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9ib2xkL0JsYWNrVGllLUJvbGQtd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjBcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYm9sZC9CbGFja1RpZS1Cb2xkLXdlYmZvbnQud29mZjI/dj0xLjAuMFwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9ib2xkL0JsYWNrVGllLUJvbGQtd2ViZm9udC53b2ZmP3Y9MS4wLjBcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9ib2xkL0JsYWNrVGllLUJvbGQtd2ViZm9udC50dGY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9ib2xkL0JsYWNrVGllLUJvbGQtd2ViZm9udC5zdmc/dj0xLjAuMCNibGFja190aWVib2xkXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCbGFjayBUaWUnO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvcmVndWxhci9CbGFja1RpZS1SZWd1bGFyLXdlYmZvbnQuZW90P3Y9MS4wLjBcIik7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjBcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvcmVndWxhci9CbGFja1RpZS1SZWd1bGFyLXdlYmZvbnQud29mZjI/dj0xLjAuMFwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC53b2ZmP3Y9MS4wLjBcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC50dGY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC5zdmc/dj0xLjAuMCNibGFja190aWVyZWd1bGFyXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCbGFjayBUaWUnO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvbGlnaHQvQmxhY2tUaWUtTGlnaHQtd2ViZm9udC5lb3Q/dj0xLjAuMFwiKTtcbiAgc3JjOiB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL2xpZ2h0L0JsYWNrVGllLUxpZ2h0LXdlYmZvbnQuZW90PyNpZWZpeCZ2PTEuMC4wXCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL2xpZ2h0L0JsYWNrVGllLUxpZ2h0LXdlYmZvbnQud29mZjI/dj0xLjAuMFwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9saWdodC9CbGFja1RpZS1MaWdodC13ZWJmb250LndvZmY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL2xpZ2h0L0JsYWNrVGllLUxpZ2h0LXdlYmZvbnQudHRmP3Y9MS4wLjBcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvbGlnaHQvQmxhY2tUaWUtTGlnaHQtd2ViZm9udC5zdmc/dj0xLjAuMCNibGFja190aWVsaWdodFwiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnRm9udCBBd2Vzb21lIEJyYW5kcyc7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9icmFuZHMvRm9udEF3ZXNvbWVCcmFuZHMtUmVndWxhci13ZWJmb250LmVvdD92PTEuMC4wXCIpO1xuICBzcmM6IHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYnJhbmRzL0ZvbnRBd2Vzb21lQnJhbmRzLVJlZ3VsYXItd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjBcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYnJhbmRzL0ZvbnRBd2Vzb21lQnJhbmRzLVJlZ3VsYXItd2ViZm9udC53b2ZmMj92PTEuMC4wXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvZm9udHMvYmxhY2stdGllL2ZvbnRzL2JyYW5kcy9Gb250QXdlc29tZUJyYW5kcy1SZWd1bGFyLXdlYmZvbnQud29mZj92PTEuMC4wXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9mb250cy9ibGFjay10aWUvZm9udHMvYnJhbmRzL0ZvbnRBd2Vzb21lQnJhbmRzLVJlZ3VsYXItd2ViZm9udC50dGY/dj0xLjAuMFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9icmFuZHMvRm9udEF3ZXNvbWVCcmFuZHMtUmVndWxhci13ZWJmb250LnN2Zz92PTEuMC4wI2ZvbnRfYXdlc29tZV9icmFuZHNyZWd1bGFyXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4uYnRzLFxuLmJ0Yixcbi5idHIsXG4uYnRsLFxuLmZhYiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogbm9ybWFsIG5vcm1hbCBub3JtYWwgMTRweC8xIFwiQmxhY2sgVGllXCI7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IC0xNC4yODU3MTQyOSU7XG4gIHRleHQtcmVuZGVyaW5nOiBhdXRvO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG59XG5cbi5idHMge1xuICBmb250LXdlaWdodDogOTAwO1xufVxuXG4uYnRiIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bCB7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG59XG5cbi5mYWIge1xuICBmb250LWZhbWlseTogXCJGb250IEF3ZXNvbWUgQnJhbmRzXCI7XG59XG5cbi8qIG1ha2VzIHRoZSBmb250IDI1JSBzbWFsbGVyIHJlbGF0aXZlIHRvIHRoZSBpY29uIGNvbnRhaW5lciAqL1xuXG4uYnQtc20ge1xuICBmb250LXNpemU6IC43ZW07XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyogbWFrZXMgdGhlIGZvbnQgMzMlIGxhcmdlciByZWxhdGl2ZSB0byB0aGUgaWNvbiBjb250YWluZXIgKi9cblxuLmJ0LWxnIHtcbiAgZm9udC1zaXplOiAxLjMzMzMzMzMzZW07XG4gIGxpbmUtaGVpZ2h0OiAwLjc1ZW07XG59XG5cbi5idC0yeCB7XG4gIGZvbnQtc2l6ZTogMmVtO1xufVxuXG4uYnQtM3gge1xuICBmb250LXNpemU6IDNlbTtcbn1cblxuLmJ0LTR4IHtcbiAgZm9udC1zaXplOiA0ZW07XG59XG5cbi5idC01eCB7XG4gIGZvbnQtc2l6ZTogNWVtO1xufVxuXG4uYnQtbGcsXG4uYnQtMngsXG4uYnQtM3gsXG4uYnQtNHgsXG4uYnQtNXgge1xuICB2ZXJ0aWNhbC1hbGlnbjogLTMwJTtcbn1cblxuLmJ0LWZ3IHtcbiAgd2lkdGg6IDEuMjg1NzE0MjllbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYnQtdWwge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIG1hcmdpbi1sZWZ0OiAyLjE0Mjg1NzE0ZW07XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn1cblxuLmJ0LXVsID4gbGkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5idC1saSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTIuMTQyODU3MTRlbTtcbiAgd2lkdGg6IDIuMTQyODU3MTRlbTtcbiAgdG9wOiAwLjE0Mjg1NzE0ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmJ0LWxpLmJ0LWxnIHtcbiAgbGVmdDogLTJlbTtcbn1cblxuLmJ0LWJvcmRlciB7XG4gIHBhZGRpbmc6IC4yZW07XG4gIGJvcmRlcjogc29saWQgMC4wOGVtICNlZWVlZWU7XG4gIGJvcmRlci1yYWRpdXM6IC4xZW07XG59XG5cbi5wdWxsLXJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4ucHVsbC1sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5idHMucHVsbC1sZWZ0LFxuLmJ0Yi5wdWxsLWxlZnQsXG4uYnRyLnB1bGwtbGVmdCxcbi5idGwucHVsbC1sZWZ0LFxuLmZhYi5wdWxsLWxlZnQge1xuICBtYXJnaW4tcmlnaHQ6IC4zZW07XG59XG5cbi5idHMucHVsbC1yaWdodCxcbi5idGIucHVsbC1yaWdodCxcbi5idHIucHVsbC1yaWdodCxcbi5idGwucHVsbC1yaWdodCxcbi5mYWIucHVsbC1yaWdodCB7XG4gIG1hcmdpbi1sZWZ0OiAuM2VtO1xufVxuXG4uYnQtc3BpbiB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBidC1zcGluIDJzIGluZmluaXRlIGxpbmVhcjtcbiAgYW5pbWF0aW9uOiBidC1zcGluIDJzIGluZmluaXRlIGxpbmVhcjtcbn1cblxuLmJ0LXB1bHNlIHtcbiAgLXdlYmtpdC1hbmltYXRpb246IGJ0LXNwaW4gMXMgaW5maW5pdGUgc3RlcHMoOCk7XG4gIGFuaW1hdGlvbjogYnQtc3BpbiAxcyBpbmZpbml0ZSBzdGVwcyg4KTtcbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGJ0LXNwaW4ge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzU5ZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgYnQtc3BpbiB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM1OWRlZyk7XG4gIH1cbn1cblxuLmJ0LXJvdGF0ZS05MCB7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249MSk7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG59XG5cbi5idC1yb3RhdGUtMTgwIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0yKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cblxuLmJ0LXJvdGF0ZS0yNzAge1xuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKHJvdGF0aW9uPTMpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpO1xufVxuXG4uYnQtZmxpcC1ob3Jpem9udGFsIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0wLCBtaXJyb3I9MSk7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgtMSwgMSk7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKC0xLCAxKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgtMSwgMSk7XG59XG5cbi5idC1mbGlwLXZlcnRpY2FsIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0yLCBtaXJyb3I9MSk7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLCAtMSk7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEsIC0xKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLCAtMSk7XG59XG5cbjpyb290IC5idC1yb3RhdGUtOTAsXG46cm9vdCAuYnQtcm90YXRlLTE4MCxcbjpyb290IC5idC1yb3RhdGUtMjcwLFxuOnJvb3QgLmJ0LWZsaXAtaG9yaXpvbnRhbCxcbjpyb290IC5idC1mbGlwLXZlcnRpY2FsIHtcbiAgZmlsdGVyOiBub25lO1xufVxuXG4uYnQtc3RhY2sge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEuMjg1NzE0MjllbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLmJ0LXN0YWNrLXNtIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICBmb250LXNpemU6IC41ZW07XG59XG5cbi5idC1zdGFjay0xeCxcbi5idC1zdGFjay1zbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmJ0LWludmVyc2Uge1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuLyogQmxhY2sgVGllIHVzZXMgdGhlIFVuaWNvZGUgUHJpdmF0ZSBVc2UgQXJlYSAoUFVBKSB0byBlbnN1cmUgc2NyZWVuXG4gICByZWFkZXJzIGRvIG5vdCByZWFkIG9mZiByYW5kb20gY2hhcmFjdGVycyB0aGF0IHJlcHJlc2VudCBpY29ucyAqL1xuXG4uYnQtYmFyczpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwMFwiO1xufVxuXG4uYnQtZW52ZWxvcGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDFcIjtcbn1cblxuLmJ0LXNlYXJjaDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwMlwiO1xufVxuXG4uYnQtc2VhcmNoLXBsdXM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDNcIjtcbn1cblxuLmJ0LXNlYXJjaC1taW51czpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwNFwiO1xufVxuXG4uYnQtcGhvbmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDVcIjtcbn1cblxuLmJ0LWNvbW1lbnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDdcIjtcbn1cblxuLmJ0LWNvbW1lbnRpbmc6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDhcIjtcbn1cblxuLmJ0LWNvbW1lbnRzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDA5XCI7XG59XG5cbi5idC1yc3M6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMGFcIjtcbn1cblxuLmJ0LXRpbWVzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDBjXCI7XG59XG5cbi5idC10aW1lcy1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMGRcIjtcbn1cblxuLmJ0LWNsb2NrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDBlXCI7XG59XG5cbi5idC1zdGFyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDEwXCI7XG59XG5cbi5idC1zdGFyLWhhbGY6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTFcIjtcbn1cblxuLmJ0LWNoZWNrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDEyXCI7XG59XG5cbi5idC1jaGVjay1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTNcIjtcbn1cblxuLmJ0LWNoZWNrLXNxdWFyZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxNFwiO1xufVxuXG4uYnQtdGg6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTVcIjtcbn1cblxuLmJ0LXRoLWxhcmdlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDE2XCI7XG59XG5cbi5idC1oZWFydDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxN1wiO1xufVxuXG4uYnQtaGVhcnQtaGFsZjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxOFwiO1xufVxuXG4uYnQtY2FsZW5kYXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTlcIjtcbn1cblxuLmJ0LXNob3BwaW5nLWNhcnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMWFcIjtcbn1cblxuLmJ0LXBsdXM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMWJcIjtcbn1cblxuLmJ0LXBsdXMtY2lyY2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDFjXCI7XG59XG5cbi5idC1wbHVzLXNxdWFyZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxZFwiO1xufVxuXG4uYnQtcGVuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDFlXCI7XG59XG5cbi5idC1taW51czpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyMVwiO1xufVxuXG4uYnQtbWludXMtY2lyY2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDIyXCI7XG59XG5cbi5idC1taW51cy1zcXVhcmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjNcIjtcbn1cblxuLmJ0LXBlbmNpbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyNFwiO1xufVxuXG4uYnQtZWRpdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyNVwiO1xufVxuXG4uYnQtdGh1bWJzLXVwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI2XCI7XG59XG5cbi5idC10aHVtYnMtZG93bjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyN1wiO1xufVxuXG4uYnQtZ2VhcjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyOFwiO1xufVxuXG4uYnQtdHJhc2g6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjlcIjtcbn1cblxuLmJ0LWZpbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmFcIjtcbn1cblxuLmJ0LWluZm8tY2lyY2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJiXCI7XG59XG5cbi5idC1sYWJlbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyY1wiO1xufVxuXG4uYnQtcm9ja2V0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJkXCI7XG59XG5cbi5idC1ib29rOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJlXCI7XG59XG5cbi5idC1ib29rLW9wZW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMmZcIjtcbn1cblxuLmJ0LW5vdGVib29rOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDMwXCI7XG59XG5cbi5idC1jYW1lcmE6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzFcIjtcbn1cblxuLmJ0LWZvbGRlcjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzMlwiO1xufVxuXG4uYnQtcXVvdGUtbGVmdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzNlwiO1xufVxuXG4uYnQtcXVvdGUtcmlnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzdcIjtcbn1cblxuLmJ0LWV5ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzOFwiO1xufVxuXG4uYnQtbG9jazpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzOVwiO1xufVxuXG4uYnQtbG9jay1vcGVuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDNhXCI7XG59XG5cbi5idC1naWZ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDNiXCI7XG59XG5cbi5idC1zcGlubmVyLWNsb2NrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDNjXCI7XG59XG5cbi5idC1zcGlubmVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDNkXCI7XG59XG5cbi5idC13cmVuY2g6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2VcIjtcbn1cblxuLmJ0LWNsb3VkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQwXCI7XG59XG5cbi5idC1jbG91ZC11cGxvYWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDFcIjtcbn1cblxuLmJ0LWNsb3VkLWRvd25sb2FkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQyXCI7XG59XG5cbi5idC1zeW5jOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQzXCI7XG59XG5cbi5idC1xdWVzdGlvbi1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDRcIjtcbn1cblxuLmJ0LXNoYXJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQ1XCI7XG59XG5cbi5idC1icmllZmNhc2U6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDZcIjtcbn1cblxuLmJ0LW1vbmV5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQ3XCI7XG59XG5cbi5idC1tZWdhcGhvbmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDhcIjtcbn1cblxuLmJ0LXNpZ24taW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDlcIjtcbn1cblxuLmJ0LXNpZ24tb3V0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDRhXCI7XG59XG5cbi5idC1maWxtOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDRiXCI7XG59XG5cbi5idC10cm9waHk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNGNcIjtcbn1cblxuLmJ0LWNvZGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNGRcIjtcbn1cblxuLmJ0LWxpZ2h0LWJ1bGI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNGVcIjtcbn1cblxuLmJ0LXByaW50OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDUwXCI7XG59XG5cbi5idC1mYXg6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTFcIjtcbn1cblxuLmJ0LXZpZGVvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDUyXCI7XG59XG5cbi5idC1zaWduYWw6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTNcIjtcbn1cblxuLmJ0LXNpdGVtYXA6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTRcIjtcbn1cblxuLmJ0LXVwbG9hZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1NVwiO1xufVxuXG4uYnQtZG93bmxvYWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTZcIjtcbn1cblxuLmJ0LWtleTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1N1wiO1xufVxuXG4uYnQtbXVnOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU4XCI7XG59XG5cbi5idC1ib29rbWFyazpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1OVwiO1xufVxuXG4uYnQtZmxhZzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1YVwiO1xufVxuXG4uYnQtZXh0ZXJuYWwtbGluazpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1YlwiO1xufVxuXG4uYnQtc21pbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNWNcIjtcbn1cblxuLmJ0LWZyb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDVkXCI7XG59XG5cbi5idC1tZWg6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNWVcIjtcbn1cblxuLmJ0LW1hZ2ljOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDYwXCI7XG59XG5cbi5idC1ib2x0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDYxXCI7XG59XG5cbi5idC1leGNsYW1hdGlvbi10cmlhbmdsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2MlwiO1xufVxuXG4uYnQtZXhjbGFtYXRpb24tY2lyY2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDYzXCI7XG59XG5cbi5idC1mbGFzazpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2NFwiO1xufVxuXG4uYnQtbXVzaWM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjVcIjtcbn1cblxuLmJ0LXB1c2gtcGluOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY2XCI7XG59XG5cbi5idC1zaGllbGQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjdcIjtcbn1cblxuLmJ0LXNvcnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjhcIjtcbn1cblxuLmJ0LXJlcGx5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY5XCI7XG59XG5cbi5idC1mb3J3YXJkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDZhXCI7XG59XG5cbi5idC1yZXBseS1hbGw6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNmJcIjtcbn1cblxuLmJ0LWZvcndhcmQtYWxsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDZjXCI7XG59XG5cbi5idC1iZWxsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDZkXCI7XG59XG5cbi5idC1iZWxsLW9mZjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2ZVwiO1xufVxuXG4uYnQtYmFuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDcwXCI7XG59XG5cbi5idC1kYXRhYmFzZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3MVwiO1xufVxuXG4uYnQtaGFyZC1kcml2ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3MlwiO1xufVxuXG4uYnQtbWVyZ2U6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNzNcIjtcbn1cblxuLmJ0LWZvcms6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNzRcIjtcbn1cblxuLmJ0LXdpZmk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNzVcIjtcbn1cblxuLmJ0LXBhcGVyLXBsYW5lOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDc2XCI7XG59XG5cbi5idC1pbmJveDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3N1wiO1xufVxuXG4uYnQtZmlyZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3OFwiO1xufVxuXG4uYnQtcGxheTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3OVwiO1xufVxuXG4uYnQtcGF1c2U6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwN2FcIjtcbn1cblxuLmJ0LXN0b3A6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOGJcIjtcbn1cblxuLmJ0LXBsYXktY2lyY2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDdiXCI7XG59XG5cbi5idC1uZXh0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDdjXCI7XG59XG5cbi5idC1wcmV2aW91czpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3ZFwiO1xufVxuXG4uYnQtcmVwZWF0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDdlXCI7XG59XG5cbi5idC1mYXN0LWZvcndhcmQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwODBcIjtcbn1cblxuLmJ0LWZhc3QtcmV2ZXJzZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4MVwiO1xufVxuXG4uYnQtdm9sdW1lOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDgyXCI7XG59XG5cbi5idC12b2x1bWUtb2ZmOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDgzXCI7XG59XG5cbi5idC12b2x1bWUtdXA6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwODRcIjtcbn1cblxuLmJ0LXZvbHVtZS1kb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDg1XCI7XG59XG5cbi5idC1tYXhpbWl6ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4NlwiO1xufVxuXG4uYnQtbWluaW1pemU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwODdcIjtcbn1cblxuLmJ0LWNsb3NlZC1jYXB0aW9uczpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4OFwiO1xufVxuXG4uYnQtc2h1ZmZsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4OVwiO1xufVxuXG4uYnQtdHJpYW5nbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOGFcIjtcbn1cblxuLmJ0LXNxdWFyZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4YlwiO1xufVxuXG4uYnQtY2lyY2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDhjXCI7XG59XG5cbi5idC1oZXhhZ29uOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDhkXCI7XG59XG5cbi5idC1vY3RhZ29uOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDhlXCI7XG59XG5cbi5idC1hbmdsZS11cDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5MFwiO1xufVxuXG4uYnQtYW5nbGUtZG93bjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5MVwiO1xufVxuXG4uYnQtYW5nbGUtbGVmdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5MlwiO1xufVxuXG4uYnQtYW5nbGUtcmlnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTNcIjtcbn1cblxuLmJ0LWFuZ2xlcy11cDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5NFwiO1xufVxuXG4uYnQtYW5nbGVzLWRvd246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTVcIjtcbn1cblxuLmJ0LWFuZ2xlcy1sZWZ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDk2XCI7XG59XG5cbi5idC1hbmdsZXMtcmlnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTdcIjtcbn1cblxuLmJ0LWFycm93LXVwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDk4XCI7XG59XG5cbi5idC1hcnJvdy1kb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDk5XCI7XG59XG5cbi5idC1hcnJvdy1sZWZ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDlhXCI7XG59XG5cbi5idC1hcnJvdy1yaWdodDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5YlwiO1xufVxuXG4uYnQtYmFyLWNoYXJ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDljXCI7XG59XG5cbi5idC1waWUtY2hhcnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOWRcIjtcbn1cblxuLmJ0LWNpcmNsZS1hcnJvdy11cDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhMFwiO1xufVxuXG4uYnQtY2lyY2xlLWFycm93LWRvd246YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYTFcIjtcbn1cblxuLmJ0LWNpcmNsZS1hcnJvdy1sZWZ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGEyXCI7XG59XG5cbi5idC1jaXJjbGUtYXJyb3ctcmlnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYTNcIjtcbn1cblxuLmJ0LWNhcmV0LXVwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGE0XCI7XG59XG5cbi5idC1jYXJldC1kb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGE1XCI7XG59XG5cbi5idC1jYXJldC1sZWZ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGE2XCI7XG59XG5cbi5idC1jYXJldC1yaWdodDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhN1wiO1xufVxuXG4uYnQtbG9uZy1hcnJvdy11cDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhOFwiO1xufVxuXG4uYnQtbG9uZy1hcnJvdy1kb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGE5XCI7XG59XG5cbi5idC1sb25nLWFycm93LWxlZnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYWFcIjtcbn1cblxuLmJ0LWxvbmctYXJyb3ctcmlnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYWJcIjtcbn1cblxuLmJ0LUJvbGQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYWNcIjtcbn1cblxuLmJ0LWl0YWxpYzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBhZFwiO1xufVxuXG4uYnQtdW5kZXJsaW5lOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGFlXCI7XG59XG5cbi5idC1saW5rOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGIwXCI7XG59XG5cbi5idC1wYXBlci1jbGlwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGIxXCI7XG59XG5cbi5idC1hbGlnbi1sZWZ0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGIyXCI7XG59XG5cbi5idC1hbGlnbi1jZW50ZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjNcIjtcbn1cblxuLmJ0LWFsaWduLXJpZ2h0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGI0XCI7XG59XG5cbi5idC1hbGlnbi1qdXN0aWZ5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGI1XCI7XG59XG5cbi5idC1jdXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjZcIjtcbn1cblxuLmJ0LWNvcHk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYjdcIjtcbn1cblxuLmJ0LXBhc3RlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGI4XCI7XG59XG5cbi5idC1waG90bzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBiOVwiO1xufVxuXG4uYnQtdGFibGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYmFcIjtcbn1cblxuLmJ0LXVsaXN0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGJiXCI7XG59XG5cbi5idC1vbGlzdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBiY1wiO1xufVxuXG4uYnQtaW5kZW50OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGJkXCI7XG59XG5cbi5idC1vdXRkZW50OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGJlXCI7XG59XG5cbi5idC11bmRvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGMwXCI7XG59XG5cbi5idC1yZWRvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGMxXCI7XG59XG5cbi5idC1zdXA6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYzJcIjtcbn1cblxuLmJ0LXN1YjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBjM1wiO1xufVxuXG4uYnQtdGV4dC1zaXplOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGM0XCI7XG59XG5cbi5idC10ZXh0LWNvbG9yOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGM1XCI7XG59XG5cbi5idC1yZW1vdmUtZm9ybWF0dGluZzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBjNlwiO1xufVxuXG4uYnQtYmxvY2txdW90ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzNlwiO1xufVxuXG4uYnQtZ2xvYmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwYzdcIjtcbn1cblxuLmJ0LW1hcDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBjOFwiO1xufVxuXG4uYnQtbWFwLWFycm93OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGM5XCI7XG59XG5cbi5idC1tYXAtbWFya2VyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGNhXCI7XG59XG5cbi5idC1tYXAtcGluOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGNiXCI7XG59XG5cbi5idC1ob21lOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGNjXCI7XG59XG5cbi5idC1idWlsZGluZzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBjZFwiO1xufVxuXG4uYnQtaW5kdXN0cnk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwY2VcIjtcbn1cblxuLmJ0LWRlc2t0b3A6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDBcIjtcbn1cblxuLmJ0LWxhcHRvcDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBkMVwiO1xufVxuXG4uYnQtdGFibGV0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGQyXCI7XG59XG5cbi5idC1tb2JpbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDNcIjtcbn1cblxuLmJ0LXR2OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGQ0XCI7XG59XG5cbi5idC1yYWRpby1jaGVja2VkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGQ1XCI7XG59XG5cbi5idC1yYWRpby11bmNoZWNrZWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOGNcIjtcbn1cblxuLmJ0LWNoZWNrYm94LWNoZWNrZWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTRcIjtcbn1cblxuLmJ0LWNoZWNrYm94LXVuY2hlY2tlZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA4YlwiO1xufVxuXG4uYnQtY2hlY2tib3gtaW50ZXJtZWRpYXRlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDIzXCI7XG59XG5cbi5idC11c2VyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGQ2XCI7XG59XG5cbi5idC11c2VyLW1hbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDZcIjtcbn1cblxuLmJ0LXVzZXItZmVtYWxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGQ3XCI7XG59XG5cbi5idC1jcm93bjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjBkOFwiO1xufVxuXG4uYnQtY3JlZGl0LWNhcmQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZDlcIjtcbn1cblxuLmJ0LXN0cmlrZXRocm91Z2g6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwZGFcIjtcbn1cblxuLmJ0LWVqZWN0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGRiXCI7XG59XG5cbi5idC1lbGxpcHNpcy1oOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGRjXCI7XG59XG5cbi5idC1lbGxpcHNpcy12OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMGRkXCI7XG59XG5cbi5mYWItZmFjZWJvb2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDBcIjtcbn1cblxuLmZhYi1mYWNlYm9vay1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDFcIjtcbn1cblxuLmZhYi10d2l0dGVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDAyXCI7XG59XG5cbi5mYWItbGlua2VkaW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDNcIjtcbn1cblxuLmZhYi1saW5rZWRpbi1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDRcIjtcbn1cblxuLmZhYi1pbnN0YWdyYW06YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDVcIjtcbn1cblxuLmZhYi1naXRodWI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMDZcIjtcbn1cblxuLmZhYi1naXRodWItYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDA3XCI7XG59XG5cbi5mYWItZ29vZ2xlcGx1czpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwOFwiO1xufVxuXG4uZmFiLWdvb2dsZXBsdXMtYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDA5XCI7XG59XG5cbi5mYWItcGludGVyZXN0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDBhXCI7XG59XG5cbi5mYWItcGludGVyZXN0LWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwYlwiO1xufVxuXG4uZmFiLXR1bWJscjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAwY1wiO1xufVxuXG4uZmFiLXR1bWJsci1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMGRcIjtcbn1cblxuLmZhYi1iaXRjb2luOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDEwXCI7XG59XG5cbi5mYWItYml0Y29pbi1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTFcIjtcbn1cblxuLmZhYi1kcm9wYm94OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDEyXCI7XG59XG5cbi5mYWItc3RhY2tleGNoYW5nZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxM1wiO1xufVxuXG4uZmFiLXN0YWNrb3ZlcmZsb3c6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTRcIjtcbn1cblxuLmZhYi1mbGlja3I6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMTVcIjtcbn1cblxuLmZhYi1mbGlja3ItYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDE2XCI7XG59XG5cbi5mYWItYml0YnVja2V0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDE3XCI7XG59XG5cbi5mYWItaHRtbDU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMThcIjtcbn1cblxuLmZhYi1jc3MzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDE5XCI7XG59XG5cbi5mYWItYXBwbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMWFcIjtcbn1cblxuLmZhYi13aW5kb3dzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDFiXCI7XG59XG5cbi5mYWItYW5kcm9pZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAxY1wiO1xufVxuXG4uZmFiLWxpbnV4OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDFkXCI7XG59XG5cbi5mYWItZHJpYmJibGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMWVcIjtcbn1cblxuLmZhYi15b3V0dWJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDIxXCI7XG59XG5cbi5mYWItc2t5cGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjJcIjtcbn1cblxuLmZhYi1mb3Vyc3F1YXJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDIzXCI7XG59XG5cbi5mYWItdHJlbGxvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI0XCI7XG59XG5cbi5mYWItbWF4Y2RuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI1XCI7XG59XG5cbi5mYWItZ2l0dGlwOmJlZm9yZSxcbi5mYWItZ3JhdGlwYXk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMjZcIjtcbn1cblxuLmZhYi12aW1lbzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyN1wiO1xufVxuXG4uZmFiLXZpbWVvLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyOFwiO1xufVxuXG4uZmFiLXNsYWNrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDI5XCI7XG59XG5cbi5mYWItd29yZHByZXNzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJhXCI7XG59XG5cbi5mYWItd29yZHByZXNzLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyYlwiO1xufVxuXG4uZmFiLW9wZW5pZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAyY1wiO1xufVxuXG4uZmFiLXlhaG9vOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJkXCI7XG59XG5cbi5mYWIteWFob28tYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJlXCI7XG59XG5cbi5mYWItcmVkZGl0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDJmXCI7XG59XG5cbi5mYWItZ29vZ2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDMwXCI7XG59XG5cbi5mYWItZ29vZ2xlLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzMVwiO1xufVxuXG4uZmFiLXN0dW1ibGV1cG9uOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDMyXCI7XG59XG5cbi5mYWItc3R1bWJsZXVwb24tYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDMzXCI7XG59XG5cbi5mYWItZGVsaWNpb3VzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDM0XCI7XG59XG5cbi5mYWItZGlnZzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzNVwiO1xufVxuXG4uZmFiLXBpZWRwaXBlcjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzNlwiO1xufVxuXG4uZmFiLXBpZWRwaXBlci1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzdcIjtcbn1cblxuLmZhYi1kcnVwYWw6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzhcIjtcbn1cblxuLmZhYi1qb29tbGE6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMzlcIjtcbn1cblxuLmZhYi1iZWhhbmNlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDNhXCI7XG59XG5cbi5mYWItc3RlYW06YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2JcIjtcbn1cblxuLmZhYi1zdGVhbS1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwM2NcIjtcbn1cblxuLmZhYi1zcG90aWZ5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDNkXCI7XG59XG5cbi5mYWItZGV2aWFudGFydDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjAzZVwiO1xufVxuXG4uZmFiLXNvdW5kY2xvdWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDBcIjtcbn1cblxuLmZhYi12aW5lOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQxXCI7XG59XG5cbi5mYWItY29kZXBlbjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0MlwiO1xufVxuXG4uZmFiLWpzZmlkZGxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQzXCI7XG59XG5cbi5mYWItcmViZWw6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDRcIjtcbn1cblxuLmZhYi1lbXBpcmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDVcIjtcbn1cblxuLmZhYi1naXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDZcIjtcbn1cblxuLmZhYi1oYWNrZXJuZXdzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQ3XCI7XG59XG5cbi5mYWItaGFja2VybmV3cy1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNDhcIjtcbn1cblxuLmZhYi1zbGlkZXNoYXJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDQ5XCI7XG59XG5cbi5mYWItdHdpdGNoOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDRhXCI7XG59XG5cbi5mYWIteWVscDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0YlwiO1xufVxuXG4uZmFiLXBheXBhbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA0Y1wiO1xufVxuXG4uZmFiLWdvb2dsZS13YWxsZXQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNGRcIjtcbn1cblxuLmZhYi1hbmdlbGxpc3Q6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNGVcIjtcbn1cblxuLmZhYi1jYy12aXNhOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDUwXCI7XG59XG5cbi5mYWItY2MtbWFzdGVyY2FyZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1MVwiO1xufVxuXG4uZmFiLWNjLWRpc2NvdmVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDUyXCI7XG59XG5cbi5mYWItY2MtYW1leDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1M1wiO1xufVxuXG4uZmFiLWNjLXBheXBhbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1NFwiO1xufVxuXG4uZmFiLWNjLXN0cmlwZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1NVwiO1xufVxuXG4uZmFiLWxhc3RmbTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA1NlwiO1xufVxuXG4uZmFiLXdoYXRzYXBwOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU3XCI7XG59XG5cbi5mYWItbWVkaXVtOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDU4XCI7XG59XG5cbi5mYWItbWVhbnBhdGg6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNTlcIjtcbn1cblxuLmZhYi1tZWFucGF0aC1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNWFcIjtcbn1cblxuLmZhYi1wYWdlbGluZXM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNWJcIjtcbn1cblxuLmZhYi1pb3hob3N0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDYwXCI7XG59XG5cbi5mYWItYnV5c2VsbGFkczpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2MVwiO1xufVxuXG4uZmFiLWJ1eXNlbGxhZHMtYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDYyXCI7XG59XG5cbi5mYWItY29ubmVjdGRldmVsb3A6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNjNcIjtcbn1cblxuLmZhYi1kYXNoY3ViZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2NFwiO1xufVxuXG4uZmFiLWZvcnVtYmVlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY1XCI7XG59XG5cbi5mYWItbGVhbnB1YjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2NlwiO1xufVxuXG4uZmFiLXNlbGxzeTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2N1wiO1xufVxuXG4uZmFiLXNoaXJ0c2luYnVsazpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2OFwiO1xufVxuXG4uZmFiLXNpbXBseWJ1aWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDY5XCI7XG59XG5cbi5mYWItc2t5YXRsYXM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNmFcIjtcbn1cblxuLmZhYi12aWFjb2luOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDZiXCI7XG59XG5cbi5mYWItY29kaWVwaWU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNmNcIjtcbn1cblxuLmZhYi1xdWV1ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2ZFwiO1xufVxuXG4uZmFiLXF1ZXVlLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA2ZVwiO1xufVxuXG4uZmFiLWZvbnRpY29uczpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3MFwiO1xufVxuXG4uZmFiLWZvbnRpY29ucy1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwNzFcIjtcbn1cblxuLmZhYi1ibGFja3RpZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3MlwiO1xufVxuXG4uZmFiLWJsYWNrdGllLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA3M1wiO1xufVxuXG4uZmFiLXhpbmc6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwOTBcIjtcbn1cblxuLmZhYi12azpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5MVwiO1xufVxuXG4uZmFiLXdlaWJvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDkyXCI7XG59XG5cbi5mYWItcmVucmVuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDkzXCI7XG59XG5cbi5mYWItdGVuY2VudC13ZWlibzpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZjA5NFwiO1xufVxuXG4uZmFiLXFxOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDk1XCI7XG59XG5cbi5mYWItd2VjaGF0OmJlZm9yZSxcbi5mYWItd2VpeGluOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxmMDk2XCI7XG59XG5cbkBrZXlmcmFtZXMgcGx5ci1wcm9ncmVzcyB7XG4gIHRvIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyNXB4IDA7XG4gIH1cbn1cblxuLnBseXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiAyMDBweDtcbiAgZm9udC1mYW1pbHk6IEF2ZW5pciwgXCJBdmVuaXIgTmV4dFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiU2Vnb2UgVUlcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZGlyZWN0aW9uOiBsdHI7XG59XG5cbi5wbHlyLFxuLnBseXIgKixcbi5wbHlyICo6OmFmdGVyLFxuLnBseXIgKjo6YmVmb3JlIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnBseXIgYSxcbi5wbHlyIGJ1dHRvbixcbi5wbHlyIGlucHV0LFxuLnBseXIgbGFiZWwge1xuICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbn1cblxuLnBseXI6Zm9jdXMge1xuICBvdXRsaW5lOiAwO1xufVxuXG4ucGx5ciB2aWRlbyxcbi5wbHlyIGF1ZGlvIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xuICBoZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIG1hcmdpbi10b3A6IC00cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjJzIGVhc2UsIGJvcmRlciAuMnMgZWFzZSwgdHJhbnNmb3JtIC4ycyBlYXNlO1xuICBib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE1KSwgMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ106Oi1tb3otcmFuZ2UtdHJhY2sge1xuICBoZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1vei1yYW5nZS10aHVtYiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjJzIGVhc2UsIGJvcmRlciAuMnMgZWFzZSwgdHJhbnNmb3JtIC4ycyBlYXNlO1xuICBib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE1KSwgMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ106Oi1tcy10cmFjayB7XG4gIGhlaWdodDogOHB4O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ106Oi1tcy1maWxsLXVwcGVyIHtcbiAgaGVpZ2h0OiA4cHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ106Oi1tcy1maWxsLWxvd2VyIHtcbiAgaGVpZ2h0OiA4cHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICMzNDk4ZGI7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ106Oi1tcy10aHVtYiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjJzIGVhc2UsIGJvcmRlciAuMnMgZWFzZSwgdHJhbnNmb3JtIC4ycyBlYXNlO1xuICBib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE1KSwgMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ106Oi1tcy10b29sdGlwIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ106Oi1tb3otZm9jdXMtb3V0ZXIge1xuICBib3JkZXI6IDA7XG59XG5cbi5wbHlyIGlucHV0W3R5cGU9J3JhbmdlJ10udGFiLWZvY3VzOmZvY3VzIHtcbiAgb3V0bGluZS1vZmZzZXQ6IDNweDtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTphY3RpdmU6Oi13ZWJraXQtc2xpZGVyLXRodW1iIHtcbiAgYmFja2dyb3VuZDogIzM0OThkYjtcbiAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMjUpO1xufVxuXG4ucGx5ciBpbnB1dFt0eXBlPSdyYW5nZSddOmFjdGl2ZTo6LW1vei1yYW5nZS10aHVtYiB7XG4gIGJhY2tncm91bmQ6ICMzNDk4ZGI7XG4gIGJvcmRlci1jb2xvcjogI2ZmZjtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjI1KTtcbn1cblxuLnBseXIgaW5wdXRbdHlwZT0ncmFuZ2UnXTphY3RpdmU6Oi1tcy10aHVtYiB7XG4gIGJhY2tncm91bmQ6ICMzNDk4ZGI7XG4gIGJvcmRlci1jb2xvcjogI2ZmZjtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjI1KTtcbn1cblxuLnBseXItLXZpZGVvIGlucHV0W3R5cGU9J3JhbmdlJ10udGFiLWZvY3VzOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG59XG5cbi5wbHlyLS1hdWRpbyBpbnB1dFt0eXBlPSdyYW5nZSddLnRhYi1mb2N1czpmb2N1cyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgcmdiYSg4NiwgOTMsIDEwMCwgMC41KTtcbn1cblxuLnBseXJfX3NyLW9ubHkge1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjogMCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDFweCAhaW1wb3J0YW50O1xuICB3aWR0aDogMXB4ICFpbXBvcnRhbnQ7XG59XG5cbi5wbHlyX192aWRlby13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xufVxuXG4ucGx5cl9fdmlkZW8tZW1iZWQge1xuICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlO1xuICAvKiAxNjo5ICovXG4gIGhlaWdodDogMDtcbiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgei1pbmRleDogMDtcbn1cblxuLnBseXJfX3ZpZGVvLWVtYmVkIGlmcmFtZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXI6IDA7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4ucGx5cl9fdmlkZW8tZW1iZWQgPiBkaXYge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiAyMDAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTM1Ljk1JSk7XG59XG5cbi5wbHlyIC5wbHlyX192aWRlby1lbWJlZCBpZnJhbWUge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLnBseXIgdmlkZW86Oi13ZWJraXQtbWVkaWEtdGV4dC10cmFjay1jb250YWluZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5cl9fY2FwdGlvbnMge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNjBweCk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MgZWFzZTtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG4ucGx5cl9fY2FwdGlvbnMgc3BhbiB7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgcGFkZGluZzogM3B4IDEwcHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgYm94LWRlY29yYXRpb24tYnJlYWs6IGNsb25lO1xuICBsaW5lLWhlaWdodDogMTUwJTtcbn1cblxuLnBseXJfX2NhcHRpb25zIHNwYW46ZW1wdHkge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnBseXJfX2NhcHRpb25zIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gIH1cbn1cblxuLnBseXItLWNhcHRpb25zLWFjdGl2ZSAucGx5cl9fY2FwdGlvbnMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBseXItLWhpZGUtY29udHJvbHMgLnBseXJfX2NhcHRpb25zIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAucGx5ci0tZnVsbHNjcmVlbi1hY3RpdmUgLnBseXJfX2NhcHRpb25zIHtcbiAgICBmb250LXNpemU6IDMycHg7XG4gIH1cbn1cblxuLnBseXIgOjotd2Via2l0LW1lZGlhLWNvbnRyb2xzIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBseXJfX2NvbnRyb2xzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnBseXJfX2NvbnRyb2xzID4gYnV0dG9uLFxuLnBseXJfX2NvbnRyb2xzIC5wbHlyX19wcm9ncmVzcyxcbi5wbHlyX19jb250cm9scyAucGx5cl9fdGltZSB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5cbi5wbHlyX19jb250cm9scyA+IGJ1dHRvbjpmaXJzdC1jaGlsZCxcbi5wbHlyX19jb250cm9scyAucGx5cl9fcHJvZ3Jlc3M6Zmlyc3QtY2hpbGQsXG4ucGx5cl9fY29udHJvbHMgLnBseXJfX3RpbWU6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLnBseXJfX2NvbnRyb2xzIC5wbHlyX192b2x1bWUge1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuXG4ucGx5cl9fY29udHJvbHMgW2RhdGEtcGx5cj1cInBhdXNlXCJdIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5wbHlyX19jb250cm9scyBidXR0b24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmxleC1zaHJpbms6IDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBwYWRkaW5nOiA3cHg7XG4gIGJvcmRlcjogMDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIC4zcyBlYXNlLCBjb2xvciAuM3MgZWFzZSwgb3BhY2l0eSAuM3MgZWFzZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbi5wbHlyX19jb250cm9scyBidXR0b24gc3ZnIHtcbiAgd2lkdGg6IDE4cHg7XG4gIGhlaWdodDogMThweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi5wbHlyX19jb250cm9scyAuaWNvbi0tZXhpdC1mdWxsc2NyZWVuLFxuLnBseXJfX2NvbnRyb2xzIC5pY29uLS1tdXRlZCxcbi5wbHlyX19jb250cm9scyAuaWNvbi0tY2FwdGlvbnMtb24ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDgwcHgpIHtcbiAgLnBseXJfX2NvbnRyb2xzID4gYnV0dG9uLFxuICAucGx5cl9fY29udHJvbHMgLnBseXJfX3Byb2dyZXNzLFxuICAucGx5cl9fY29udHJvbHMgLnBseXJfX3RpbWUge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG59XG5cbi5wbHlyLS1oaWRlLWNvbnRyb2xzIC5wbHlyX19jb250cm9scyB7XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4ucGx5ci0tdmlkZW8gLnBseXJfX2NvbnRyb2xzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBwYWRkaW5nOiA1MHB4IDEwcHggMTBweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRyYW5zcGFyZW50LCByZ2JhKDAsIDAsIDAsIDAuNSkpO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiBpbmhlcml0O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogaW5oZXJpdDtcbiAgY29sb3I6ICNmZmY7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIGVhc2U7XG59XG5cbi5wbHlyLS12aWRlbyAucGx5cl9fY29udHJvbHMgYnV0dG9uLnRhYi1mb2N1czpmb2N1cyxcbi5wbHlyLS12aWRlbyAucGx5cl9fY29udHJvbHMgYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzM0OThkYjtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wbHlyLS1hdWRpbyAucGx5cl9fY29udHJvbHMge1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGJlM2U4O1xuICBjb2xvcjogIzU2NUQ2NDtcbn1cblxuLnBseXItLWF1ZGlvIC5wbHlyX19jb250cm9scyBidXR0b24udGFiLWZvY3VzOmZvY3VzLFxuLnBseXItLWF1ZGlvIC5wbHlyX19jb250cm9scyBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjMzQ5OGRiO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnBseXJfX3BsYXktbGFyZ2Uge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kOiAjMzQ5OGRiO1xuICBib3JkZXI6IDRweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICBjb2xvcjogI2ZmZjtcbiAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xufVxuXG4ucGx5cl9fcGxheS1sYXJnZSBzdmcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDJweDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuLnBseXJfX3BsYXktbGFyZ2U6Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cblxuLnBseXIgLnBseXJfX3BsYXktbGFyZ2Uge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5wbHlyLS1hdWRpbyAucGx5cl9fcGxheS1sYXJnZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyLS1wbGF5aW5nIC5wbHlyX19wbGF5LWxhcmdlIHtcbiAgb3BhY2l0eTogMDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ucGx5cl9fY29udHJvbHMgW2RhdGEtcGx5cj0ncGF1c2UnXSxcbi5wbHlyLS1wbGF5aW5nIC5wbHlyX19jb250cm9scyBbZGF0YS1wbHlyPSdwbGF5J10ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5ci0tcGxheWluZyAucGx5cl9fY29udHJvbHMgW2RhdGEtcGx5cj0ncGF1c2UnXSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4sXG4ucGx5ci0tbXV0ZWQgLnBseXJfX2NvbnRyb2xzIC5pY29uLS1tdXRlZCxcbi5wbHlyLS1jYXB0aW9ucy1hY3RpdmUgLnBseXJfX2NvbnRyb2xzIC5pY29uLS1jYXB0aW9ucy1vbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucGx5ci0tZnVsbHNjcmVlbi1hY3RpdmUgLmljb24tLWV4aXQtZnVsbHNjcmVlbiArIHN2Zyxcbi5wbHlyLS1tdXRlZCAucGx5cl9fY29udHJvbHMgLmljb24tLW11dGVkICsgc3ZnLFxuLnBseXItLWNhcHRpb25zLWFjdGl2ZSAucGx5cl9fY29udHJvbHMgLmljb24tLWNhcHRpb25zLW9uICsgc3ZnIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBseXIgW2RhdGEtcGx5cj0nY2FwdGlvbnMnXSxcbi5wbHlyIFtkYXRhLXBseXI9J2Z1bGxzY3JlZW4nXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyLS1jYXB0aW9ucy1lbmFibGVkIFtkYXRhLXBseXI9J2NhcHRpb25zJ10sXG4ucGx5ci0tZnVsbHNjcmVlbi1lbmFibGVkIFtkYXRhLXBseXI9J2Z1bGxzY3JlZW4nXSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnBseXJfX3Rvb2x0aXAge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDI7XG4gIGJvdHRvbTogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgcGFkZGluZzogNXB4IDcuNXB4O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDEwcHgpIHNjYWxlKDAuOCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDUwJSAxMDAlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzIC4xcyBlYXNlLCBvcGFjaXR5IC4ycyAuMXMgZWFzZTtcbn1cblxuLnBseXJfX3Rvb2x0aXA6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBib3R0b206IC00cHg7XG4gIGJvcmRlci1yaWdodDogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wOiA0cHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICB6LWluZGV4OiAyO1xufVxuXG4ucGx5ciBidXR0b246aG92ZXIgLnBseXJfX3Rvb2x0aXAsXG4ucGx5ciBidXR0b24udGFiLWZvY3VzOmZvY3VzIC5wbHlyX190b29sdGlwLFxuLnBseXJfX3Rvb2x0aXAtLXZpc2libGUge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKSBzY2FsZSgxKTtcbn1cblxuLnBseXIgYnV0dG9uOmhvdmVyIC5wbHlyX190b29sdGlwIHtcbiAgei1pbmRleDogMztcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpmaXJzdC1jaGlsZCAucGx5cl9fdG9vbHRpcCB7XG4gIGxlZnQ6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpIHNjYWxlKDAuOCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAgMTAwJTtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpmaXJzdC1jaGlsZCAucGx5cl9fdG9vbHRpcDo6YmVmb3JlIHtcbiAgbGVmdDogMTZweDtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpsYXN0LWNoaWxkIC5wbHlyX190b29sdGlwIHtcbiAgcmlnaHQ6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpIHNjYWxlKDAuOCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMTAwJTtcbn1cblxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpsYXN0LWNoaWxkIC5wbHlyX190b29sdGlwOjpiZWZvcmUge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogMTZweDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwJSk7XG59XG5cbi5wbHlyX19jb250cm9scyBidXR0b246Zmlyc3QtY2hpbGQ6aG92ZXIgLnBseXJfX3Rvb2x0aXAsXG4ucGx5cl9fY29udHJvbHMgYnV0dG9uOmZpcnN0LWNoaWxkLnRhYi1mb2N1czpmb2N1cyAucGx5cl9fdG9vbHRpcCxcbi5wbHlyX19jb250cm9scyBidXR0b246Zmlyc3QtY2hpbGQgLnBseXJfX3Rvb2x0aXAtLXZpc2libGUsXG4ucGx5cl9fY29udHJvbHMgYnV0dG9uOmxhc3QtY2hpbGQ6aG92ZXIgLnBseXJfX3Rvb2x0aXAsXG4ucGx5cl9fY29udHJvbHMgYnV0dG9uOmxhc3QtY2hpbGQudGFiLWZvY3VzOmZvY3VzIC5wbHlyX190b29sdGlwLFxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpsYXN0LWNoaWxkIC5wbHlyX190b29sdGlwLS12aXNpYmxlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCkgc2NhbGUoMSk7XG59XG5cbi5wbHlyX19wcm9ncmVzcyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxleDogMTtcbn1cblxuLnBseXJfX3Byb2dyZXNzIGlucHV0W3R5cGU9XCJyYW5nZVwiXSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuLnBseXJfX3Byb2dyZXNzIGlucHV0W3R5cGU9XCJyYW5nZVwiXTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLnBseXJfX3Byb2dyZXNzIGlucHV0W3R5cGU9XCJyYW5nZVwiXTo6LW1vei1yYW5nZS10cmFjayB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MgaW5wdXRbdHlwZT1cInJhbmdlXCJdOjotbXMtZmlsbC11cHBlciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MgLnBseXJfX3Rvb2x0aXAge1xuICBsZWZ0OiAwO1xufVxuXG4ucGx5ciAucGx5cl9fcHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5wbHlyX19wcm9ncmVzcy0tYnVmZmVyLFxuLnBseXJfX3Byb2dyZXNzLS1wbGF5ZWQsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOHB4O1xuICBtYXJnaW46IC00cHggMCAwO1xuICBwYWRkaW5nOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LXdlYmtpdC1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LXdlYmtpdC1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5Ojotd2Via2l0LXByb2dyZXNzLWJhciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZSxcbi5wbHlyX19wcm9ncmVzcy0tcGxheWVkOjotd2Via2l0LXByb2dyZXNzLXZhbHVlLFxuLnBseXJfX3ZvbHVtZS0tZGlzcGxheTo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZSB7XG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gIG1pbi13aWR0aDogOHB4O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LW1vei1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LW1vei1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5OjotbW96LXByb2dyZXNzLWJhciB7XG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gIG1pbi13aWR0aDogOHB4O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LW1zLWZpbGwsXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LW1zLWZpbGwsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5OjotbXMtZmlsbCB7XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZCxcbi5wbHlyX192b2x1bWUtLWRpc3BsYXkge1xuICB6LWluZGV4OiAxO1xuICBjb2xvcjogIzM0OThkYjtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHRyYW5zaXRpb246IG5vbmU7XG59XG5cbi5wbHlyX19wcm9ncmVzcy0tcGxheWVkOjotd2Via2l0LXByb2dyZXNzLXZhbHVlLFxuLnBseXJfX3ZvbHVtZS0tZGlzcGxheTo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZSB7XG4gIG1pbi13aWR0aDogOHB4O1xuICBtYXgtd2lkdGg6IDk5JTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICB0cmFuc2l0aW9uOiBub25lO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LW1vei1wcm9ncmVzcy1iYXIsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5OjotbW96LXByb2dyZXNzLWJhciB7XG4gIG1pbi13aWR0aDogOHB4O1xuICBtYXgtd2lkdGg6IDk5JTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICB0cmFuc2l0aW9uOiBub25lO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLXBsYXllZDo6LW1zLWZpbGwsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5OjotbXMtZmlsbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyX19wcm9ncmVzcy0tYnVmZmVyOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgdHJhbnNpdGlvbjogd2lkdGggLjJzIGVhc2U7XG59XG5cbi5wbHlyX19wcm9ncmVzcy0tYnVmZmVyOjotbW96LXByb2dyZXNzLWJhciB7XG4gIHRyYW5zaXRpb246IHdpZHRoIC4ycyBlYXNlO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcjo6LW1zLWZpbGwge1xuICB0cmFuc2l0aW9uOiB3aWR0aCAuMnMgZWFzZTtcbn1cblxuLnBseXItLXZpZGVvIC5wbHlyX19wcm9ncmVzcy0tYnVmZmVyLFxuLnBseXItLXZpZGVvIC5wbHlyX192b2x1bWUtLWRpc3BsYXkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpO1xufVxuXG4ucGx5ci0tdmlkZW8gLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI1KTtcbn1cblxuLnBseXItLWF1ZGlvIC5wbHlyX19wcm9ncmVzcy0tYnVmZmVyLFxuLnBseXItLWF1ZGlvIC5wbHlyX192b2x1bWUtLWRpc3BsYXkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDE5OCwgMjE0LCAyMTksIDAuNjcpO1xufVxuXG4ucGx5ci0tYXVkaW8gLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICBjb2xvcjogcmdiYSgxOTgsIDIxNCwgMjE5LCAwLjY3KTtcbn1cblxuLnBseXItLWxvYWRpbmcgLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICBhbmltYXRpb246IHBseXItcHJvZ3Jlc3MgMXMgbGluZWFyIGluZmluaXRlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDI1cHggMjVweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMCwgMCwgMCwgMC4xNSkgNTAlLCByZ2JhKDAsIDAsIDAsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnBseXItLXZpZGVvLnBseXItLWxvYWRpbmcgLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpO1xufVxuXG4ucGx5ci0tYXVkaW8ucGx5ci0tbG9hZGluZyAucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTk4LCAyMTQsIDIxOSwgMC42Nyk7XG59XG5cbi5wbHlyX190aW1lIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5wbHlyX190aW1lICsgLnBseXJfX3RpbWUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnBseXJfX3RpbWUgKyAucGx5cl9fdGltZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG59XG5cbi5wbHlyX190aW1lICsgLnBseXJfX3RpbWU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXDIwNDQnO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG5cbi5wbHlyX192b2x1bWUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5ciAucGx5cl9fdm9sdW1lIHtcbiAgZmxleDogMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ucGx5ciAucGx5cl9fdm9sdW1lIGlucHV0W3R5cGU9XCJyYW5nZVwiXSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XG4gIC5wbHlyIC5wbHlyX192b2x1bWUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1heC13aWR0aDogNjBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnBseXIgLnBseXJfX3ZvbHVtZSB7XG4gICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgfVxufVxuXG4ucGx5ci0taXMtaW9zIC5wbHlyX192b2x1bWUsXG4ucGx5ci0taXMtaW9zIFtkYXRhLXBseXI9J211dGUnXSB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHotaW5kZXg6IDEwMDAwMDAwO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5wbHlyLS1mdWxsc2NyZWVuLWFjdGl2ZSB2aWRlbyB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIC5wbHlyX192aWRlby13cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIC5wbHlyX192aWRlby1lbWJlZCB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4ucGx5ci0tZnVsbHNjcmVlbi1hY3RpdmUgLnBseXJfX2NvbnRyb2xzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xufVxuXG4ucGx5ci0tZnVsbHNjcmVlbi1hY3RpdmUucGx5ci0tdmltZW8gLnBseXJfX3ZpZGVvLXdyYXBwZXIge1xuICBoZWlnaHQ6IDA7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBUb29scy9Gb250c1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFRvb2xzL0FsaWFzZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBUb29scy9NaXhpbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBUb29scy9Db2xvclxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFRvb2xzL0J1dHRvblxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNCT1gtU0laSU5HXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIE1vcmUgc2Vuc2libGUgZGVmYXVsdCBib3gtc2l6aW5nOlxuICogY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlXG4gKi9cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2Ny4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZm9vdGVyLFxuaGVhZGVyLFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5tYWluIHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LSBhbmQgRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi9cbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMsXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI1JFU0VUXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEEgdmVyeSBzaW1wbGUgcmVzZXQgdGhhdCBzaXRzIG9uIHRvcCBvZiBOb3JtYWxpemUuY3NzLlxuICovXG5cbmJvZHksXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5ibG9ja3F1b3RlLFxucCxcbnByZSxcbmRsLFxuZGQsXG5vbCxcbnVsLFxuZmlndXJlLFxuaHIsXG5maWVsZHNldCxcbmxlZ2VuZCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdHJhaWxpbmcgbWFyZ2lucyBmcm9tIG5lc3RlZCBsaXN0cy5cbiAqL1xuXG5saSA+IG9sLFxubGkgPiB1bCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdGFibGUgc3BhY2luZy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG4vKipcbiAqIDEuIFJlc2V0IENocm9tZSBhbmQgRmlyZWZveCBiZWhhdmlvdXIgd2hpY2ggc2V0cyBhIGBtaW4td2lkdGg6IG1pbi1jb250ZW50O2BcbiAqICAgIG9uIGZpZWxkc2V0cy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIG1pbi13aWR0aDogMDtcbiAgLyogWzFdICovXG4gIGJvcmRlcjogMDtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNTSEFSRURcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogU2hhcmVkIGRlY2xhcmF0aW9ucyBmb3IgY2VydGFpbiBlbGVtZW50cy5cbiAqL1xuXG4vKipcbiAqIEFsd2F5cyBkZWNsYXJlIG1hcmdpbnMgaW4gdGhlIHNhbWUgZGlyZWN0aW9uOlxuICogY3Nzd2l6YXJkcnkuY29tLzIwMTIvMDYvc2luZ2xlLWRpcmVjdGlvbi1tYXJnaW4tZGVjbGFyYXRpb25zXG4gKi9cblxuLyogc3R5bGVsaW50LWRpc2FibGUgc2VsZWN0b3ItbGlzdC1jb21tYS1uZXdsaW5lLWFmdGVyICovXG5cbmFkZHJlc3MsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5ibG9ja3F1b3RlLFxucCxcbnByZSxcbmRsLFxub2wsXG51bCxcbmZpZ3VyZSxcbmhyLFxudGFibGUsXG5maWVsZHNldCB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG59XG5cbi8qKlxuICogQ29uc2lzdGVudCBpbmRlbnRhdGlvbiBmb3IgbGlzdHMuXG4gKi9cblxuZGQsXG5vbCxcbnVsIHtcbiAgbWFyZ2luLWxlZnQ6IDI0cHg7XG59XG5cbi8qIHN0eWxlbGludC1lbmFibGUgc2VsZWN0b3ItbGlzdC1jb21tYS1uZXdsaW5lLWFmdGVyICovXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjUEFHRVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBTaW1wbGUgcGFnZS1sZXZlbCBzZXR1cC5cbiAqXG4gKiAxLiBTZXQgdGhlIGRlZmF1bHQgYGZvbnQtc2l6ZWAgYW5kIGBsaW5lLWhlaWdodGAgZm9yIHRoZSBlbnRpcmUgcHJvamVjdCxcbiAqICAgIHNvdXJjZWQgZnJvbSBvdXIgZGVmYXVsdCB2YXJpYWJsZXMuIFRoZSBgZm9udC1zaXplYCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0XG4gKiAgICBpbiBlbXMsIHRoZSBgbGluZS1oZWlnaHRgIGlzIGNhbGN1bGF0ZWQgdG8gZXhpc3QgdW5pdGxlc3NseS5cbiAqIDIuIEZvcmNlIHNjcm9sbGJhcnMgdG8gYWx3YXlzIGJlIHZpc2libGUgdG8gcHJldmVudCBhd2t3YXJkIOKAmGp1bXBz4oCZIHdoZW5cbiAqICAgIG5hdmlnYXRpbmcgYmV0d2VlbiBwYWdlcyB0aGF0IGRvL2RvIG5vdCBoYXZlIGVub3VnaCBjb250ZW50IHRvIHByb2R1Y2VcbiAqICAgIHNjcm9sbGJhcnMgbmF0dXJhbGx5LlxuICogMy4gRW5zdXJlIHRoZSBwYWdlIGFsd2F5cyBmaWxscyBhdCBsZWFzdCB0aGUgZW50aXJlIGhlaWdodCBvZiB0aGUgdmlld3BvcnQuXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiBbMV0gKi9cbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgLyogWzFdICovXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgLyogWzJdICovXG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIC8qIFszXSAqL1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgRWxlbWVudHMvUGFnZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuaHRtbCxcbmJvZHkge1xuICBmb250LWZhbWlseTogJ0hlbHZldGljYScsIHNhbnMtc2VyaWY7XG59XG5cbmh0bWwge1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuYm9keTphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGNvbnRlbnQ6ICdtb2JpbGUnO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDYuMjVlbSkge1xuICBib2R5OmFmdGVyIHtcbiAgICBjb250ZW50OiAndGFibGV0JztcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjEuMjVlbSkge1xuICBib2R5OmFmdGVyIHtcbiAgICBjb250ZW50OiAnZGVza3RvcCc7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDgxLjI1ZW0pIHtcbiAgYm9keTphZnRlciB7XG4gICAgY29udGVudDogJ2Rlc2t0b3AnO1xuICB9XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjSU1BR0VTXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEZsdWlkIGltYWdlcyBmb3IgcmVzcG9uc2l2ZSBwdXJwb3Nlcy5cbiAqIDIuIE9mZnNldCBgYWx0YCB0ZXh0IGZyb20gc3Vycm91bmRpbmcgY29weS5cbiAqIDMuIFNldHRpbmcgYHZlcnRpY2FsLWFsaWduYCByZW1vdmVzIHRoZSB3aGl0ZXNwYWNlIHRoYXQgYXBwZWFycyB1bmRlciBgaW1nYFxuICogICAgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBkcm9wcGVkIGludG8gYSBwYWdlIGFzLWlzLiBTYWZlciBhbHRlcm5hdGl2ZSB0b1xuICogICAgdXNpbmcgYGRpc3BsYXk6IGJsb2NrO2AuXG4gKi9cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiBbMV0gKi9cbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICAvKiBbMl0gKi9cbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgLyogWzNdICovXG59XG5cbi8qKlxuICogMS4gSWYgYSBgd2lkdGhgIGFuZC9vciBgaGVpZ2h0YCBhdHRyaWJ1dGUgaGF2ZSBiZWVuIGV4cGxpY2l0bHkgZGVmaW5lZCwgbGV04oCZc1xuICogICAgbm90IG1ha2UgdGhlIGltYWdlIGZsdWlkLlxuICovXG5cbmltZ1t3aWR0aF0sXG5pbWdbaGVpZ2h0XSB7XG4gIC8qIFsxXSAqL1xuICBtYXgtd2lkdGg6IG5vbmU7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjVEFCTEVTXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEVuc3VyZSB0YWJsZXMgZmlsbCB1cCBhcyBtdWNoIHNwYWNlIGFzIHBvc3NpYmxlLlxuICovXG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIC8qIFsxXSAqL1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgRWxlbWVudHMvTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbmE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjV1JBUFBFUlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBQYWdlLWxldmVsIGNvbnN0cmFpbmluZyBhbmQgd3JhcHBpbmcgZWxlbWVudHMuXG4gKi9cblxuLyogc3R5bGVsaW50LWRpc2FibGUgKi9cblxuLyogc3R5bGVsaW50LWVuYWJsZSAqL1xuXG4uby13cmFwcGVyIHtcbiAgcGFkZGluZy1yaWdodDogMjRweDtcbiAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbn1cblxuLm8td3JhcHBlcjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCIgIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgY2xlYXI6IGJvdGggIWltcG9ydGFudDtcbn1cblxuLyogU2l6ZSB2YXJpYW50cy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5vLXdyYXBwZXItLXRpbnkge1xuICBwYWRkaW5nLXJpZ2h0OiA2cHg7XG4gIHBhZGRpbmctbGVmdDogNnB4O1xufVxuXG4uby13cmFwcGVyLS1zbWFsbCB7XG4gIHBhZGRpbmctcmlnaHQ6IDEycHg7XG4gIHBhZGRpbmctbGVmdDogMTJweDtcbn1cblxuLm8td3JhcHBlci0tbGFyZ2Uge1xuICBwYWRkaW5nLXJpZ2h0OiA0OHB4O1xuICBwYWRkaW5nLWxlZnQ6IDQ4cHg7XG59XG5cbi5vLXdyYXBwZXItLWh1Z2Uge1xuICBwYWRkaW5nLXJpZ2h0OiA5NnB4O1xuICBwYWRkaW5nLWxlZnQ6IDk2cHg7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBPYmplY3RzL1dyYXBwZXJcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5vLXdyYXBwZXIge1xuICBtYXgtd2lkdGg6IG5vbmU7XG4gIHBhZGRpbmctbGVmdDogMjRweDtcbiAgcGFkZGluZy1yaWdodDogMjRweDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ2LjI1ZW0pIHtcbiAgLm8td3JhcHBlci0tbGFyZ2Uge1xuICAgIHBhZGRpbmctcmlnaHQ6IDQ4cHg7XG4gICAgcGFkZGluZy1sZWZ0OiA0OHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gIC5vLXdyYXBwZXItLWh1Z2Uge1xuICAgIHBhZGRpbmctcmlnaHQ6IDQ4cHg7XG4gICAgcGFkZGluZy1sZWZ0OiA0OHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gIC5vLXdyYXBwZXItLWh1Z2Uge1xuICAgIHBhZGRpbmctcmlnaHQ6IDk2cHg7XG4gICAgcGFkZGluZy1sZWZ0OiA5NnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ni4yNGVtKSB7XG4gIC5vLXdyYXBwZXItLWZsdXNoLW1vYmlsZSB7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gIH1cbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNMQVlPVVRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogR3JpZC1saWtlIGxheW91dCBzeXN0ZW0uXG4gKlxuICogVGhlIGxheW91dCBvYmplY3QgcHJvdmlkZXMgdXMgd2l0aCBhIGNvbHVtbi1zdHlsZSBsYXlvdXQgc3lzdGVtLiBUaGlzIGZpbGVcbiAqIGNvbnRhaW5zIHRoZSBiYXNpYyBzdHJ1Y3R1cmFsIGVsZW1lbnRzLCBidXQgY2xhc3NlcyBzaG91bGQgYmUgY29tcGxlbWVudGVkXG4gKiB3aXRoIHdpZHRoIHV0aWxpdGllcywgZm9yIGV4YW1wbGU6XG4gKlxuICogICA8ZGl2IGNsYXNzPVwiby1sYXlvdXRcIj5cbiAqICAgICA8ZGl2IGNsYXNzPVwiby1sYXlvdXRfX2l0ZW0gIHUtMS8yXCI+XG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMlwiPlxuICogICAgIDwvZGl2PlxuICogICA8L2Rpdj5cbiAqXG4gKiBUaGUgYWJvdmUgd2lsbCBjcmVhdGUgYSB0d28tY29sdW1uIHN0cnVjdHVyZSBpbiB3aGljaCBlYWNoIGNvbHVtbiB3aWxsXG4gKiBmbHVpZGx5IGZpbGwgaGFsZiBvZiB0aGUgd2lkdGggb2YgdGhlIHBhcmVudC4gV2UgY2FuIGhhdmUgbW9yZSBjb21wbGV4XG4gKiBzeXN0ZW1zOlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0XCI+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMSAgdS0xLzNAbWVkaXVtXCI+XG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMiAgdS0xLzNAbWVkaXVtXCI+XG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMiAgdS0xLzNAbWVkaXVtXCI+XG4gKiAgICAgPC9kaXY+XG4gKiAgIDwvZGl2PlxuICpcbiAqIFRoZSBhYm92ZSB3aWxsIGNyZWF0ZSBhIHN5c3RlbSBpbiB3aGljaCB0aGUgZmlyc3QgaXRlbSB3aWxsIGJlIDEwMCUgd2lkdGhcbiAqIHVudGlsIHdlIGVudGVyIG91ciBtZWRpdW0gYnJlYWtwb2ludCwgd2hlbiBpdCB3aWxsIGJlY29tZSAzMy4zMzMlIHdpZHRoLiBUaGVcbiAqIHNlY29uZCBhbmQgdGhpcmQgaXRlbXMgd2lsbCBiZSA1MCUgb2YgdGhlaXIgcGFyZW50LCB1bnRpbCB0aGV5IGFsc28gYmVjb21lXG4gKiAzMy4zMzMlIHdpZHRoIGF0IHRoZSBtZWRpdW0gYnJlYWtwb2ludC5cbiAqXG4gKiBXZSBjYW4gYWxzbyBtYW5pcHVsYXRlIGVudGlyZSBsYXlvdXQgc3lzdGVtcyBieSBhZGRpbmcgYSBzZXJpZXMgb2YgbW9kaWZpZXJzXG4gKiB0byB0aGUgYC5vLWxheW91dGAgYmxvY2suIEZvciBleGFtcGxlOlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0ICBvLWxheW91dC0tcmV2ZXJzZVwiPlxuICpcbiAqIFRoaXMgd2lsbCByZXZlcnNlIHRoZSBkaXNwbGF5ZWQgb3JkZXIgb2YgdGhlIHN5c3RlbSBzbyB0aGF0IGl0IHJ1bnMgaW4gdGhlXG4gKiBvcHBvc2l0ZSBvcmRlciB0byBvdXIgc291cmNlLCBlZmZlY3RpdmVseSBmbGlwcGluZyB0aGUgc3lzdGVtIG92ZXIuXG4gKlxuICogICA8ZGl2IGNsYXNzPVwiby1sYXlvdXQgIG8tbGF5b3V0LS1bcmlnaHR8Y2VudGVyXVwiPlxuICpcbiAqIFRoaXMgd2lsbCBjYXVzZSB0aGUgc3lzdGVtIHRvIGZpbGwgdXAgZnJvbSBlaXRoZXIgdGhlIGNlbnRyZSBvciB0aGUgcmlnaHRcbiAqIGhhbmQgc2lkZS4gRGVmYXVsdCBiZWhhdmlvdXIgaXMgdG8gZmlsbCB1cCB0aGUgbGF5b3V0IHN5c3RlbSBmcm9tIHRoZSBsZWZ0LlxuICpcbiAqIFRoZXJlIGFyZSBwbGVudHkgbW9yZSBvcHRpb25zIGF2YWlsYWJsZSB0byB1czogZXhwbG9yZSB0aGVtIGJlbG93LlxuICovXG5cbi8qIERlZmF1bHQvbWFuZGF0b3J5IGNsYXNzZXMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFsbG93cyB1cyB0byB1c2UgdGhlIGxheW91dCBvYmplY3Qgb24gYW55IHR5cGUgb2YgZWxlbWVudC5cbiAqIDIuIFdlIG5lZWQgdG8gZGVmZW5zaXZlbHkgcmVzZXQgYW55IGJveC1tb2RlbCBwcm9wZXJ0aWVzLlxuICogMy4gVXNlIHRoZSBuZWdhdGl2ZSBtYXJnaW4gdHJpY2sgZm9yIG11bHRpLXJvdyBncmlkczpcbiAqICAgIGh0dHA6Ly9jc3N3aXphcmRyeS5jb20vMjAxMS8wOC9idWlsZGluZy1iZXR0ZXItZ3JpZC1zeXN0ZW1zL1xuICovXG5cbi5vLWxheW91dCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAvKiBbMV0gKi9cbiAgbWFyZ2luOiAwO1xuICAvKiBbMl0gKi9cbiAgcGFkZGluZzogMDtcbiAgLyogWzJdICovXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIC8qIFsxXSAqL1xuICBtYXJnaW4tbGVmdDogLTI0cHg7XG4gIC8qIFszXSAqL1xuICBmb250LXNpemU6IDA7XG59XG5cbi8qKlxuICAgKiAxLiBSZXF1aXJlZCBpbiBvcmRlciB0byBjb21iaW5lIGZsdWlkIHdpZHRocyB3aXRoIGZpeGVkIGd1dHRlcnMuXG4gICAqIDIuIEFsbG93cyB1cyB0byBtYW5pcHVsYXRlIGdyaWRzIHZlcnRpY2FsbHksIHdpdGggdGV4dC1sZXZlbCBwcm9wZXJ0aWVzLFxuICAgKiAgICBldGMuXG4gICAqIDMuIERlZmF1bHQgaXRlbSBhbGlnbm1lbnQgaXMgd2l0aCB0aGUgdG9wcyBvZiBlYWNoIG90aGVyLCBsaWtlIG1vc3RcbiAgICogICAgdHJhZGl0aW9uYWwgZ3JpZC9sYXlvdXQgc3lzdGVtcy5cbiAgICogNC4gQnkgZGVmYXVsdCwgYWxsIGxheW91dCBpdGVtcyBhcmUgZnVsbC13aWR0aCAobW9iaWxlIGZpcnN0KS5cbiAgICogNS4gR3V0dGVycyBwcm92aWRlZCBieSBsZWZ0IHBhZGRpbmc6XG4gICAqICAgIGh0dHA6Ly9jc3N3aXphcmRyeS5jb20vMjAxMS8wOC9idWlsZGluZy1iZXR0ZXItZ3JpZC1zeXN0ZW1zL1xuICAgKiA2LiBGYWxsYmFjayBmb3Igb2xkIElFcyBub3Qgc3VwcG9ydGluZyBgcmVtYCB2YWx1ZXMuXG4gICAqL1xuXG4uby1sYXlvdXRfX2l0ZW0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiBbMV0gKi9cbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiBbMl0gKi9cbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgLyogWzNdICovXG4gIHdpZHRoOiAxMDAlO1xuICAvKiBbNF0gKi9cbiAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICAvKiBbNV0gKi9cbiAgZm9udC1zaXplOiAxNnB4O1xuICAvKiBbNl0gKi9cbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4vKiBHdXR0ZXIgc2l6ZSBtb2RpZmllcnMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby1sYXlvdXQtLWZsdXNoIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5vLWxheW91dC0tZmx1c2ggPiAuby1sYXlvdXRfX2l0ZW0ge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbi5vLWxheW91dC0tdGlueSB7XG4gIG1hcmdpbi1sZWZ0OiAtNnB4O1xufVxuXG4uby1sYXlvdXQtLXRpbnkgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICBwYWRkaW5nLWxlZnQ6IDZweDtcbn1cblxuLm8tbGF5b3V0LS1zbWFsbCB7XG4gIG1hcmdpbi1sZWZ0OiAtMTJweDtcbn1cblxuLm8tbGF5b3V0LS1zbWFsbCA+IC5vLWxheW91dF9faXRlbSB7XG4gIHBhZGRpbmctbGVmdDogMTJweDtcbn1cblxuLm8tbGF5b3V0LS1sYXJnZSB7XG4gIG1hcmdpbi1sZWZ0OiAtNDhweDtcbn1cblxuLm8tbGF5b3V0LS1sYXJnZSA+IC5vLWxheW91dF9faXRlbSB7XG4gIHBhZGRpbmctbGVmdDogNDhweDtcbn1cblxuLm8tbGF5b3V0LS1odWdlIHtcbiAgbWFyZ2luLWxlZnQ6IC05NnB4O1xufVxuXG4uby1sYXlvdXQtLWh1Z2UgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICBwYWRkaW5nLWxlZnQ6IDk2cHg7XG59XG5cbi8qIFZlcnRpY2FsIGFsaWdubWVudCBtb2RpZmllcnMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFsaWduIGFsbCBncmlkIGl0ZW1zIHRvIHRoZSBtaWRkbGVzIG9mIGVhY2ggb3RoZXIuXG4gKi9cblxuLm8tbGF5b3V0LS1taWRkbGUgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4vKipcbiAqIEFsaWduIGFsbCBncmlkIGl0ZW1zIHRvIHRoZSBib3R0b21zIG9mIGVhY2ggb3RoZXIuXG4gKi9cblxuLm8tbGF5b3V0LS1ib3R0b20gPiAuby1sYXlvdXRfX2l0ZW0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuXG4vKipcbiAqIFN0cmV0Y2ggYWxsIGdyaWQgaXRlbXMgb2YgZWFjaCByb3cgdG8gaGF2ZSBhbiBlcXVhbC1oZWlnaHQuXG4gKiBQbGVhc2UgYmUgYXdhcmUgdGhhdCB0aGlzIG1vZGlmaWVyIGNsYXNzIGRvZXNuJ3QgdGFrZSBhbnkgZWZmZWN0IGluIElFOSBhbmRcbiAqIGJlbG93IGFuZCBvdGhlciBvbGRlciBicm93c2VycyBkdWUgdG8gdGhlIGxhY2sgb2YgYGRpc3BsYXk6IGZsZXhgIHN1cHBvcnQuXG4gKi9cblxuLm8tbGF5b3V0LS1zdHJldGNoIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uby1sYXlvdXQtLXN0cmV0Y2ggPiAuby1sYXlvdXRfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4vKiBGaWxsIG9yZGVyIG1vZGlmaWVycy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogRmlsbCB1cCB0aGUgbGF5b3V0IHN5c3RlbSBmcm9tIHRoZSBjZW50cmUuXG4gKi9cblxuLm8tbGF5b3V0LS1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5vLWxheW91dC0tY2VudGVyID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLyoqXG4gKiBGaWxsIHVwIHRoZSBsYXlvdXQgc3lzdGVtIGZyb20gdGhlIHJpZ2h0LWhhbmQgc2lkZS5cbiAqL1xuXG4uby1sYXlvdXQtLXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5vLWxheW91dC0tcmlnaHQgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4vKipcbiAqIEZpbGwgdXAgdGhlIGxheW91dCBzeXN0ZW0gZnJvbSB0aGUgbGVmdC1oYW5kIHNpZGUuIFRoaXMgd2lsbCBsaWtlbHkgb25seSBiZVxuICogbmVlZGVkIHdoZW4gdXNpbmcgaW4gY29uanVuY3Rpb24gd2l0aCBgLm8tbGF5b3V0LS1yZXZlcnNlYC5cbiAqL1xuXG4uby1sYXlvdXQtLWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4uby1sYXlvdXQtLWxlZnQgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4vKipcbiAqIFJldmVyc2UgdGhlIHJlbmRlcmVkIG9yZGVyIG9mIHRoZSBncmlkIHN5c3RlbS5cbiAqL1xuXG4uby1sYXlvdXQtLXJldmVyc2Uge1xuICBkaXJlY3Rpb246IHJ0bDtcbn1cblxuLm8tbGF5b3V0LS1yZXZlcnNlID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgZGlyZWN0aW9uOiBsdHI7XG59XG5cbi8qIEF1dG8td2lkdGhzIG1vZGlmaWVyLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDYXVzZSBsYXlvdXQgaXRlbXMgdG8gdGFrZSB1cCBhIG5vbi1leHBsaWNpdCBhbW91bnQgb2Ygd2lkdGguXG4gKi9cblxuLm8tbGF5b3V0LS1hdXRvID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBPYmplY3RzL1dyYXBwZXJcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5vLWxheW91dC0tZXF1YWwtaGVpZ2h0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLm8tbGF5b3V0LS1lcXVhbC1oZWlnaHQgLm8tbGF5b3V0X19pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLm8tbGF5b3V0LS1taWRkbGUgLm8tbGF5b3V0LS1lcXVhbC1oZWlnaHQge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uby1sYXlvdXQtLWJvdHRvbSAuby1sYXlvdXQtLWVxdWFsLWhlaWdodCB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuLm8tbGF5b3V0LS1yaWdodCAuby1sYXlvdXQtLWVxdWFsLWhlaWdodCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5vLWxheW91dC0tY2VudGVyIC5vLWxheW91dC0tZXF1YWwtaGVpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjTUVESUFcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUGxhY2UgYW55IGltYWdlLSBhbmQgdGV4dC1saWtlIGNvbnRlbnQgc2lkZS1ieS1zaWRlLCBhcyBwZXI6XG4gKiBodHRwOi8vd3d3LnN0dWJib3JuZWxsYS5vcmcvY29udGVudC8yMDEwLzA2LzI1L3RoZS1tZWRpYS1vYmplY3Qtc2F2ZXMtaHVuZHJlZHMtb2YtbGluZXMtb2YtY29kZVxuICovXG5cbi5vLW1lZGlhIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5vLW1lZGlhOmFmdGVyIHtcbiAgY29udGVudDogXCJcIiAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICBjbGVhcjogYm90aCAhaW1wb3J0YW50O1xufVxuXG4uby1tZWRpYV9faW1nIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbi1yaWdodDogMjRweDtcbn1cblxuLm8tbWVkaWFfX2ltZyA+IGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uby1tZWRpYV9fYm9keSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uby1tZWRpYV9fYm9keSxcbi5vLW1lZGlhX19ib2R5ID4gOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4vKiBTaXplIHZhcmlhbnRzLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBNb2RpZnkgdGhlIGFtb3VudCBvZiBzcGFjZSBiZXR3ZWVuIG91ciBpbWFnZSBhbmQgb3VyIHRleHQuIFdlIGFsc28gaGF2ZVxuICogcmV2ZXJzaWJsZSBvcHRpb25zIGZvciBhbGwgYXZhaWxhYmxlIHNpemVzLlxuICovXG5cbi8qIEd1dHRlcmxlc3MgbWVkaWEgb2JqZWN0cy5cbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLm8tbWVkaWEtLWZsdXNoID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5vLW1lZGlhLS10aW55ID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogNnB4O1xufVxuXG4uby1tZWRpYS0tdGlueS5vLW1lZGlhLS1yZXZlcnNlID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcbn1cblxuLm8tbWVkaWEtLXNtYWxsID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogMTJweDtcbn1cblxuLm8tbWVkaWEtLXNtYWxsLm8tbWVkaWEtLXJldmVyc2UgPiAuby1tZWRpYV9faW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tbGVmdDogMTJweDtcbn1cblxuLm8tbWVkaWEtLWxhcmdlID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogNDhweDtcbn1cblxuLm8tbWVkaWEtLWxhcmdlLm8tbWVkaWEtLXJldmVyc2UgPiAuby1tZWRpYV9faW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tbGVmdDogNDhweDtcbn1cblxuLm8tbWVkaWEtLWh1Z2UgPiAuby1tZWRpYV9faW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiA5NnB4O1xufVxuXG4uby1tZWRpYS0taHVnZS5vLW1lZGlhLS1yZXZlcnNlID4gLm8tbWVkaWFfX2ltZyB7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWxlZnQ6IDk2cHg7XG59XG5cbi8qIFJldmVyc2VkIG1lZGlhIG9iamVjdHMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby1tZWRpYS0tcmV2ZXJzZSA+IC5vLW1lZGlhX19pbWcge1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWxlZnQ6IDI0cHg7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjRkxBR1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBUaGUgZmxhZyBvYmplY3QgaXMgYSBkZXNpZ24gcGF0dGVybiBzaW1pbGFyIHRvIHRoZSBtZWRpYSBvYmplY3QsIGhvd2V2ZXIgaXRcbiAqIHV0aWxpc2VzIGBkaXNwbGF5OiB0YWJsZVstY2VsbF07YCB0byBnaXZlIHVzIGNvbnRyb2wgb3ZlciB0aGUgdmVydGljYWxcbiAqIGFsaWdubWVudHMgb2YgdGhlIHRleHQgYW5kIGltYWdlLlxuICpcbiAqIGh0dHA6Ly9jc3N3aXphcmRyeS5jb20vMjAxMy8wNS90aGUtZmxhZy1vYmplY3QvXG4gKlxuICogMS4gQWxsb3dzIHVzIHRvIGNvbnRyb2wgdmVydGljYWwgYWxpZ25tZW50cy5cbiAqIDIuIEZvcmNlIHRoZSBvYmplY3QgdG8gYmUgdGhlIGZ1bGwgd2lkdGggb2YgaXRzIHBhcmVudC4gQ29tYmluZWQgd2l0aCBbMV0sXG4gKiAgICB0aGlzIG1ha2VzIHRoZSBvYmplY3QgYmVoYXZlIGluIGEgcXVhc2ktYGRpc3BsYXk6IGJsb2NrO2AgbWFubmVyLlxuICogMy4gUmVzZXQgaW5oZXJpdGVkIGBib3JkZXItc3BhY2luZ2AgZGVjbGFyYXRpb25zLlxuICovXG5cbi5vLWZsYWcge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogWzFdICovXG4gIHdpZHRoOiAxMDAlO1xuICAvKiBbMl0gKi9cbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gIC8qIFszXSAqL1xufVxuXG4vKipcbiAgICogSXRlbXMgd2l0aGluIGEgZmxhZyBvYmplY3QuIFRoZXJlIHNob3VsZCBvbmx5IGV2ZXIgYmUgb25lIG9mIGVhY2guXG4gICAqXG4gICAqIDEuIERlZmF1bHQgdG8gYWxpZ25pbmcgY29udGVudCB0byB0aGVpciBtaWRkbGVzLlxuICAgKi9cblxuLm8tZmxhZ19faW1nLFxuLm8tZmxhZ19fYm9keSB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIC8qIFsxXSAqL1xufVxuXG4vKipcbiAgICogRmxhZyBpbWFnZXMgaGF2ZSBhIHNwYWNlIGJldHdlZW4gdGhlbSBhbmQgdGhlIGJvZHkgb2YgdGhlIG9iamVjdC5cbiAgICpcbiAgICogMS4gRm9yY2UgYC5mbGFnX19pbWdgIHRvIHRha2UgdXAgYXMgbGl0dGxlIHNwYWNlIGFzIHBvc3NpYmxlOlxuICAgKiAgICBodHRwczovL3BpeGVsc3ZzYnl0ZXMuY29tLzIwMTIvMDIvdGhpcy1jc3MtbGF5b3V0LWdyaWQtaXMtbm8taG9seS1ncmFpbC9cbiAgICovXG5cbi5vLWZsYWdfX2ltZyB7XG4gIHdpZHRoOiAxcHg7XG4gIC8qIFsxXSAqL1xuICBwYWRkaW5nLXJpZ2h0OiAyNHB4O1xuICAvKipcbiAgICAgKiAxLiBGaXhlcyBwcm9ibGVtIHdpdGggaW1hZ2VzIGRpc2FwcGVhcmluZy5cbiAgICAgKi9cbn1cblxuLm8tZmxhZ19faW1nID4gaW1nIHtcbiAgbWF4LXdpZHRoOiBub25lO1xuICAvKiBbMV0gKi9cbn1cblxuLyoqXG4gICAqIFRoZSBjb250YWluZXIgZm9yIHRoZSBtYWluIGNvbnRlbnQgb2YgdGhlIGZsYWcgb2JqZWN0LlxuICAgKlxuICAgKiAxLiBGb3JjZXMgdGhlIGAuZmxhZ19fYm9keWAgdG8gdGFrZSB1cCBhbGwgcmVtYWluaW5nIHNwYWNlLlxuICAgKi9cblxuLm8tZmxhZ19fYm9keSB7XG4gIHdpZHRoOiBhdXRvO1xuICAvKiBbMV0gKi9cbn1cblxuLm8tZmxhZ19fYm9keSxcbi5vLWZsYWdfX2JvZHkgPiA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi8qIFNpemUgdmFyaWFudHMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby1mbGFnLS1mbHVzaCA+IC5vLWZsYWdfX2ltZyB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMDtcbn1cblxuLm8tZmxhZy0tdGlueSA+IC5vLWZsYWdfX2ltZyB7XG4gIHBhZGRpbmctcmlnaHQ6IDZweDtcbn1cblxuLm8tZmxhZy0tdGlueS5vLWZsYWctLXJldmVyc2UgPiAuby1mbGFnX19pbWcge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDZweDtcbn1cblxuLm8tZmxhZy0tc21hbGwgPiAuby1mbGFnX19pbWcge1xuICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xufVxuXG4uby1mbGFnLS1zbWFsbC5vLWZsYWctLXJldmVyc2UgPiAuby1mbGFnX19pbWcge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDEycHg7XG59XG5cbi5vLWZsYWctLWxhcmdlID4gLm8tZmxhZ19faW1nIHtcbiAgcGFkZGluZy1yaWdodDogNDhweDtcbn1cblxuLm8tZmxhZy0tbGFyZ2Uuby1mbGFnLS1yZXZlcnNlID4gLm8tZmxhZ19faW1nIHtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiA0OHB4O1xufVxuXG4uby1mbGFnLS1odWdlID4gLm8tZmxhZ19faW1nIHtcbiAgcGFkZGluZy1yaWdodDogOTZweDtcbn1cblxuLm8tZmxhZy0taHVnZS5vLWZsYWctLXJldmVyc2UgPiAuby1mbGFnX19pbWcge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDk2cHg7XG59XG5cbi8qIFJldmVyc2VkIGZsYWcuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFN3YXAgdGhlIHJlbmRlcmVkIGRpcmVjdGlvbiBvZiB0aGUgb2JqZWN04oCmXG4gKiAyLiDigKZhbmQgcmVzZXQgaXQuXG4gKiAzLiBSZWFzc2lnbiBtYXJnaW5zIHRvIHRoZSBjb3JyZWN0IHNpZGVzLlxuICovXG5cbi5vLWZsYWctLXJldmVyc2Uge1xuICBkaXJlY3Rpb246IHJ0bDtcbiAgLyogWzFdICovXG59XG5cbi5vLWZsYWctLXJldmVyc2UgPiAuby1mbGFnX19pbWcsXG4uby1mbGFnLS1yZXZlcnNlID4gLm8tZmxhZ19fYm9keSB7XG4gIGRpcmVjdGlvbjogbHRyO1xuICAvKiBbMl0gKi9cbn1cblxuLm8tZmxhZy0tcmV2ZXJzZSA+IC5vLWZsYWdfX2ltZyB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIC8qIFszXSAqL1xuICBwYWRkaW5nLWxlZnQ6IDI0cHg7XG4gIC8qIFszXSAqL1xufVxuXG4vKiBBbGlnbm1lbnQgdmFyaWFudHMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFZlcnRpY2FsbHkgYWxpZ24gdGhlIGltYWdlLSBhbmQgYm9keS1jb250ZW50IGRpZmZlcmVudGx5LiBEZWZhdWx0cyB0byBtaWRkbGUuXG4gKi9cblxuLm8tZmxhZy0tdG9wID4gLm8tZmxhZ19faW1nLFxuLm8tZmxhZy0tdG9wID4gLm8tZmxhZ19fYm9keSB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi5vLWZsYWctLWJvdHRvbSA+IC5vLWZsYWdfX2ltZyxcbi5vLWZsYWctLWJvdHRvbSA+IC5vLWZsYWdfX2JvZHkge1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI0xJU1QtQkFSRVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBTdHJpcCBsaXN0LWxpa2UgYXBwZWFyYW5jZSBmcm9tIGxpc3RzIGJ5IHJlbW92aW5nIHRoZWlyIGJ1bGxldHMsIGFuZCBhbnlcbiAqIGluZGVudGF0aW9uLlxuICpcbiAqIE5vdGU6IERlY2xhcmluZyB0aGUgaXRlbS1jbGFzcyBtaWdodCBub3QgYmUgbmVjZXNzYXJ5IGV2ZXJ5d2hlcmUgYnV0XG4gKiBpcyBmb3IgZXhhbXBsZSBpbiA8ZGw+IGxpc3RzIGZvciB0aGUgPGRkPiBjaGlsZHMuXG4gKi9cblxuLm8tbGlzdC1iYXJlIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5vLWxpc3QtYmFyZV9faXRlbSB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI0xJU1QtSU5MSU5FXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFRoZSBsaXN0LWlubGluZSBvYmplY3Qgc2ltcGx5IGRpc3BsYXlzIGEgbGlzdCBvZiBpdGVtcyBpbiBvbmUgbGluZS5cbiAqL1xuXG4uby1saXN0LWlubGluZSB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4uby1saXN0LWlubGluZV9faXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNCTE9DS1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBTdGFja2VkIGltYWdlLXdpdGgtdGV4dCBvYmplY3QuIEEgc2ltcGxlIGFic3RyYWN0aW9uIHRvIGNvdmVyIGEgdmVyeSBjb21tb25seVxuICogb2NjdXJyaW5nIGRlc2lnbiBwYXR0ZXJuLlxuICovXG5cbi5vLWJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm8tYmxvY2tfX2ltZyB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gIC8qIFNpemUgdmFyaWFudHMuXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xufVxuXG4uby1ibG9jay0tZmx1c2ggPiAuby1ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLm8tYmxvY2stLXRpbnkgPiAuby1ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xufVxuXG4uby1ibG9jay0tc21hbGwgPiAuby1ibG9ja19faW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcbn1cblxuLm8tYmxvY2stLWxhcmdlID4gLm8tYmxvY2tfX2ltZyB7XG4gIG1hcmdpbi1ib3R0b206IDQ4cHg7XG59XG5cbi5vLWJsb2NrLS1odWdlID4gLm8tYmxvY2tfX2ltZyB7XG4gIG1hcmdpbi1ib3R0b206IDk2cHg7XG59XG5cbi5vLWJsb2NrX19ib2R5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qIEFsaWdubWVudCB2YXJpYW50cy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5vLWJsb2NrLS1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uby1ibG9jay0tbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBPYmplY3RzL0hlYWRpbmdcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBDb21wb25lbnRzL0J1dHRvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5jLWJ1dHRvbl9fYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgYm9yZGVyOiAzcHggc29saWQgIzAwMDAwMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHBhZGRpbmc6IDEycHggNDhweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbjogYWxsIC4ycztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gIC5jLWJ1dHRvbl9fYnV0dG9uIHtcbiAgICBtYXgtd2lkdGg6IDQ4MHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gIC5jLWJ1dHRvbl9fYnV0dG9uIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgd2lkdGg6IGluaGVyaXQ7XG4gIH1cbn1cblxuLmMtYnV0dG9uX19idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuXG4uYy1idXR0b25fX2J1dHRvbjpob3ZlciAuYy1idXR0b25fX3RleHQsXG4uYy1idXR0b25fX2J1dHRvbjpob3ZlciAuYy1idXR0b25fX2FuZ2xlLXJpZ2h0IHtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG5cbi5jLWJ1dHRvbl9fdGV4dCxcbi5jLWJ1dHRvbl9fYW5nbGUtcmlnaHQge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgdHJhbnNpdGlvbjogYWxsIC4ycztcbn1cblxuLmMtYnV0dG9uX190ZXh0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNzE0Mjg1NzE7XG59XG5cbi5jLWJ1dHRvbl9fYW5nbGUtcmlnaHQge1xuICBtYXJnaW4tbGVmdDogMTJweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMThweDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBsaW5lLWhlaWdodDogMS43MTQyODU3MTtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNDTEVBUkZJWFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBdHRhY2ggb3VyIGNsZWFyZml4IG1peGluIHRvIGEgdXRpbGl0eSBjbGFzcy5cbiAqL1xuXG4udS1jbGVhcmZpeDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCIgIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgY2xlYXI6IGJvdGggIWltcG9ydGFudDtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNXSURUSFNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogaW51aXRjc3MgZ2VuZXJhdGVzIGEgc2VyaWVzIG9mIHV0aWxpdHkgY2xhc3NlcyB0aGF0IGdpdmUgYSBmbHVpZCB3aWR0aCB0b1xuICogd2hpY2hldmVyIGVsZW1lbnQgdGhleeKAmXJlIGFwcGxpZWQsIGUuZy46XG4gKlxuICogICA8aW1nIHNyYz1cIlwiIGFsdD1cIlwiIGNsYXNzPVwidS0xLzJcIiAvPlxuICpcbiAqIFRoZXNlIGNsYXNzZXMgYXJlIG1vc3QgY29tbW9ubHkgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIG91ciBsYXlvdXQgc3lzdGVtLFxuICogZS5nLjpcbiAqXG4gKiAgIDxkaXYgY2xhc3M9XCJvLWxheW91dF9faXRlbSAgdS0xLzJcIj5cbiAqXG4gKiBCeSBkZWZhdWx0LCBpbnVpdGNzcyB3aWxsIGFsc28gZ2VuZXJhdGUgcmVzcG9uc2l2ZSB2YXJpYW50cyBvZiBlYWNoIG9mIHRoZXNlXG4gKiBjbGFzc2VzIGJ5IHVzaW5nIHlvdXIgU2FzcyBNUSBjb25maWd1cmF0aW9uLCBlLmcuOlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMSAgdS0xLzJAdGFibGV0ICB1LTEvM0BkZXNrdG9wXCI+XG4gKlxuICogT3B0aW9uYWxseSwgaW51aXRjc3MgY2FuIGdlbmVyYXRlIG9mZnNldCBjbGFzc2VzIHdoaWNoIGNhbiBwdXNoIGFuZCBwdWxsXG4gKiBlbGVtZW50cyBsZWZ0IGFuZCByaWdodCBieSBhIHNwZWNpZmllZCBhbW91bnQsIGUuZy46XG4gKlxuICogICA8ZGl2IGNsYXNzPVwiby1sYXlvdXRfX2l0ZW0gIHUtMi8zICB1LXB1bGwtMS8zXCI+XG4gKlxuICogVGhpcyBpcyB1c2VmdWwgZm9yIG1ha2luZyB2ZXJ5IGdyYW51bGFyIGNoYW5nZXMgdG8gdGhlIHJlbmRlcmVkIG9yZGVyIG9mXG4gKiBpdGVtcyBpbiBhIGxheW91dC5cbiAqXG4gKiBOLkIuIFRoaXMgb3B0aW9uIGlzIHR1cm5lZCBvZmYgYnkgZGVmYXVsdC5cbiAqL1xuXG4vKipcbiAqIEEgc2VyaWVzIG9mIHdpZHRoIGhlbHBlciBjbGFzc2VzIHRoYXQgeW91IGNhbiB1c2UgdG8gc2l6ZSB0aGluZ3MgbGlrZSBncmlkXG4gKiBzeXN0ZW1zLiBDbGFzc2VzIHRha2UgYSBmcmFjdGlvbi1saWtlIGZvcm1hdCAoZS5nLiBgLnUtMi8zYCkuIFVzZSB0aGVzZSBpblxuICogeW91ciBtYXJrdXA6XG4gKlxuICogPGRpdiBjbGFzcz1cInUtNy8xMlwiPlxuICpcbiAqIFRoZSBmb2xsb3dpbmcgd2lsbCBnZW5lcmF0ZSB3aWR0aHMgaGVscGVyIGNsYXNzZXMgYmFzZWQgb24gdGhlIGZyYWN0aW9uc1xuICogZGVmaW5lZCBpbiB0aGUgYCRpbnVpdC1mcmFjdGlvbnNgIGxpc3QuXG4gKi9cblxuLnUtMVxcLzEge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xufVxuXG4udS0xXFwvMiB7XG4gIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbn1cblxuLnUtMlxcLzIge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xufVxuXG4udS0xXFwvMyB7XG4gIHdpZHRoOiAzMy4zMzMzMzMzMyUgIWltcG9ydGFudDtcbn1cblxuLnUtMlxcLzMge1xuICB3aWR0aDogNjYuNjY2NjY2NjclICFpbXBvcnRhbnQ7XG59XG5cbi51LTNcXC8zIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbn1cblxuLnUtMVxcLzQge1xuICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7XG59XG5cbi51LTJcXC80IHtcbiAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xufVxuXG4udS0zXFwvNCB7XG4gIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbn1cblxuLnUtNFxcLzQge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xufVxuXG4udS0xXFwvNSB7XG4gIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbn1cblxuLnUtMlxcLzUge1xuICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7XG59XG5cbi51LTNcXC81IHtcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xufVxuXG4udS00XFwvNSB7XG4gIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbn1cblxuLnUtNVxcLzUge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIElmIHdl4oCZcmUgdXNpbmcgU2Fzcy1NUSwgYXV0b21hdGljYWxseSBnZW5lcmF0ZSBncmlkIHN5c3RlbShzKSBmb3IgZWFjaCBvZiBvdXJcbiAqIGRlZmluZWQgYnJlYWtwb2ludHMsIGFuZCBnaXZlIHRoZW0gYSBSZXNwb25zaXZlIFN1ZmZpeCwgZS5nLjpcbiAqXG4gKiA8ZGl2IGNsYXNzPVwidS0zLzEyQG1vYmlsZVwiPlxuICovXG5cbkBtZWRpYSAobWluLXdpZHRoOiAyMGVtKSB7XG4gIC51LTFcXC8xXFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMVxcLzJcXEBtb2JpbGUge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTJcXC8yXFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMVxcLzNcXEBtb2JpbGUge1xuICAgIHdpZHRoOiAzMy4zMzMzMzMzMyUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTJcXC8zXFxAbW9iaWxlIHtcbiAgICB3aWR0aDogNjYuNjY2NjY2NjclICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0zXFwvM1xcQG1vYmlsZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC80XFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0yXFwvNFxcQG1vYmlsZSB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtM1xcLzRcXEBtb2JpbGUge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTRcXC80XFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMVxcLzVcXEBtb2JpbGUge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTJcXC81XFxAbW9iaWxlIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0zXFwvNVxcQG1vYmlsZSB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtNFxcLzVcXEBtb2JpbGUge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTVcXC81XFxAbW9iaWxlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gIC51LTFcXC8xXFxAdGFibGV0IHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMVxcLzJcXEB0YWJsZXQge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTJcXC8yXFxAdGFibGV0IHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMVxcLzNcXEB0YWJsZXQge1xuICAgIHdpZHRoOiAzMy4zMzMzMzMzMyUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTJcXC8zXFxAdGFibGV0IHtcbiAgICB3aWR0aDogNjYuNjY2NjY2NjclICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0zXFwvM1xcQHRhYmxldCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC80XFxAdGFibGV0IHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0yXFwvNFxcQHRhYmxldCB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtM1xcLzRcXEB0YWJsZXQge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTRcXC80XFxAdGFibGV0IHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMVxcLzVcXEB0YWJsZXQge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTJcXC81XFxAdGFibGV0IHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0zXFwvNVxcQHRhYmxldCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtNFxcLzVcXEB0YWJsZXQge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTVcXC81XFxAdGFibGV0IHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gIC51LTFcXC8xXFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC8yXFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMlxcLzJcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMVxcLzNcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogMzMuMzMzMzMzMzMlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0yXFwvM1xcQGRlc2t0b3Age1xuICAgIHdpZHRoOiA2Ni42NjY2NjY2NyUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTNcXC8zXFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC80XFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMlxcLzRcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0zXFwvNFxcQGRlc2t0b3Age1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTRcXC80XFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC81XFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMlxcLzVcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0zXFwvNVxcQGRlc2t0b3Age1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTRcXC81XFxAZGVza3RvcCB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtNVxcLzVcXEBkZXNrdG9wIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4MS4yNWVtKSB7XG4gIC51LTFcXC8xXFxAd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC8yXFxAd2lkZSB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMlxcLzJcXEB3aWRlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMVxcLzNcXEB3aWRlIHtcbiAgICB3aWR0aDogMzMuMzMzMzMzMzMlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0yXFwvM1xcQHdpZGUge1xuICAgIHdpZHRoOiA2Ni42NjY2NjY2NyUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTNcXC8zXFxAd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC80XFxAd2lkZSB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMlxcLzRcXEB3aWRlIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0zXFwvNFxcQHdpZGUge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTRcXC80XFxAd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC81XFxAd2lkZSB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMlxcLzVcXEB3aWRlIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0zXFwvNVxcQHdpZGUge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTRcXC81XFxAd2lkZSB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtNVxcLzVcXEB3aWRlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDBlbSkge1xuICAudS0xXFwvMVxcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC8yXFxAdS13aWRlIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0yXFwvMlxcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC8zXFxAdS13aWRlIHtcbiAgICB3aWR0aDogMzMuMzMzMzMzMzMlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0yXFwvM1xcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDY2LjY2NjY2NjY3JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtM1xcLzNcXEB1LXdpZGUge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0xXFwvNFxcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtMlxcLzRcXEB1LXdpZGUge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTNcXC80XFxAdS13aWRlIHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS00XFwvNFxcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTFcXC81XFxAdS13aWRlIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS0yXFwvNVxcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtM1xcLzVcXEB1LXdpZGUge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LTRcXC81XFxAdS13aWRlIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS01XFwvNVxcQHUtd2lkZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI1NQQUNJTkdTXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFV0aWxpdHkgY2xhc3NlcyB0byBwdXQgc3BlY2lmaWMgc3BhY2luZyB2YWx1ZXMgb250byBlbGVtZW50cy4gVGhlIGJlbG93IGxvb3BcbiAqIHdpbGwgZ2VuZXJhdGUgdXMgYSBzdWl0ZSBvZiBjbGFzc2VzIGxpa2U6XG4gKlxuICogICAudS1tYXJnaW4tdG9wIHt9XG4gKiAgIC51LXBhZGRpbmctbGVmdC1sYXJnZSB7fVxuICogICAudS1tYXJnaW4tcmlnaHQtc21hbGwge31cbiAqICAgLnUtcGFkZGluZyB7fVxuICogICAudS1wYWRkaW5nLXJpZ2h0LW5vbmUge31cbiAqICAgLnUtcGFkZGluZy1ob3Jpem9udGFsIHt9XG4gKiAgIC51LXBhZGRpbmctdmVydGljYWwtc21hbGwge31cbiAqL1xuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBzdHJpbmctcXVvdGVzICovXG5cbi51LXBhZGRpbmcge1xuICBwYWRkaW5nOiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdGlueSB7XG4gIHBhZGRpbmc6IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXNtYWxsIHtcbiAgcGFkZGluZzogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWxhcmdlIHtcbiAgcGFkZGluZzogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWh1Z2Uge1xuICBwYWRkaW5nOiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctbm9uZSB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy10b3Age1xuICBwYWRkaW5nLXRvcDogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXRvcC10aW55IHtcbiAgcGFkZGluZy10b3A6IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXRvcC1zbWFsbCB7XG4gIHBhZGRpbmctdG9wOiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdG9wLWxhcmdlIHtcbiAgcGFkZGluZy10b3A6IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy10b3AtaHVnZSB7XG4gIHBhZGRpbmctdG9wOiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdG9wLW5vbmUge1xuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXJpZ2h0IHtcbiAgcGFkZGluZy1yaWdodDogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXJpZ2h0LXRpbnkge1xuICBwYWRkaW5nLXJpZ2h0OiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1yaWdodC1zbWFsbCB7XG4gIHBhZGRpbmctcmlnaHQ6IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1yaWdodC1sYXJnZSB7XG4gIHBhZGRpbmctcmlnaHQ6IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1yaWdodC1odWdlIHtcbiAgcGFkZGluZy1yaWdodDogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXJpZ2h0LW5vbmUge1xuICBwYWRkaW5nLXJpZ2h0OiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctYm90dG9tIHtcbiAgcGFkZGluZy1ib3R0b206IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ib3R0b20tdGlueSB7XG4gIHBhZGRpbmctYm90dG9tOiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1ib3R0b20tc21hbGwge1xuICBwYWRkaW5nLWJvdHRvbTogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWJvdHRvbS1sYXJnZSB7XG4gIHBhZGRpbmctYm90dG9tOiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctYm90dG9tLWh1Z2Uge1xuICBwYWRkaW5nLWJvdHRvbTogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWJvdHRvbS1ub25lIHtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1sZWZ0IHtcbiAgcGFkZGluZy1sZWZ0OiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctbGVmdC10aW55IHtcbiAgcGFkZGluZy1sZWZ0OiA2cHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy1sZWZ0LXNtYWxsIHtcbiAgcGFkZGluZy1sZWZ0OiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctbGVmdC1sYXJnZSB7XG4gIHBhZGRpbmctbGVmdDogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWxlZnQtaHVnZSB7XG4gIHBhZGRpbmctbGVmdDogOTZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWxlZnQtbm9uZSB7XG4gIHBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWhvcml6b250YWwge1xuICBwYWRkaW5nLWxlZnQ6IDI0cHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWhvcml6b250YWwtdGlueSB7XG4gIHBhZGRpbmctbGVmdDogNnB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWhvcml6b250YWwtc21hbGwge1xuICBwYWRkaW5nLWxlZnQ6IDEycHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWhvcml6b250YWwtbGFyZ2Uge1xuICBwYWRkaW5nLWxlZnQ6IDQ4cHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLWhvcml6b250YWwtaHVnZSB7XG4gIHBhZGRpbmctbGVmdDogOTZweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctaG9yaXpvbnRhbC1ub25lIHtcbiAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy12ZXJ0aWNhbCB7XG4gIHBhZGRpbmctdG9wOiAyNHB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdmVydGljYWwtdGlueSB7XG4gIHBhZGRpbmctdG9wOiA2cHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1wYWRkaW5nLXZlcnRpY2FsLXNtYWxsIHtcbiAgcGFkZGluZy10b3A6IDEycHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtcGFkZGluZy12ZXJ0aWNhbC1sYXJnZSB7XG4gIHBhZGRpbmctdG9wOiA0OHB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdmVydGljYWwtaHVnZSB7XG4gIHBhZGRpbmctdG9wOiA5NnB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LXBhZGRpbmctdmVydGljYWwtbm9uZSB7XG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbiB7XG4gIG1hcmdpbjogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tdGlueSB7XG4gIG1hcmdpbjogNnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1zbWFsbCB7XG4gIG1hcmdpbjogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tbGFyZ2Uge1xuICBtYXJnaW46IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWh1Z2Uge1xuICBtYXJnaW46IDk2cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLW5vbmUge1xuICBtYXJnaW46IDAgIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXRvcCB7XG4gIG1hcmdpbi10b3A6IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXRvcC10aW55IHtcbiAgbWFyZ2luLXRvcDogNnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi10b3Atc21hbGwge1xuICBtYXJnaW4tdG9wOiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi10b3AtbGFyZ2Uge1xuICBtYXJnaW4tdG9wOiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi10b3AtaHVnZSB7XG4gIG1hcmdpbi10b3A6IDk2cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXRvcC1ub25lIHtcbiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tcmlnaHQge1xuICBtYXJnaW4tcmlnaHQ6IDI0cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXJpZ2h0LXRpbnkge1xuICBtYXJnaW4tcmlnaHQ6IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tcmlnaHQtc21hbGwge1xuICBtYXJnaW4tcmlnaHQ6IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXJpZ2h0LWxhcmdlIHtcbiAgbWFyZ2luLXJpZ2h0OiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1yaWdodC1odWdlIHtcbiAgbWFyZ2luLXJpZ2h0OiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1yaWdodC1ub25lIHtcbiAgbWFyZ2luLXJpZ2h0OiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1ib3R0b20ge1xuICBtYXJnaW4tYm90dG9tOiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1ib3R0b20tdGlueSB7XG4gIG1hcmdpbi1ib3R0b206IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tYm90dG9tLXNtYWxsIHtcbiAgbWFyZ2luLWJvdHRvbTogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tYm90dG9tLWxhcmdlIHtcbiAgbWFyZ2luLWJvdHRvbTogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tYm90dG9tLWh1Z2Uge1xuICBtYXJnaW4tYm90dG9tOiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1ib3R0b20tbm9uZSB7XG4gIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWxlZnQge1xuICBtYXJnaW4tbGVmdDogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tbGVmdC10aW55IHtcbiAgbWFyZ2luLWxlZnQ6IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tbGVmdC1zbWFsbCB7XG4gIG1hcmdpbi1sZWZ0OiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1sZWZ0LWxhcmdlIHtcbiAgbWFyZ2luLWxlZnQ6IDQ4cHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLWxlZnQtaHVnZSB7XG4gIG1hcmdpbi1sZWZ0OiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1sZWZ0LW5vbmUge1xuICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4taG9yaXpvbnRhbCB7XG4gIG1hcmdpbi1sZWZ0OiAyNHB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1yaWdodDogMjRweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4taG9yaXpvbnRhbC10aW55IHtcbiAgbWFyZ2luLWxlZnQ6IDZweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4taG9yaXpvbnRhbC1zbWFsbCB7XG4gIG1hcmdpbi1sZWZ0OiAxMnB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1yaWdodDogMTJweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4taG9yaXpvbnRhbC1sYXJnZSB7XG4gIG1hcmdpbi1sZWZ0OiA0OHB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1yaWdodDogNDhweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4taG9yaXpvbnRhbC1odWdlIHtcbiAgbWFyZ2luLWxlZnQ6IDk2cHggIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi1ob3Jpem9udGFsLW5vbmUge1xuICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXZlcnRpY2FsIHtcbiAgbWFyZ2luLXRvcDogMjRweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi12ZXJ0aWNhbC10aW55IHtcbiAgbWFyZ2luLXRvcDogNnB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1ib3R0b206IDZweCAhaW1wb3J0YW50O1xufVxuXG4udS1tYXJnaW4tdmVydGljYWwtc21hbGwge1xuICBtYXJnaW4tdG9wOiAxMnB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1ib3R0b206IDEycHggIWltcG9ydGFudDtcbn1cblxuLnUtbWFyZ2luLXZlcnRpY2FsLWxhcmdlIHtcbiAgbWFyZ2luLXRvcDogNDhweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiA0OHB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi12ZXJ0aWNhbC1odWdlIHtcbiAgbWFyZ2luLXRvcDogOTZweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiA5NnB4ICFpbXBvcnRhbnQ7XG59XG5cbi51LW1hcmdpbi12ZXJ0aWNhbC1ub25lIHtcbiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi8qIHN0eWxlbGludC1lbmFibGUgc3RyaW5nLXF1b3RlcyAqL1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI1JFU1BPTlNJVkUtU1BBQ0lOR1NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogVXRpbGl0eSBjbGFzc2VzIGVuaGFuY2luZyB0aGUgbm9ybWFsIHNwYWNpbmcgY2xhc3NlcyBieSBhZGRpbmcgcmVzcG9uc2l2ZW5lc3NcbiAqIHRvIHRoZW0uIEJ5IGRlZmF1bHQgdGhpcyBicmluZ3MgdXMgdGhlIGZvbGxvd2luZyBjbGFzc2VzOlxuICpcbiAqICAgLnUtbWFyZ2luLWJvdHRvbS1ub25lQG1vYmlsZSB7fVxuICogICAudS1tYXJnaW4tYm90dG9tLW5vbmVAdGFibGV0IHt9XG4gKiAgIC51LW1hcmdpbi1ib3R0b20tbm9uZUBkZXNrdG9wIHt9XG4gKiAgIC51LW1hcmdpbi1ib3R0b20tbm9uZUB3aWRlIHt9XG4gKlxuICogQnV0IHdlIGNhbiBhZmZlY3QgdGhlIGNsYXNzZXMgdGhhdCBnZXQgZ2VuZXJhdGVkIGJ5IGFsdGVyaW5nIHRoZSBhcHByb3ByaWF0ZVxuICogU2FzcyBtYXBzIGJlbG93LlxuICovXG5cbi8qIHN0eWxlbGludC1kaXNhYmxlIG1heC1uZXN0aW5nLWRlcHRoICovXG5cbkBtZWRpYSAobWluLXdpZHRoOiAyMGVtKSB7XG4gIC51LW1hcmdpbi1ib3R0b20tbm9uZVxcQG1vYmlsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gIC51LW1hcmdpbi1ib3R0b20tbm9uZVxcQHRhYmxldCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gIC51LW1hcmdpbi1ib3R0b20tbm9uZVxcQGRlc2t0b3Age1xuICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODEuMjVlbSkge1xuICAudS1tYXJnaW4tYm90dG9tLW5vbmVcXEB3aWRlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMGVtKSB7XG4gIC51LW1hcmdpbi1ib3R0b20tbm9uZVxcQHUtd2lkZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG59XG5cbi8qIHN0eWxlbGludC1lbmFibGUgbWF4LW5lc3RpbmctZGVwdGggKi9cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNQUklOVFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBWZXJ5IGNydWRlLCByZXNldC1saWtlIHN0eWxlcyB0YWtlbiBmcm9tIHRoZSBIVE1MNSBCb2lsZXJwbGF0ZTpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9oNWJwL2h0bWw1LWJvaWxlcnBsYXRlL2Jsb2IvNS4zLjAvZGlzdC9kb2MvY3NzLm1kI3ByaW50LXN0eWxlc1xuICogaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvYmxvYi9tYXN0ZXIvZGlzdC9jc3MvbWFpbi5jc3MjTDIwNS1MMjgyXG4gKi9cblxuQG1lZGlhIHByaW50IHtcbiAgLyoqXG4gICAqIDEuIEJsYWNrIHByaW50cyBmYXN0ZXI6IGh0dHA6Ly93d3cuc2FuYmVpamkuY29tL2FyY2hpdmVzLzk1M1xuICAgKi9cblxuICAqLFxuICAqOmJlZm9yZSxcbiAgKjphZnRlcixcbiAgKjpmaXJzdC1sZXR0ZXIsXG4gICo6Zmlyc3QtbGluZSB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgIC8qIFsxXSAqL1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICB9XG5cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuXG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICB9XG5cbiAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgfVxuXG4gIC8qKlxuICAgKiBEb24ndCBzaG93IGxpbmtzIHRoYXQgYXJlIGZyYWdtZW50IGlkZW50aWZpZXJzLCBvciB1c2UgdGhlIGBqYXZhc2NyaXB0OmBcbiAgICogcHNldWRvIHByb3RvY29sLlxuICAgKi9cblxuICBhW2hyZWZePVwiI1wiXTphZnRlcixcbiAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICB9XG5cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcmludGluZyBUYWJsZXM6IGh0dHA6Ly9jc3MtZGlzY3Vzcy5pbmN1dGlvLmNvbS93aWtpL1ByaW50aW5nX1RhYmxlc1xuICAgKi9cblxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xuICB9XG5cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG5cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7XG4gIH1cblxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjSElERVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBIaWRlIG9ubHkgdmlzdWFsbHksIGJ1dCBoYXZlIGl0IGF2YWlsYWJsZSBmb3Igc2NyZWVuIHJlYWRlcnM6XG4gKiBodHRwOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XG4gKi9cblxuLnUtaGlkZGVuLXZpc3VhbGx5IHtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCkgIWltcG9ydGFudDtcbiAgY2xpcC1wYXRoOiBpbnNldCg1MCUpICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMXB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbjogLTFweCAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDtcbiAgd2lkdGg6IDFweCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEhpZGUgdmlzdWFsbHkgYW5kIGZyb20gc2NyZWVuIHJlYWRlcnMuXG4gKi9cblxuLnUtaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgVXRpbGl0aWVzL0hpZGUgUmVzcG9uc2l2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuQG1lZGlhIChtaW4td2lkdGg6IDIwZW0pIHtcbiAgLnUtaGlkZGVuXFxAbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zaG93blxcQG1vYmlsZSB7XG4gICAgZGlzcGxheTogaW5oZXJpdCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtZGlzcGxheS1ibG9jay51LXNob3duXFxAbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtZGlzcGxheS1pbmxpbmUtYmxvY2sudS1zaG93blxcQG1vYmlsZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1kaXNwbGF5LWlubGluZS51LXNob3duXFxAbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDYuMjVlbSkge1xuICAudS1oaWRkZW5cXEB0YWJsZXQge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNob3duXFxAdGFibGV0IHtcbiAgICBkaXNwbGF5OiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1kaXNwbGF5LWJsb2NrLnUtc2hvd25cXEB0YWJsZXQge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1kaXNwbGF5LWlubGluZS1ibG9jay51LXNob3duXFxAdGFibGV0IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWRpc3BsYXktaW5saW5lLnUtc2hvd25cXEB0YWJsZXQge1xuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gIC51LWhpZGRlblxcQGRlc2t0b3Age1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNob3duXFxAZGVza3RvcCB7XG4gICAgZGlzcGxheTogaW5oZXJpdCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtZGlzcGxheS1ibG9jay51LXNob3duXFxAZGVza3RvcCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWRpc3BsYXktaW5saW5lLWJsb2NrLnUtc2hvd25cXEBkZXNrdG9wIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWRpc3BsYXktaW5saW5lLnUtc2hvd25cXEBkZXNrdG9wIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODEuMjVlbSkge1xuICAudS1oaWRkZW5cXEB3aWRlIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zaG93blxcQHdpZGUge1xuICAgIGRpc3BsYXk6IGluaGVyaXQgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWRpc3BsYXktYmxvY2sudS1zaG93blxcQHdpZGUge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1kaXNwbGF5LWlubGluZS1ibG9jay51LXNob3duXFxAd2lkZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1kaXNwbGF5LWlubGluZS51LXNob3duXFxAd2lkZSB7XG4gICAgZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMGVtKSB7XG4gIC51LWhpZGRlblxcQHUtd2lkZSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc2hvd25cXEB1LXdpZGUge1xuICAgIGRpc3BsYXk6IGluaGVyaXQgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWRpc3BsYXktYmxvY2sudS1zaG93blxcQHUtd2lkZSB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWRpc3BsYXktaW5saW5lLWJsb2NrLnUtc2hvd25cXEB1LXdpZGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtZGlzcGxheS1pbmxpbmUudS1zaG93blxcQHUtd2lkZSB7XG4gICAgZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFV0aWxpdGllcy9Db25zdHJhaW5cbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi51LWNvbnN0cmFpbi0taHVnZSB7XG4gIG1heC13aWR0aDogMTQwMHB4O1xufVxuXG4udS1jb25zdHJhaW4tLWxhcmdlIHtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG59XG5cbi51LWNvbnN0cmFpbiB7XG4gIG1heC13aWR0aDogMTAyNHB4O1xufVxuXG4udS1jb25zdHJhaW4tLXNtYWxsIHtcbiAgbWF4LXdpZHRoOiA3NjhweDtcbn1cblxuLnUtY29uc3RyYWluLS10aW55IHtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFV0aWxpdGllcy9GbGV4XG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4udS1mbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnUtZmxleC0tY2VudGVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi51LWZsZXgtLXJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLnUtZmxleC0tY2VudGVyLW1pZGRsZSB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4udS1mbGV4LS1ib3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09XG4gICBTaGFtZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vbWFpbi5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFNldHRpbmcvVHJhbnNpdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG4kYmFzZS10cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2UtaW4tb3V0O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL19zZXR0aW5ncy50cmFuc2l0aW9ucy5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFNldHRpbmdzL01lYXN1cmVtZW50c1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuJGhlYWRlci1oZWlnaHQtbW9iaWxlOiA2MHB4O1xuJGhlYWRlci1oZWlnaHQtdGFibGV0OiA5MHB4O1xuJGhlYWRlci1oZWlnaHQtZGVza3RvcDogMTEwcHg7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3NldHRpbmdzLm1lYXN1cmVtZW50cy5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFRoZSBCbGFjayBUaWUgRm9udCBpcyBjb21tZXJjaWFsIHNvZnR3YXJlLiBQbGVhc2UgZG8gbm90IGRpc3RyaWJ1dGUuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdCbGFjayBUaWUnO1xuICAgIHNyYzogdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL3NvbGlkL0JsYWNrVGllLVNvbGlkLXdlYmZvbnQuZW90P3Y9MS4wLjAnKTtcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9zb2xpZC9CbGFja1RpZS1Tb2xpZC13ZWJmb250LmVvdD8jaWVmaXgmdj0xLjAuMCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9zb2xpZC9CbGFja1RpZS1Tb2xpZC13ZWJmb250LndvZmYyP3Y9MS4wLjAnKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvc29saWQvQmxhY2tUaWUtU29saWQtd2ViZm9udC53b2ZmP3Y9MS4wLjAnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9zb2xpZC9CbGFja1RpZS1Tb2xpZC13ZWJmb250LnR0Zj92PTEuMC4wJykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgICAgICAgdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL3NvbGlkL0JsYWNrVGllLVNvbGlkLXdlYmZvbnQuc3ZnP3Y9MS4wLjAjYmxhY2tfdGllc29saWQnKSBmb3JtYXQoJ3N2ZycpO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdCbGFjayBUaWUnO1xuICAgIHNyYzogdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL2JvbGQvQmxhY2tUaWUtQm9sZC13ZWJmb250LmVvdD92PTEuMC4wJyk7XG4gICAgc3JjOiB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvYm9sZC9CbGFja1RpZS1Cb2xkLXdlYmZvbnQuZW90PyNpZWZpeCZ2PTEuMC4wJykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICAgdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL2JvbGQvQmxhY2tUaWUtQm9sZC13ZWJmb250LndvZmYyP3Y9MS4wLjAnKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvYm9sZC9CbGFja1RpZS1Cb2xkLXdlYmZvbnQud29mZj92PTEuMC4wJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvYm9sZC9CbGFja1RpZS1Cb2xkLXdlYmZvbnQudHRmP3Y9MS4wLjAnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgICB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvYm9sZC9CbGFja1RpZS1Cb2xkLXdlYmZvbnQuc3ZnP3Y9MS4wLjAjYmxhY2tfdGllYm9sZCcpIGZvcm1hdCgnc3ZnJyk7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0JsYWNrIFRpZSc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvcmVndWxhci9CbGFja1RpZS1SZWd1bGFyLXdlYmZvbnQuZW90P3Y9MS4wLjAnKTtcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjAnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvcmVndWxhci9CbGFja1RpZS1SZWd1bGFyLXdlYmZvbnQud29mZjI/dj0xLjAuMCcpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgIHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC53b2ZmP3Y9MS4wLjAnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC50dGY/dj0xLjAuMCcpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICAgIHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9yZWd1bGFyL0JsYWNrVGllLVJlZ3VsYXItd2ViZm9udC5zdmc/dj0xLjAuMCNibGFja190aWVyZWd1bGFyJykgZm9ybWF0KCdzdmcnKTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnQmxhY2sgVGllJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9saWdodC9CbGFja1RpZS1MaWdodC13ZWJmb250LmVvdD92PTEuMC4wJyk7XG4gICAgc3JjOiB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvbGlnaHQvQmxhY2tUaWUtTGlnaHQtd2ViZm9udC5lb3Q/I2llZml4JnY9MS4wLjAnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvbGlnaHQvQmxhY2tUaWUtTGlnaHQtd2ViZm9udC53b2ZmMj92PTEuMC4wJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL2xpZ2h0L0JsYWNrVGllLUxpZ2h0LXdlYmZvbnQud29mZj92PTEuMC4wJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvbGlnaHQvQmxhY2tUaWUtTGlnaHQtd2ViZm9udC50dGY/dj0xLjAuMCcpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICAgIHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9saWdodC9CbGFja1RpZS1MaWdodC13ZWJmb250LnN2Zz92PTEuMC4wI2JsYWNrX3RpZWxpZ2h0JykgZm9ybWF0KCdzdmcnKTtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnRm9udCBBd2Vzb21lIEJyYW5kcyc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9ibGFjay10aWUvZm9udHMvYnJhbmRzL0ZvbnRBd2Vzb21lQnJhbmRzLVJlZ3VsYXItd2ViZm9udC5lb3Q/dj0xLjAuMCcpO1xuICAgIHNyYzogdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL2JyYW5kcy9Gb250QXdlc29tZUJyYW5kcy1SZWd1bGFyLXdlYmZvbnQuZW90PyNpZWZpeCZ2PTEuMC4wJykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgIHVybCgnL2ZvbnRzL2JsYWNrLXRpZS9mb250cy9icmFuZHMvRm9udEF3ZXNvbWVCcmFuZHMtUmVndWxhci13ZWJmb250LndvZmYyP3Y9MS4wLjAnKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL2JyYW5kcy9Gb250QXdlc29tZUJyYW5kcy1SZWd1bGFyLXdlYmZvbnQud29mZj92PTEuMC4wJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL2JyYW5kcy9Gb250QXdlc29tZUJyYW5kcy1SZWd1bGFyLXdlYmZvbnQudHRmP3Y9MS4wLjAnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgdXJsKCcvZm9udHMvYmxhY2stdGllL2ZvbnRzL2JyYW5kcy9Gb250QXdlc29tZUJyYW5kcy1SZWd1bGFyLXdlYmZvbnQuc3ZnP3Y9MS4wLjAjZm9udF9hd2Vzb21lX2JyYW5kc3JlZ3VsYXInKSBmb3JtYXQoJ3N2ZycpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuLmJ0cyxcbi5idGIsXG4uYnRyLFxuLmJ0bCxcbi5mYWIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250OiBub3JtYWwgbm9ybWFsIG5vcm1hbCAxNHB4LzEgXCJCbGFjayBUaWVcIjtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgdmVydGljYWwtYWxpZ246IC0xNC4yODU3MTQyOSU7XG4gICAgdGV4dC1yZW5kZXJpbmc6IGF1dG87XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcbn1cbi5idHMge1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG4uYnRiIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuLmJ0bCB7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbn1cbi5mYWIge1xuICAgIGZvbnQtZmFtaWx5OiBcIkZvbnQgQXdlc29tZSBCcmFuZHNcIjtcbn1cbi8qIG1ha2VzIHRoZSBmb250IDI1JSBzbWFsbGVyIHJlbGF0aXZlIHRvIHRoZSBpY29uIGNvbnRhaW5lciAqL1xuLmJ0LXNtIHtcbiAgICBmb250LXNpemU6IC43ZW07XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuLyogbWFrZXMgdGhlIGZvbnQgMzMlIGxhcmdlciByZWxhdGl2ZSB0byB0aGUgaWNvbiBjb250YWluZXIgKi9cbi5idC1sZyB7XG4gICAgZm9udC1zaXplOiAxLjMzMzMzMzMzZW07XG4gICAgbGluZS1oZWlnaHQ6IDAuNzVlbTtcbn1cbi5idC0yeCB7XG4gICAgZm9udC1zaXplOiAyZW07XG59XG4uYnQtM3gge1xuICAgIGZvbnQtc2l6ZTogM2VtO1xufVxuLmJ0LTR4IHtcbiAgICBmb250LXNpemU6IDRlbTtcbn1cbi5idC01eCB7XG4gICAgZm9udC1zaXplOiA1ZW07XG59XG4uYnQtbGcsXG4uYnQtMngsXG4uYnQtM3gsXG4uYnQtNHgsXG4uYnQtNXgge1xuICAgIHZlcnRpY2FsLWFsaWduOiAtMzAlO1xufVxuLmJ0LWZ3IHtcbiAgICB3aWR0aDogMS4yODU3MTQyOWVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5idC11bCB7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAyLjE0Mjg1NzE0ZW07XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuLmJ0LXVsID4gbGkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5idC1saSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC0yLjE0Mjg1NzE0ZW07XG4gICAgd2lkdGg6IDIuMTQyODU3MTRlbTtcbiAgICB0b3A6IDAuMTQyODU3MTRlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uYnQtbGkuYnQtbGcge1xuICAgIGxlZnQ6IC0yZW07XG59XG4uYnQtYm9yZGVyIHtcbiAgICBwYWRkaW5nOiAuMmVtO1xuICAgIGJvcmRlcjogc29saWQgMC4wOGVtICNlZWVlZWU7XG4gICAgYm9yZGVyLXJhZGl1czogLjFlbTtcbn1cbi5wdWxsLXJpZ2h0IHtcbiAgICBmbG9hdDogcmlnaHQ7XG59XG4ucHVsbC1sZWZ0IHtcbiAgICBmbG9hdDogbGVmdDtcbn1cbi5idHMucHVsbC1sZWZ0LFxuLmJ0Yi5wdWxsLWxlZnQsXG4uYnRyLnB1bGwtbGVmdCxcbi5idGwucHVsbC1sZWZ0LFxuLmZhYi5wdWxsLWxlZnQge1xuICAgIG1hcmdpbi1yaWdodDogLjNlbTtcbn1cbi5idHMucHVsbC1yaWdodCxcbi5idGIucHVsbC1yaWdodCxcbi5idHIucHVsbC1yaWdodCxcbi5idGwucHVsbC1yaWdodCxcbi5mYWIucHVsbC1yaWdodCB7XG4gICAgbWFyZ2luLWxlZnQ6IC4zZW07XG59XG4uYnQtc3BpbiB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IGJ0LXNwaW4gMnMgaW5maW5pdGUgbGluZWFyO1xuICAgIGFuaW1hdGlvbjogYnQtc3BpbiAycyBpbmZpbml0ZSBsaW5lYXI7XG59XG4uYnQtcHVsc2Uge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBidC1zcGluIDFzIGluZmluaXRlIHN0ZXBzKDgpO1xuICAgIGFuaW1hdGlvbjogYnQtc3BpbiAxcyBpbmZpbml0ZSBzdGVwcyg4KTtcbn1cbkAtd2Via2l0LWtleWZyYW1lcyBidC1zcGluIHtcbiAgICAwJSB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuICAgIH1cbn1cbkBrZXlmcmFtZXMgYnQtc3BpbiB7XG4gICAgMCUge1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzU5ZGVnKTtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzU5ZGVnKTtcbiAgICB9XG59XG4uYnQtcm90YXRlLTkwIHtcbiAgICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKHJvdGF0aW9uPTEpO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xufVxuLmJ0LXJvdGF0ZS0xODAge1xuICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249Mik7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG59XG4uYnQtcm90YXRlLTI3MCB7XG4gICAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0zKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7XG4gICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMjcwZGVnKTtcbn1cbi5idC1mbGlwLWhvcml6b250YWwge1xuICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249MCwgbWlycm9yPTEpO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgtMSwgMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoLTEsIDEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoLTEsIDEpO1xufVxuLmJ0LWZsaXAtdmVydGljYWwge1xuICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249MiwgbWlycm9yPTEpO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLCAtMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSwgLTEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSwgLTEpO1xufVxuOnJvb3QgLmJ0LXJvdGF0ZS05MCxcbjpyb290IC5idC1yb3RhdGUtMTgwLFxuOnJvb3QgLmJ0LXJvdGF0ZS0yNzAsXG46cm9vdCAuYnQtZmxpcC1ob3Jpem9udGFsLFxuOnJvb3QgLmJ0LWZsaXAtdmVydGljYWwge1xuICAgIGZpbHRlcjogbm9uZTtcbn1cbi5idC1zdGFjayB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMS4yODU3MTQyOWVtO1xuICAgIGhlaWdodDogMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxZW07XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuLmJ0LXN0YWNrLXNtIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiAuNWVtO1xufVxuLmJ0LXN0YWNrLTF4LFxuLmJ0LXN0YWNrLXNtIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmJ0LWludmVyc2Uge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuLyogQmxhY2sgVGllIHVzZXMgdGhlIFVuaWNvZGUgUHJpdmF0ZSBVc2UgQXJlYSAoUFVBKSB0byBlbnN1cmUgc2NyZWVuXG4gICByZWFkZXJzIGRvIG5vdCByZWFkIG9mZiByYW5kb20gY2hhcmFjdGVycyB0aGF0IHJlcHJlc2VudCBpY29ucyAqL1xuLmJ0LWJhcnM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAwMFwiO1xufVxuLmJ0LWVudmVsb3BlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDFcIjtcbn1cbi5idC1zZWFyY2g6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAwMlwiO1xufVxuLmJ0LXNlYXJjaC1wbHVzOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDNcIjtcbn1cbi5idC1zZWFyY2gtbWludXM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAwNFwiO1xufVxuLmJ0LXBob25lOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDVcIjtcbn1cbi5idC1jb21tZW50OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDdcIjtcbn1cbi5idC1jb21tZW50aW5nOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDhcIjtcbn1cbi5idC1jb21tZW50czpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDA5XCI7XG59XG4uYnQtcnNzOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMGFcIjtcbn1cbi5idC10aW1lczpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDBjXCI7XG59XG4uYnQtdGltZXMtY2lyY2xlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMGRcIjtcbn1cbi5idC1jbG9jazpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDBlXCI7XG59XG4uYnQtc3RhcjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDEwXCI7XG59XG4uYnQtc3Rhci1oYWxmOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMTFcIjtcbn1cbi5idC1jaGVjazpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDEyXCI7XG59XG4uYnQtY2hlY2stY2lyY2xlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMTNcIjtcbn1cbi5idC1jaGVjay1zcXVhcmU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAxNFwiO1xufVxuLmJ0LXRoOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMTVcIjtcbn1cbi5idC10aC1sYXJnZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDE2XCI7XG59XG4uYnQtaGVhcnQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAxN1wiO1xufVxuLmJ0LWhlYXJ0LWhhbGY6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAxOFwiO1xufVxuLmJ0LWNhbGVuZGFyOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMTlcIjtcbn1cbi5idC1zaG9wcGluZy1jYXJ0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMWFcIjtcbn1cbi5idC1wbHVzOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMWJcIjtcbn1cbi5idC1wbHVzLWNpcmNsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDFjXCI7XG59XG4uYnQtcGx1cy1zcXVhcmU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAxZFwiO1xufVxuLmJ0LXBlbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDFlXCI7XG59XG4uYnQtbWludXM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyMVwiO1xufVxuLmJ0LW1pbnVzLWNpcmNsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDIyXCI7XG59XG4uYnQtbWludXMtc3F1YXJlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMjNcIjtcbn1cbi5idC1wZW5jaWw6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyNFwiO1xufVxuLmJ0LWVkaXQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyNVwiO1xufVxuLmJ0LXRodW1icy11cDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDI2XCI7XG59XG4uYnQtdGh1bWJzLWRvd246YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyN1wiO1xufVxuLmJ0LWdlYXI6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyOFwiO1xufVxuLmJ0LXRyYXNoOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMjlcIjtcbn1cbi5idC1maWxlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMmFcIjtcbn1cbi5idC1pbmZvLWNpcmNsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDJiXCI7XG59XG4uYnQtbGFiZWw6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyY1wiO1xufVxuLmJ0LXJvY2tldDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDJkXCI7XG59XG4uYnQtYm9vazpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDJlXCI7XG59XG4uYnQtYm9vay1vcGVuOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMmZcIjtcbn1cbi5idC1ub3RlYm9vazpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDMwXCI7XG59XG4uYnQtY2FtZXJhOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMzFcIjtcbn1cbi5idC1mb2xkZXI6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzMlwiO1xufVxuLmJ0LXF1b3RlLWxlZnQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzNlwiO1xufVxuLmJ0LXF1b3RlLXJpZ2h0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMzdcIjtcbn1cbi5idC1leWU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzOFwiO1xufVxuLmJ0LWxvY2s6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzOVwiO1xufVxuLmJ0LWxvY2stb3BlbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDNhXCI7XG59XG4uYnQtZ2lmdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDNiXCI7XG59XG4uYnQtc3Bpbm5lci1jbG9jazpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDNjXCI7XG59XG4uYnQtc3Bpbm5lcjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDNkXCI7XG59XG4uYnQtd3JlbmNoOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwM2VcIjtcbn1cbi5idC1jbG91ZDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQwXCI7XG59XG4uYnQtY2xvdWQtdXBsb2FkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDFcIjtcbn1cbi5idC1jbG91ZC1kb3dubG9hZDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQyXCI7XG59XG4uYnQtc3luYzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQzXCI7XG59XG4uYnQtcXVlc3Rpb24tY2lyY2xlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDRcIjtcbn1cbi5idC1zaGFyZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQ1XCI7XG59XG4uYnQtYnJpZWZjYXNlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDZcIjtcbn1cbi5idC1tb25leTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQ3XCI7XG59XG4uYnQtbWVnYXBob25lOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDhcIjtcbn1cbi5idC1zaWduLWluOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDlcIjtcbn1cbi5idC1zaWduLW91dDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDRhXCI7XG59XG4uYnQtZmlsbTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDRiXCI7XG59XG4uYnQtdHJvcGh5OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNGNcIjtcbn1cbi5idC1jb2RlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNGRcIjtcbn1cbi5idC1saWdodC1idWxiOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNGVcIjtcbn1cbi5idC1wcmludDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDUwXCI7XG59XG4uYnQtZmF4OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNTFcIjtcbn1cbi5idC12aWRlbzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDUyXCI7XG59XG4uYnQtc2lnbmFsOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNTNcIjtcbn1cbi5idC1zaXRlbWFwOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNTRcIjtcbn1cbi5idC11cGxvYWQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1NVwiO1xufVxuLmJ0LWRvd25sb2FkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNTZcIjtcbn1cbi5idC1rZXk6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1N1wiO1xufVxuLmJ0LW11ZzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDU4XCI7XG59XG4uYnQtYm9va21hcms6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1OVwiO1xufVxuLmJ0LWZsYWc6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1YVwiO1xufVxuLmJ0LWV4dGVybmFsLWxpbms6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1YlwiO1xufVxuLmJ0LXNtaWxlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNWNcIjtcbn1cbi5idC1mcm93bjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDVkXCI7XG59XG4uYnQtbWVoOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNWVcIjtcbn1cbi5idC1tYWdpYzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDYwXCI7XG59XG4uYnQtYm9sdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDYxXCI7XG59XG4uYnQtZXhjbGFtYXRpb24tdHJpYW5nbGU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2MlwiO1xufVxuLmJ0LWV4Y2xhbWF0aW9uLWNpcmNsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDYzXCI7XG59XG4uYnQtZmxhc2s6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2NFwiO1xufVxuLmJ0LW11c2ljOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNjVcIjtcbn1cbi5idC1wdXNoLXBpbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDY2XCI7XG59XG4uYnQtc2hpZWxkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNjdcIjtcbn1cbi5idC1zb3J0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNjhcIjtcbn1cbi5idC1yZXBseTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDY5XCI7XG59XG4uYnQtZm9yd2FyZDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDZhXCI7XG59XG4uYnQtcmVwbHktYWxsOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNmJcIjtcbn1cbi5idC1mb3J3YXJkLWFsbDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDZjXCI7XG59XG4uYnQtYmVsbDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDZkXCI7XG59XG4uYnQtYmVsbC1vZmY6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2ZVwiO1xufVxuLmJ0LWJhbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDcwXCI7XG59XG4uYnQtZGF0YWJhc2U6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3MVwiO1xufVxuLmJ0LWhhcmQtZHJpdmU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3MlwiO1xufVxuLmJ0LW1lcmdlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNzNcIjtcbn1cbi5idC1mb3JrOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNzRcIjtcbn1cbi5idC13aWZpOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNzVcIjtcbn1cbi5idC1wYXBlci1wbGFuZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDc2XCI7XG59XG4uYnQtaW5ib3g6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3N1wiO1xufVxuLmJ0LWZpcmU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3OFwiO1xufVxuLmJ0LXBsYXk6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3OVwiO1xufVxuLmJ0LXBhdXNlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwN2FcIjtcbn1cbi5idC1zdG9wOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwOGJcIjtcbn1cbi5idC1wbGF5LWNpcmNsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDdiXCI7XG59XG4uYnQtbmV4dDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDdjXCI7XG59XG4uYnQtcHJldmlvdXM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3ZFwiO1xufVxuLmJ0LXJlcGVhdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDdlXCI7XG59XG4uYnQtZmFzdC1mb3J3YXJkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwODBcIjtcbn1cbi5idC1mYXN0LXJldmVyc2U6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA4MVwiO1xufVxuLmJ0LXZvbHVtZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDgyXCI7XG59XG4uYnQtdm9sdW1lLW9mZjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDgzXCI7XG59XG4uYnQtdm9sdW1lLXVwOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwODRcIjtcbn1cbi5idC12b2x1bWUtZG93bjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDg1XCI7XG59XG4uYnQtbWF4aW1pemU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA4NlwiO1xufVxuLmJ0LW1pbmltaXplOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwODdcIjtcbn1cbi5idC1jbG9zZWQtY2FwdGlvbnM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA4OFwiO1xufVxuLmJ0LXNodWZmbGU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA4OVwiO1xufVxuLmJ0LXRyaWFuZ2xlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwOGFcIjtcbn1cbi5idC1zcXVhcmU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA4YlwiO1xufVxuLmJ0LWNpcmNsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDhjXCI7XG59XG4uYnQtaGV4YWdvbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDhkXCI7XG59XG4uYnQtb2N0YWdvbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDhlXCI7XG59XG4uYnQtYW5nbGUtdXA6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA5MFwiO1xufVxuLmJ0LWFuZ2xlLWRvd246YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA5MVwiO1xufVxuLmJ0LWFuZ2xlLWxlZnQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA5MlwiO1xufVxuLmJ0LWFuZ2xlLXJpZ2h0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwOTNcIjtcbn1cbi5idC1hbmdsZXMtdXA6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA5NFwiO1xufVxuLmJ0LWFuZ2xlcy1kb3duOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwOTVcIjtcbn1cbi5idC1hbmdsZXMtbGVmdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDk2XCI7XG59XG4uYnQtYW5nbGVzLXJpZ2h0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwOTdcIjtcbn1cbi5idC1hcnJvdy11cDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDk4XCI7XG59XG4uYnQtYXJyb3ctZG93bjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDk5XCI7XG59XG4uYnQtYXJyb3ctbGVmdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDlhXCI7XG59XG4uYnQtYXJyb3ctcmlnaHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA5YlwiO1xufVxuLmJ0LWJhci1jaGFydDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDljXCI7XG59XG4uYnQtcGllLWNoYXJ0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwOWRcIjtcbn1cbi5idC1jaXJjbGUtYXJyb3ctdXA6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBhMFwiO1xufVxuLmJ0LWNpcmNsZS1hcnJvdy1kb3duOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYTFcIjtcbn1cbi5idC1jaXJjbGUtYXJyb3ctbGVmdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGEyXCI7XG59XG4uYnQtY2lyY2xlLWFycm93LXJpZ2h0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYTNcIjtcbn1cbi5idC1jYXJldC11cDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGE0XCI7XG59XG4uYnQtY2FyZXQtZG93bjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGE1XCI7XG59XG4uYnQtY2FyZXQtbGVmdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGE2XCI7XG59XG4uYnQtY2FyZXQtcmlnaHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBhN1wiO1xufVxuLmJ0LWxvbmctYXJyb3ctdXA6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBhOFwiO1xufVxuLmJ0LWxvbmctYXJyb3ctZG93bjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGE5XCI7XG59XG4uYnQtbG9uZy1hcnJvdy1sZWZ0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYWFcIjtcbn1cbi5idC1sb25nLWFycm93LXJpZ2h0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYWJcIjtcbn1cbi5idC1Cb2xkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYWNcIjtcbn1cbi5idC1pdGFsaWM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBhZFwiO1xufVxuLmJ0LXVuZGVybGluZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGFlXCI7XG59XG4uYnQtbGluazpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGIwXCI7XG59XG4uYnQtcGFwZXItY2xpcDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGIxXCI7XG59XG4uYnQtYWxpZ24tbGVmdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGIyXCI7XG59XG4uYnQtYWxpZ24tY2VudGVyOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYjNcIjtcbn1cbi5idC1hbGlnbi1yaWdodDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGI0XCI7XG59XG4uYnQtYWxpZ24tanVzdGlmeTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGI1XCI7XG59XG4uYnQtY3V0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYjZcIjtcbn1cbi5idC1jb3B5OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYjdcIjtcbn1cbi5idC1wYXN0ZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGI4XCI7XG59XG4uYnQtcGhvdG86YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBiOVwiO1xufVxuLmJ0LXRhYmxlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYmFcIjtcbn1cbi5idC11bGlzdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGJiXCI7XG59XG4uYnQtb2xpc3Q6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBiY1wiO1xufVxuLmJ0LWluZGVudDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGJkXCI7XG59XG4uYnQtb3V0ZGVudDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGJlXCI7XG59XG4uYnQtdW5kbzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGMwXCI7XG59XG4uYnQtcmVkbzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGMxXCI7XG59XG4uYnQtc3VwOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYzJcIjtcbn1cbi5idC1zdWI6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBjM1wiO1xufVxuLmJ0LXRleHQtc2l6ZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGM0XCI7XG59XG4uYnQtdGV4dC1jb2xvcjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGM1XCI7XG59XG4uYnQtcmVtb3ZlLWZvcm1hdHRpbmc6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBjNlwiO1xufVxuLmJ0LWJsb2NrcXVvdGU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzNlwiO1xufVxuLmJ0LWdsb2JlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwYzdcIjtcbn1cbi5idC1tYXA6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBjOFwiO1xufVxuLmJ0LW1hcC1hcnJvdzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGM5XCI7XG59XG4uYnQtbWFwLW1hcmtlcjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGNhXCI7XG59XG4uYnQtbWFwLXBpbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGNiXCI7XG59XG4uYnQtaG9tZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGNjXCI7XG59XG4uYnQtYnVpbGRpbmc6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBjZFwiO1xufVxuLmJ0LWluZHVzdHJ5OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwY2VcIjtcbn1cbi5idC1kZXNrdG9wOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwZDBcIjtcbn1cbi5idC1sYXB0b3A6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBkMVwiO1xufVxuLmJ0LXRhYmxldDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGQyXCI7XG59XG4uYnQtbW9iaWxlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwZDNcIjtcbn1cbi5idC10djpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGQ0XCI7XG59XG4uYnQtcmFkaW8tY2hlY2tlZDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGQ1XCI7XG59XG4uYnQtcmFkaW8tdW5jaGVja2VkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwOGNcIjtcbn1cbi5idC1jaGVja2JveC1jaGVja2VkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMTRcIjtcbn1cbi5idC1jaGVja2JveC11bmNoZWNrZWQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA4YlwiO1xufVxuLmJ0LWNoZWNrYm94LWludGVybWVkaWF0ZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDIzXCI7XG59XG4uYnQtdXNlcjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGQ2XCI7XG59XG4uYnQtdXNlci1tYWxlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwZDZcIjtcbn1cbi5idC11c2VyLWZlbWFsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGQ3XCI7XG59XG4uYnQtY3Jvd246YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjBkOFwiO1xufVxuLmJ0LWNyZWRpdC1jYXJkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwZDlcIjtcbn1cbi5idC1zdHJpa2V0aHJvdWdoOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwZGFcIjtcbn1cbi5idC1lamVjdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGRiXCI7XG59XG4uYnQtZWxsaXBzaXMtaDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGRjXCI7XG59XG4uYnQtZWxsaXBzaXMtdjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMGRkXCI7XG59XG4uZmFiLWZhY2Vib29rOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDBcIjtcbn1cbi5mYWItZmFjZWJvb2stYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDFcIjtcbn1cbi5mYWItdHdpdHRlcjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDAyXCI7XG59XG4uZmFiLWxpbmtlZGluOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDNcIjtcbn1cbi5mYWItbGlua2VkaW4tYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDRcIjtcbn1cbi5mYWItaW5zdGFncmFtOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDVcIjtcbn1cbi5mYWItZ2l0aHViOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMDZcIjtcbn1cbi5mYWItZ2l0aHViLWFsdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDA3XCI7XG59XG4uZmFiLWdvb2dsZXBsdXM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAwOFwiO1xufVxuLmZhYi1nb29nbGVwbHVzLWFsdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDA5XCI7XG59XG4uZmFiLXBpbnRlcmVzdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDBhXCI7XG59XG4uZmFiLXBpbnRlcmVzdC1hbHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAwYlwiO1xufVxuLmZhYi10dW1ibHI6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAwY1wiO1xufVxuLmZhYi10dW1ibHItYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMGRcIjtcbn1cbi5mYWItYml0Y29pbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDEwXCI7XG59XG4uZmFiLWJpdGNvaW4tYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMTFcIjtcbn1cbi5mYWItZHJvcGJveDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDEyXCI7XG59XG4uZmFiLXN0YWNrZXhjaGFuZ2U6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAxM1wiO1xufVxuLmZhYi1zdGFja292ZXJmbG93OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMTRcIjtcbn1cbi5mYWItZmxpY2tyOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMTVcIjtcbn1cbi5mYWItZmxpY2tyLWFsdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDE2XCI7XG59XG4uZmFiLWJpdGJ1Y2tldDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDE3XCI7XG59XG4uZmFiLWh0bWw1OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMThcIjtcbn1cbi5mYWItY3NzMzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDE5XCI7XG59XG4uZmFiLWFwcGxlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMWFcIjtcbn1cbi5mYWItd2luZG93czpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDFiXCI7XG59XG4uZmFiLWFuZHJvaWQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAxY1wiO1xufVxuLmZhYi1saW51eDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDFkXCI7XG59XG4uZmFiLWRyaWJiYmxlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMWVcIjtcbn1cbi5mYWIteW91dHViZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDIxXCI7XG59XG4uZmFiLXNreXBlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMjJcIjtcbn1cbi5mYWItZm91cnNxdWFyZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDIzXCI7XG59XG4uZmFiLXRyZWxsbzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDI0XCI7XG59XG4uZmFiLW1heGNkbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDI1XCI7XG59XG4uZmFiLWdpdHRpcDpiZWZvcmUsXG4uZmFiLWdyYXRpcGF5OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMjZcIjtcbn1cbi5mYWItdmltZW86YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyN1wiO1xufVxuLmZhYi12aW1lby1hbHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyOFwiO1xufVxuLmZhYi1zbGFjazpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDI5XCI7XG59XG4uZmFiLXdvcmRwcmVzczpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDJhXCI7XG59XG4uZmFiLXdvcmRwcmVzcy1hbHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyYlwiO1xufVxuLmZhYi1vcGVuaWQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAyY1wiO1xufVxuLmZhYi15YWhvbzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDJkXCI7XG59XG4uZmFiLXlhaG9vLWFsdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDJlXCI7XG59XG4uZmFiLXJlZGRpdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDJmXCI7XG59XG4uZmFiLWdvb2dsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDMwXCI7XG59XG4uZmFiLWdvb2dsZS1hbHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzMVwiO1xufVxuLmZhYi1zdHVtYmxldXBvbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDMyXCI7XG59XG4uZmFiLXN0dW1ibGV1cG9uLWFsdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDMzXCI7XG59XG4uZmFiLWRlbGljaW91czpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDM0XCI7XG59XG4uZmFiLWRpZ2c6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzNVwiO1xufVxuLmZhYi1waWVkcGlwZXI6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzNlwiO1xufVxuLmZhYi1waWVkcGlwZXItYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMzdcIjtcbn1cbi5mYWItZHJ1cGFsOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMzhcIjtcbn1cbi5mYWItam9vbWxhOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwMzlcIjtcbn1cbi5mYWItYmVoYW5jZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDNhXCI7XG59XG4uZmFiLXN0ZWFtOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwM2JcIjtcbn1cbi5mYWItc3RlYW0tYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwM2NcIjtcbn1cbi5mYWItc3BvdGlmeTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDNkXCI7XG59XG4uZmFiLWRldmlhbnRhcnQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjAzZVwiO1xufVxuLmZhYi1zb3VuZGNsb3VkOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDBcIjtcbn1cbi5mYWItdmluZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQxXCI7XG59XG4uZmFiLWNvZGVwZW46YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA0MlwiO1xufVxuLmZhYi1qc2ZpZGRsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQzXCI7XG59XG4uZmFiLXJlYmVsOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDRcIjtcbn1cbi5mYWItZW1waXJlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDVcIjtcbn1cbi5mYWItZ2l0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDZcIjtcbn1cbi5mYWItaGFja2VybmV3czpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQ3XCI7XG59XG4uZmFiLWhhY2tlcm5ld3MtYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNDhcIjtcbn1cbi5mYWItc2xpZGVzaGFyZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDQ5XCI7XG59XG4uZmFiLXR3aXRjaDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDRhXCI7XG59XG4uZmFiLXllbHA6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA0YlwiO1xufVxuLmZhYi1wYXlwYWw6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA0Y1wiO1xufVxuLmZhYi1nb29nbGUtd2FsbGV0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNGRcIjtcbn1cbi5mYWItYW5nZWxsaXN0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNGVcIjtcbn1cbi5mYWItY2MtdmlzYTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDUwXCI7XG59XG4uZmFiLWNjLW1hc3RlcmNhcmQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1MVwiO1xufVxuLmZhYi1jYy1kaXNjb3ZlcjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDUyXCI7XG59XG4uZmFiLWNjLWFtZXg6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1M1wiO1xufVxuLmZhYi1jYy1wYXlwYWw6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1NFwiO1xufVxuLmZhYi1jYy1zdHJpcGU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1NVwiO1xufVxuLmZhYi1sYXN0Zm06YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA1NlwiO1xufVxuLmZhYi13aGF0c2FwcDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDU3XCI7XG59XG4uZmFiLW1lZGl1bTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDU4XCI7XG59XG4uZmFiLW1lYW5wYXRoOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNTlcIjtcbn1cbi5mYWItbWVhbnBhdGgtYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNWFcIjtcbn1cbi5mYWItcGFnZWxpbmVzOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNWJcIjtcbn1cbi5mYWItaW94aG9zdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDYwXCI7XG59XG4uZmFiLWJ1eXNlbGxhZHM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2MVwiO1xufVxuLmZhYi1idXlzZWxsYWRzLWFsdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDYyXCI7XG59XG4uZmFiLWNvbm5lY3RkZXZlbG9wOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNjNcIjtcbn1cbi5mYWItZGFzaGN1YmU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2NFwiO1xufVxuLmZhYi1mb3J1bWJlZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDY1XCI7XG59XG4uZmFiLWxlYW5wdWI6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2NlwiO1xufVxuLmZhYi1zZWxsc3k6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2N1wiO1xufVxuLmZhYi1zaGlydHNpbmJ1bGs6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2OFwiO1xufVxuLmZhYi1zaW1wbHlidWlsdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDY5XCI7XG59XG4uZmFiLXNreWF0bGFzOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNmFcIjtcbn1cbi5mYWItdmlhY29pbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDZiXCI7XG59XG4uZmFiLWNvZGllcGllOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNmNcIjtcbn1cbi5mYWItcXVldWU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2ZFwiO1xufVxuLmZhYi1xdWV1ZS1hbHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA2ZVwiO1xufVxuLmZhYi1mb250aWNvbnM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3MFwiO1xufVxuLmZhYi1mb250aWNvbnMtYWx0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwNzFcIjtcbn1cbi5mYWItYmxhY2t0aWU6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3MlwiO1xufVxuLmZhYi1ibGFja3RpZS1hbHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA3M1wiO1xufVxuLmZhYi14aW5nOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYwOTBcIjtcbn1cbi5mYWItdms6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA5MVwiO1xufVxuLmZhYi13ZWlibzpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDkyXCI7XG59XG4uZmFiLXJlbnJlbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDkzXCI7XG59XG4uZmFiLXRlbmNlbnQtd2VpYm86YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjA5NFwiO1xufVxuLmZhYi1xcTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDk1XCI7XG59XG4uZmFiLXdlY2hhdDpiZWZvcmUsXG4uZmFiLXdlaXhpbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxmMDk2XCI7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvbGlicy9ibGFjay10aWUuc2NzcyIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBQbHlyIHN0eWxlc1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NlbHovcGx5clxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQGltcG9ydCBcInZhcmlhYmxlc1wiO1xuQGltcG9ydCBcIm1peGluc1wiO1xuXG4vLyBBbmltYXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQGtleWZyYW1lcyBwbHlyLXByb2dyZXNzIHtcbiAgICB0byB7IGJhY2tncm91bmQtcG9zaXRpb246ICRwbHlyLXByb2dyZXNzLWxvYWRpbmctc2l6ZSAwOyB9XG59XG5cbi8vIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQmFzZVxuLnBseXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWluLXdpZHRoOiAyMDBweDtcbiAgICBmb250LWZhbWlseTogJHBseXItZm9udC1mYW1pbHk7XG4gICAgZGlyZWN0aW9uOiBsdHI7XG5cbiAgICBAaWYgJHBseXItYm9yZGVyLWJveCA9PSB0cnVlIHtcbiAgICAgICAgLy8gYm9yZGVyLWJveCBldmVyeXRoaW5nXG4gICAgICAgIC8vIGh0dHA6Ly9wYXVsaXJpc2guY29tLzIwMTIvYm94LXNpemluZy1ib3JkZXItYm94LWZ0dy9cbiAgICAgICAgJixcbiAgICAgICAgKixcbiAgICAgICAgKjo6YWZ0ZXIsXG4gICAgICAgICo6OmJlZm9yZSB7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQGlmICRwbHlyLXRvdWNoLWFjdGlvbiA9PSB0cnVlIHtcbiAgICAgIC8vIEZpeCAzMDBtcyBkZWxheVxuICAgICAgYSwgYnV0dG9uLCBpbnB1dCwgbGFiZWwge1xuICAgICAgICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBGb2N1c1xuICAgICY6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiAwO1xuICAgIH1cblxuICAgIC8vIE1lZGlhIGVsZW1lbnRzXG4gICAgdmlkZW8sXG4gICAgYXVkaW8ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xuICAgIH1cblxuICAgIC8vIFJhbmdlIGlucHV0c1xuICAgIC8vIFNwZWNpZmljaXR5IGlzIGZvciBib290c3RyYXAgY29tcGF0aWJpbGl0eVxuICAgIGlucHV0W3R5cGU9J3JhbmdlJ10ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiAoJHBseXItcmFuZ2UtdGh1bWItaGVpZ2h0ICogJHBseXItcmFuZ2UtdGh1bWItYWN0aXZlLXNjYWxlKTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcblxuICAgICAgICBhcHBlYXJhbmNlOiBub25lO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cbiAgICAgICAgLy8gV2ViS2l0XG4gICAgICAgICY6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHBseXItcmFuZ2UtdHJhY2soKTtcbiAgICAgICAgfVxuICAgICAgICAmOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gICAgICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAtKCgkcGx5ci1yYW5nZS10aHVtYi1oZWlnaHQgLSAkcGx5ci1yYW5nZS10cmFjay1oZWlnaHQpIC8gMik7XG4gICAgICAgICAgICBAaW5jbHVkZSBwbHlyLXJhbmdlLXRodW1iKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBNb3ppbGxhXG4gICAgICAgICY6Oi1tb3otcmFuZ2UtdHJhY2sge1xuICAgICAgICAgICAgQGluY2x1ZGUgcGx5ci1yYW5nZS10cmFjaygpO1xuICAgICAgICB9XG4gICAgICAgICY6Oi1tb3otcmFuZ2UtdGh1bWIge1xuICAgICAgICAgICAgQGluY2x1ZGUgcGx5ci1yYW5nZS10aHVtYigpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICAgICY6Oi1tcy10cmFjayB7XG4gICAgICAgICAgICBoZWlnaHQ6ICRwbHlyLXJhbmdlLXRyYWNrLWhlaWdodDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICB9XG4gICAgICAgICY6Oi1tcy1maWxsLXVwcGVyIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHBseXItcmFuZ2UtdHJhY2soKTtcbiAgICAgICAgfVxuICAgICAgICAmOjotbXMtZmlsbC1sb3dlciB7XG4gICAgICAgICAgICBAaW5jbHVkZSBwbHlyLXJhbmdlLXRyYWNrKCk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkcGx5ci1yYW5nZS1zZWxlY3RlZC1iZztcbiAgICAgICAgfVxuICAgICAgICAmOjotbXMtdGh1bWIge1xuICAgICAgICAgICAgQGluY2x1ZGUgcGx5ci1yYW5nZS10aHVtYigpO1xuICAgICAgICAgICAgLy8gRm9yIHNvbWUgcmVhc29uLCBFZGdlIHVzZXMgdGhlIC13ZWJraXQgbWFyZ2luIGFib3ZlXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICB9XG4gICAgICAgICY6Oi1tcy10b29sdGlwIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBGb2N1cyBzdHlsZXNcbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICBvdXRsaW5lOiAwO1xuICAgICAgICB9XG4gICAgICAgICY6Oi1tb3otZm9jdXMtb3V0ZXIge1xuICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICB9XG4gICAgICAgICYudGFiLWZvY3VzOmZvY3VzIHtcbiAgICAgICAgICAgIG91dGxpbmUtb2Zmc2V0OiAzcHg7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBQcmVzc2VkIHN0eWxlc1xuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICAmOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgcGx5ci1yYW5nZS10aHVtYi1hY3RpdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6Oi1tb3otcmFuZ2UtdGh1bWIge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHBseXItcmFuZ2UtdGh1bWItYWN0aXZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOjotbXMtdGh1bWIge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHBseXItcmFuZ2UtdGh1bWItYWN0aXZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIFZpZGVvIHJhbmdlIGlucHV0c1xuLnBseXItLXZpZGVvIGlucHV0W3R5cGU9J3JhbmdlJ10udGFiLWZvY3VzOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkIHRyYW5zcGFyZW50aXplKCRwbHlyLXZpZGVvLWNvbnRyb2wtY29sb3IsIC41KTtcbn1cblxuLy8gQXVkaW8gcmFuZ2UgaW5wdXRzXG4ucGx5ci0tYXVkaW8gaW5wdXRbdHlwZT0ncmFuZ2UnXS50YWItZm9jdXM6Zm9jdXMge1xuICAgIG91dGxpbmU6IDFweCBkb3R0ZWQgdHJhbnNwYXJlbnRpemUoJHBseXItYXVkaW8tY29udHJvbC1jb2xvciwgLjUpO1xufVxuXG4vLyBTY3JlZW4gcmVhZGVyIG9ubHkgZWxlbWVudHNcbi5wbHlyX19zci1vbmx5IHtcbiAgICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIC8vICFpbXBvcnRhbnQgaXMgbm90IGFsd2F5cyBuZWVkZWRcbiAgICBAaWYgJHBseXItc3Itb25seS1pbXBvcnRhbnQgPT0gdHJ1ZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIGJvcmRlcjogMCAhaW1wb3J0YW50O1xuICAgICAgICBoZWlnaHQ6IDFweCAhaW1wb3J0YW50O1xuICAgICAgICB3aWR0aDogMXB4ICFpbXBvcnRhbnQ7XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBoZWlnaHQ6IDFweDtcbiAgICAgICAgd2lkdGg6IDFweDtcbiAgICB9XG59XG5cbi8vIFZpZGVvXG4ucGx5cl9fdmlkZW8td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbn1cblxuLy8gQ29udGFpbmVyIGZvciBlbWJlZHNcbi5wbHlyX192aWRlby1lbWJlZCB7XG4gICAgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgLyogMTY6OSAqL1xuICAgIGhlaWdodDogMDtcbiAgICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xuXG4gICAgLy8gUmVxdWlyZSBvdmVyZmxvdyBhbmQgei1pbmRleCB0byBmb3JjZSBib3JkZXItcmFkaXVzXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB6LWluZGV4OiAwO1xuXG4gICAgaWZyYW1lIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgfVxuXG4gICAgLy8gVmltZW8gaGFja1xuICAgID4gZGl2IHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjAwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zNS45NSUpO1xuICAgIH1cbn1cbi8vIFRvIGFsbG93IG1vdXNlIGV2ZW50cyB0byBiZSBjYXB0dXJlZCBpZiBmdWxsIHN1cHBvcnRcbi5wbHlyIC5wbHlyX192aWRlby1lbWJlZCBpZnJhbWUge1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4vLyBDYXB0aW9uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEhpZGUgZGVmYXVsdCBjYXB0aW9uc1xuLnBseXIgdmlkZW86Oi13ZWJraXQtbWVkaWEtdGV4dC10cmFjay1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG4ucGx5cl9fY2FwdGlvbnMge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6ICgkcGx5ci1jb250cm9sLXNwYWNpbmcgKiAyKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLSgkcGx5ci1jb250cm9sLXNwYWNpbmcgKiA2KSk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlO1xuICAgIGNvbG9yOiAkcGx5ci1jYXB0aW9ucy1jb2xvcjtcbiAgICBmb250LXNpemU6ICRwbHlyLWZvbnQtc2l6ZS1jYXB0aW9ucy1iYXNlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuXG4gICAgc3BhbiB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICAgICAgcGFkZGluZzogZmxvb3IoJHBseXItY29udHJvbC1zcGFjaW5nIC8gMykgJHBseXItY29udHJvbC1zcGFjaW5nO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkcGx5ci1jYXB0aW9ucy1iZztcbiAgICAgICAgYm94LWRlY29yYXRpb24tYnJlYWs6IGNsb25lO1xuICAgICAgICBsaW5lLWhlaWdodDogMTUwJTtcbiAgICB9XG4gICAgc3BhbjplbXB0eSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRwbHlyLWJwLXNjcmVlbi1tZCkge1xuICAgICAgICBmb250LXNpemU6ICRwbHlyLWZvbnQtc2l6ZS1jYXB0aW9ucy1tZWRpdW07XG4gICAgfVxufVxuLnBseXItLWNhcHRpb25zLWFjdGl2ZSAucGx5cl9fY2FwdGlvbnMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuLnBseXItLWhpZGUtY29udHJvbHMgLnBseXJfX2NhcHRpb25zIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLSgkcGx5ci1jb250cm9sLXNwYWNpbmcgKiAyKSk7XG59XG4vLyBMYXJnZSBjYXB0aW9ucyBpbiBmdWxsIHNjcmVlbiBvbiBsYXJnZXIgc2NyZWVuc1xuQG1lZGlhIChtaW4td2lkdGg6ICRwbHlyLWJwLXNjcmVlbi1sZykge1xuICAgIC5wbHlyLS1mdWxsc2NyZWVuLWFjdGl2ZSAucGx5cl9fY2FwdGlvbnMge1xuICAgICAgICBmb250LXNpemU6ICRwbHlyLWZvbnQtc2l6ZS1jYXB0aW9ucy1sYXJnZTtcbiAgICB9XG59XG5cbi8vIENvbnRyb2xzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSGlkZSBuYXRpdmUgY29udHJvbHNcbi5wbHlyIDo6LXdlYmtpdC1tZWRpYS1jb250cm9scyB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLy8gUGxheWJhY2sgY29udHJvbHNcbi5wbHlyX19jb250cm9scyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIC8vIFNwYWNpbmdcbiAgICA+IGJ1dHRvbixcbiAgICAucGx5cl9fcHJvZ3Jlc3MsXG4gICAgLnBseXJfX3RpbWUge1xuICAgICAgICBtYXJnaW4tbGVmdDogKCRwbHlyLWNvbnRyb2wtc3BhY2luZyAvIDIpO1xuXG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnBseXJfX3ZvbHVtZSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAoJHBseXItY29udHJvbC1zcGFjaW5nIC8gMik7XG4gICAgfVxuICAgIFtkYXRhLXBseXI9XCJwYXVzZVwiXSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIH1cblxuICAgIC8vIEJ1dHRvbnNcbiAgICBidXR0b24ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlOyAvLyBJRTExXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAgIHBhZGRpbmc6ICgkcGx5ci1jb250cm9sLXNwYWNpbmcgKiAuNyk7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIC4zcyBlYXNlLCBjb2xvciAuM3MgZWFzZSwgb3BhY2l0eSAuM3MgZWFzZTtcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgIHdpZHRoOiAkcGx5ci1jb250cm9sLWljb24tc2l6ZTtcbiAgICAgICAgICAgIGhlaWdodDogJHBseXItY29udHJvbC1pY29uLXNpemU7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERlZmF1bHQgZm9jdXNcbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICBvdXRsaW5lOiAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGlkZSB0b2dnbGUgaWNvbnMgYnkgZGVmYXVsdFxuICAgIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4sXG4gICAgLmljb24tLW11dGVkLFxuICAgIC5pY29uLS1jYXB0aW9ucy1vbiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRwbHlyLWJwLXNjcmVlbi1zbSkge1xuICAgICAgICA+IGJ1dHRvbixcbiAgICAgICAgLnBseXJfX3Byb2dyZXNzLFxuICAgICAgICAucGx5cl9fdGltZSB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogJHBseXItY29udHJvbC1zcGFjaW5nO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8gSGlkZSBjb250cm9sc1xuLnBseXItLWhpZGUtY29udHJvbHMgLnBseXJfX2NvbnRyb2xzIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4vLyBWaWRlbyBjb250cm9sc1xuLnBseXItLXZpZGVvIC5wbHlyX19jb250cm9scyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHBhZGRpbmc6ICgkcGx5ci1jb250cm9sLXNwYWNpbmcgKiA1KSAkcGx5ci1jb250cm9sLXNwYWNpbmcgJHBseXItY29udHJvbC1zcGFjaW5nO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0cmFuc3BhcmVudGl6ZSgkcGx5ci12aWRlby1jb250cm9scy1iZywgMSksIHRyYW5zcGFyZW50aXplKCRwbHlyLXZpZGVvLWNvbnRyb2xzLWJnLCAuNSkpO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IGluaGVyaXQ7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IGluaGVyaXQ7XG4gICAgY29sb3I6ICRwbHlyLXZpZGVvLWNvbnRyb2wtY29sb3I7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZTtcblxuICAgIGJ1dHRvbiB7XG4gICAgICAgIC8vIEhvdmVyIGFuZCB0YWIgZm9jdXNcbiAgICAgICAgJi50YWItZm9jdXM6Zm9jdXMsXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHBseXItdmlkZW8tY29udHJvbC1iZy1ob3ZlcjtcbiAgICAgICAgICAgIGNvbG9yOiAkcGx5ci12aWRlby1jb250cm9sLWNvbG9yLWhvdmVyO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBBdWRpbyBjb250cm9sc1xuLnBseXItLWF1ZGlvIC5wbHlyX19jb250cm9scyB7XG4gICAgcGFkZGluZzogJHBseXItY29udHJvbC1zcGFjaW5nO1xuICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gICAgYmFja2dyb3VuZDogJHBseXItYXVkaW8tY29udHJvbHMtYmc7XG4gICAgYm9yZGVyOiAkcGx5ci1hdWRpby1jb250cm9scy1ib3JkZXI7XG4gICAgY29sb3I6ICRwbHlyLWF1ZGlvLWNvbnRyb2wtY29sb3I7XG5cbiAgICBidXR0b24ge1xuICAgICAgICAvLyBIb3ZlciBhbmQgdGFiIGZvY3VzXG4gICAgICAgICYudGFiLWZvY3VzOmZvY3VzLFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRwbHlyLWF1ZGlvLWNvbnRyb2wtYmctaG92ZXI7XG4gICAgICAgICAgICBjb2xvcjogJHBseXItYXVkaW8tY29udHJvbC1jb2xvci1ob3ZlcjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gTGFyZ2UgcGxheSBidXR0b24gKHZpZGVvIG9ubHkpXG4ucGx5cl9fcGxheS1sYXJnZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgcGFkZGluZzogJHBseXItY29udHJvbC1zcGFjaW5nO1xuICAgIGJhY2tncm91bmQ6ICRwbHlyLXZpZGVvLWNvbnRyb2wtYmctaG92ZXI7XG4gICAgYm9yZGVyOiA0cHggc29saWQgY3VycmVudENvbG9yO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgYm94LXNoYWRvdzogMCAxcHggMXB4IHRyYW5zcGFyZW50aXplKCMwMDAsIC44NSk7XG4gICAgY29sb3I6ICRwbHlyLXZpZGVvLWNvbnRyb2wtY29sb3I7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuXG4gICAgc3ZnIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBsZWZ0OiAycHg7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gICAgfVxuXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IDFweCBkb3R0ZWQgdHJhbnNwYXJlbnRpemUoJHBseXItdmlkZW8tY29udHJvbC1jb2xvciwgLjUpO1xuICAgIH1cbn1cbi5wbHlyIC5wbHlyX19wbGF5LWxhcmdlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4ucGx5ci0tYXVkaW8gLnBseXJfX3BsYXktbGFyZ2Uge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG4ucGx5ci0tcGxheWluZyAucGx5cl9fcGxheS1sYXJnZSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi8vIFN0YXRlc1xuLnBseXJfX2NvbnRyb2xzIFtkYXRhLXBseXI9J3BhdXNlJ10sXG4ucGx5ci0tcGxheWluZyAucGx5cl9fY29udHJvbHMgW2RhdGEtcGx5cj0ncGxheSddIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuLnBseXItLXBsYXlpbmcgLnBseXJfX2NvbnRyb2xzIFtkYXRhLXBseXI9J3BhdXNlJ10ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLy8gQ2hhbmdlIGljb25zIG9uIHN0YXRlIGNoYW5nZVxuLnBseXItLWZ1bGxzY3JlZW4tYWN0aXZlIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4sXG4ucGx5ci0tbXV0ZWQgLnBseXJfX2NvbnRyb2xzIC5pY29uLS1tdXRlZCxcbi5wbHlyLS1jYXB0aW9ucy1hY3RpdmUgLnBseXJfX2NvbnRyb2xzIC5pY29uLS1jYXB0aW9ucy1vbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmICsgc3ZnIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG5cbi8vIFNvbWUgb3B0aW9ucyBhcmUgaGlkZGVuIGJ5IGRlZmF1bHRcbi5wbHlyIFtkYXRhLXBseXI9J2NhcHRpb25zJ10sXG4ucGx5ciBbZGF0YS1wbHlyPSdmdWxsc2NyZWVuJ10ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG4ucGx5ci0tY2FwdGlvbnMtZW5hYmxlZCBbZGF0YS1wbHlyPSdjYXB0aW9ucyddLFxuLnBseXItLWZ1bGxzY3JlZW4tZW5hYmxlZCBbZGF0YS1wbHlyPSdmdWxsc2NyZWVuJ10ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLy8gVG9vbHRpcHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4ucGx5cl9fdG9vbHRpcCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDI7XG4gICAgYm90dG9tOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206ICgkcGx5ci10b29sdGlwLXBhZGRpbmcgKiAyKTtcbiAgICBwYWRkaW5nOiAkcGx5ci10b29sdGlwLXBhZGRpbmcgKCRwbHlyLXRvb2x0aXAtcGFkZGluZyAqIDEuNSk7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG5cbiAgICBvcGFjaXR5OiAwO1xuICAgIGJhY2tncm91bmQ6ICRwbHlyLXRvb2x0aXAtYmc7XG4gICAgYm9yZGVyLXJhZGl1czogJHBseXItdG9vbHRpcC1yYWRpdXM7XG5cbiAgICBjb2xvcjogJHBseXItdG9vbHRpcC1jb2xvcjtcbiAgICBmb250LXNpemU6ICRwbHlyLWZvbnQtc2l6ZS1zbWFsbDtcbiAgICBsaW5lLWhlaWdodDogMS4zO1xuXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMTBweCkgc2NhbGUoLjgpO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IDUwJSAxMDAlO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMnMgLjFzIGVhc2UsIG9wYWNpdHkgLjJzIC4xcyBlYXNlO1xuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgICAgLy8gQXJyb3dzXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAwO1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuXG4gICAgICAgIC8vIFRoZSBiYWNrZ3JvdW5kIHRyaWFuZ2xlXG4gICAgICAgIGJvdHRvbTogLSRwbHlyLXRvb2x0aXAtYXJyb3ctc2l6ZTtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAkcGx5ci10b29sdGlwLWFycm93LXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci10b3A6ICRwbHlyLXRvb2x0aXAtYXJyb3ctc2l6ZSBzb2xpZCAkcGx5ci10b29sdGlwLWJnO1xuICAgICAgICBib3JkZXItbGVmdDogJHBseXItdG9vbHRpcC1hcnJvdy1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICB6LWluZGV4OiAyO1xuICAgIH1cbn1cbi5wbHlyIGJ1dHRvbjpob3ZlciAucGx5cl9fdG9vbHRpcCxcbi5wbHlyIGJ1dHRvbi50YWItZm9jdXM6Zm9jdXMgLnBseXJfX3Rvb2x0aXAsXG4ucGx5cl9fdG9vbHRpcC0tdmlzaWJsZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKSBzY2FsZSgxKTtcbn1cbi5wbHlyIGJ1dHRvbjpob3ZlciAucGx5cl9fdG9vbHRpcCB7XG4gICAgei1pbmRleDogMztcbn1cblxuLy8gRmlyc3QgdG9vbHRpcFxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpmaXJzdC1jaGlsZCAucGx5cl9fdG9vbHRpcCB7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMHB4KSBzY2FsZSguOCk7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCAxMDAlO1xuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgICAgbGVmdDogKCRwbHlyLWNvbnRyb2wtaWNvbi1zaXplIC8gMikgKyAkcGx5ci1jb250cm9sLXBhZGRpbmc7XG4gICAgfVxufVxuXG4vLyBMYXN0IHRvb2x0aXBcbi5wbHlyX19jb250cm9scyBidXR0b246bGFzdC1jaGlsZCAucGx5cl9fdG9vbHRpcCB7XG4gICAgcmlnaHQ6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMTBweCkgc2NhbGUoLjgpO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMTAwJTtcblxuICAgICY6OmJlZm9yZSB7XG4gICAgICAgIGxlZnQ6IGF1dG87XG4gICAgICAgIHJpZ2h0OiAoJHBseXItY29udHJvbC1pY29uLXNpemUgLyAyKSArICRwbHlyLWNvbnRyb2wtcGFkZGluZztcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwJSk7XG4gICAgfVxufVxuXG4ucGx5cl9fY29udHJvbHMgYnV0dG9uOmZpcnN0LWNoaWxkLFxuLnBseXJfX2NvbnRyb2xzIGJ1dHRvbjpsYXN0LWNoaWxkIHtcbiAgICAmOmhvdmVyIC5wbHlyX190b29sdGlwLFxuICAgICYudGFiLWZvY3VzOmZvY3VzIC5wbHlyX190b29sdGlwLFxuICAgIC5wbHlyX190b29sdGlwLS12aXNpYmxlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCkgc2NhbGUoMSk7XG4gICAgfVxufVxuXG4vLyBQbGF5YmFjayBwcm9ncmVzc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIDxwcm9ncmVzcz4gZWxlbWVudFxuLnBseXJfX3Byb2dyZXNzIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmbGV4OiAxO1xuXG4gICAgaW5wdXRbdHlwZT1cInJhbmdlXCJdIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB6LWluZGV4OiAyO1xuXG4gICAgICAgICY6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICB9XG4gICAgICAgICY6Oi1tb3otcmFuZ2UtdHJhY2sge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgJjo6LW1zLWZpbGwtdXBwZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTZWVrIHRvb2x0aXAgdG8gc2hvdyB0aW1lXG4gICAgLnBseXJfX3Rvb2x0aXAge1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbn1cbi5wbHlyIC5wbHlyX19wcm9ncmVzcyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcixcbi5wbHlyX19wcm9ncmVzcy0tcGxheWVkLFxuLnBseXJfX3ZvbHVtZS0tZGlzcGxheSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiA1MCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAkcGx5ci1yYW5nZS10cmFjay1oZWlnaHQ7XG4gICAgbWFyZ2luOiAtKCRwbHlyLXJhbmdlLXRyYWNrLWhlaWdodCAvIDIpIDAgMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG5cbiAgICAmOjotd2Via2l0LXByb2dyZXNzLWJhciB7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIH1cbiAgICAmOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICAgICAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgbWluLXdpZHRoOiAkcGx5ci1yYW5nZS10cmFjay1oZWlnaHQ7XG4gICAgfVxuICAgICY6Oi1tb3otcHJvZ3Jlc3MtYmFyIHtcbiAgICAgICAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgbWluLXdpZHRoOiAkcGx5ci1yYW5nZS10cmFjay1oZWlnaHQ7XG4gICAgfVxuICAgICY6Oi1tcy1maWxsIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgfVxufVxuLnBseXJfX3Byb2dyZXNzLS1wbGF5ZWQsXG4ucGx5cl9fdm9sdW1lLS1kaXNwbGF5IHtcbiAgICB6LWluZGV4OiAxO1xuICAgIGNvbG9yOiAkcGx5ci1yYW5nZS1zZWxlY3RlZC1iZztcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICB0cmFuc2l0aW9uOiBub25lO1xuXG4gICAgJjo6LXdlYmtpdC1wcm9ncmVzcy12YWx1ZSB7XG4gICAgICAgIG1pbi13aWR0aDogJHBseXItcmFuZ2UtdHJhY2staGVpZ2h0O1xuICAgICAgICBtYXgtd2lkdGg6IDk5JTtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG4gICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBub25lO1xuICAgIH1cbiAgICAmOjotbW96LXByb2dyZXNzLWJhciB7XG4gICAgICAgIG1pbi13aWR0aDogJHBseXItcmFuZ2UtdHJhY2staGVpZ2h0O1xuICAgICAgICBtYXgtd2lkdGg6IDk5JTtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG4gICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBub25lO1xuICAgIH1cbiAgICAmOjotbXMtZmlsbCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICAgICY6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAuMnMgZWFzZTtcbiAgICB9XG4gICAgJjo6LW1vei1wcm9ncmVzcy1iYXIge1xuICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAuMnMgZWFzZTtcbiAgICB9XG4gICAgJjo6LW1zLWZpbGwge1xuICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAuMnMgZWFzZTtcbiAgICB9XG59XG4ucGx5ci0tdmlkZW8gLnBseXJfX3Byb2dyZXNzLS1idWZmZXIsXG4ucGx5ci0tdmlkZW8gLnBseXJfX3ZvbHVtZS0tZGlzcGxheSB7XG4gICAgYmFja2dyb3VuZDogJHBseXItdmlkZW8tcmFuZ2UtdHJhY2stYmc7XG59XG4ucGx5ci0tdmlkZW8gLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICAgIGNvbG9yOiAkcGx5ci12aWRlby1wcm9ncmVzcy1idWZmZXJlZC1iZztcbn1cbi5wbHlyLS1hdWRpbyAucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlcixcbi5wbHlyLS1hdWRpbyAucGx5cl9fdm9sdW1lLS1kaXNwbGF5IHtcbiAgICBiYWNrZ3JvdW5kOiAkcGx5ci1hdWRpby1yYW5nZS10cmFjay1iZztcbn1cbi5wbHlyLS1hdWRpbyAucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlciB7XG4gICAgY29sb3I6ICRwbHlyLWF1ZGlvLXByb2dyZXNzLWJ1ZmZlcmVkLWJnO1xufVxuXG4vLyBMb2FkaW5nIHN0YXRlXG4ucGx5ci0tbG9hZGluZyAucGx5cl9fcHJvZ3Jlc3MtLWJ1ZmZlciB7XG4gICAgYW5pbWF0aW9uOiBwbHlyLXByb2dyZXNzIDFzIGxpbmVhciBpbmZpbml0ZTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6ICRwbHlyLXByb2dyZXNzLWxvYWRpbmctc2l6ZSAkcGx5ci1wcm9ncmVzcy1sb2FkaW5nLXNpemU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcbiAgICAgICAgLTQ1ZGVnLFxuICAgICAgICAkcGx5ci1wcm9ncmVzcy1sb2FkaW5nLWJnIDI1JSxcbiAgICAgICAgdHJhbnNwYXJlbnQgMjUlLFxuICAgICAgICB0cmFuc3BhcmVudCA1MCUsXG4gICAgICAgICRwbHlyLXByb2dyZXNzLWxvYWRpbmctYmcgNTAlLFxuICAgICAgICAkcGx5ci1wcm9ncmVzcy1sb2FkaW5nLWJnIDc1JSxcbiAgICAgICAgdHJhbnNwYXJlbnQgNzUlLFxuICAgICAgICB0cmFuc3BhcmVudCk7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLnBseXItLXZpZGVvLnBseXItLWxvYWRpbmcgLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRwbHlyLXZpZGVvLXByb2dyZXNzLWJ1ZmZlcmVkLWJnO1xufVxuLnBseXItLWF1ZGlvLnBseXItLWxvYWRpbmcgLnBseXJfX3Byb2dyZXNzLS1idWZmZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRwbHlyLWF1ZGlvLXByb2dyZXNzLWJ1ZmZlcmVkLWJnO1xufVxuXG4vLyBUaW1lXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLnBseXJfX3RpbWUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGZvbnQtc2l6ZTogJHBseXItZm9udC1zaXplLXNtYWxsO1xufVxuLy8gTWVkaWEgZHVyYXRpb24gaGlkZGVuIG9uIHNtYWxsIHNjcmVlbnNcbi5wbHlyX190aW1lICsgLnBseXJfX3RpbWUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHBseXItYnAtc2NyZWVuLW1kKSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG5cbiAgICAvLyBBZGQgYSBzbGFzaCBpbiBiZWZvcmVcbiAgICAmOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnXFwyMDQ0JztcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkcGx5ci1jb250cm9sLXNwYWNpbmc7XG4gICAgfVxufVxuXG4vLyBWb2x1bWVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4ucGx5cl9fdm9sdW1lIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuLnBseXIgLnBseXJfX3ZvbHVtZSB7XG4gICAgZmxleDogMTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBpbnB1dFt0eXBlPVwicmFuZ2VcIl0ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkcGx5ci1icC1zY3JlZW4tc20pIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1heC13aWR0aDogNjBweDtcbiAgICB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRwbHlyLWJwLXNjcmVlbi1tZCkge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMHB4O1xuICAgIH1cbn1cblxuLy8gSGlkZSBzb3VuZCBjb250cm9scyBvbiBpT1Ncbi8vIEl0J3Mgbm90IHN1cHBvcnRlZCB0byBjaGFuZ2Ugdm9sdW1lIHVzaW5nIEphdmFTY3JpcHQ6XG4vLyBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vbGlicmFyeS9zYWZhcmkvZG9jdW1lbnRhdGlvbi9BdWRpb1ZpZGVvL0NvbmNlcHR1YWwvVXNpbmdfSFRNTDVfQXVkaW9fVmlkZW8vRGV2aWNlLVNwZWNpZmljQ29uc2lkZXJhdGlvbnMvRGV2aWNlLVNwZWNpZmljQ29uc2lkZXJhdGlvbnMuaHRtbFxuLnBseXItLWlzLWlvcyAucGx5cl9fdm9sdW1lLFxuLnBseXItLWlzLWlvcyBbZGF0YS1wbHlyPSdtdXRlJ10ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLy8gRnVsbHNjcmVlblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5wbHlyLS1mdWxsc2NyZWVuLWFjdGl2ZSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogMTAwMDAwMDA7XG4gICAgYmFja2dyb3VuZDogIzAwMDtcbiAgICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7XG5cbiAgICB2aWRlbyB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gICAgLnBseXJfX3ZpZGVvLXdyYXBwZXIge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgICAucGx5cl9fdmlkZW8tZW1iZWQge1xuICAgICAgICAvLyBSZXZlcnQgb3ZlcmZsb3cgY2hhbmdlXG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIH1cbiAgICAucGx5cl9fY29udHJvbHMge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgfVxuXG4gICAgLy8gVmltZW8gcmVxdWlyZXMgc29tZSBkaWZmZXJlbnQgc3R5bGluZ1xuICAgICYucGx5ci0tdmltZW8gLnBseXJfX3ZpZGVvLXdyYXBwZXIge1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvcGx5ci9zcmMvc2Nzcy9wbHlyLnNjc3MiLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gUGx5ciBtaXhpbnNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zZWx6L3BseXJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDxpbnB1dCB0eXBlPVwicmFuZ2VcIj4gc3R5bGluZ1xuQG1peGluIHBseXItcmFuZ2UtdHJhY2soKSB7XG4gICAgaGVpZ2h0OiAkcGx5ci1yYW5nZS10cmFjay1oZWlnaHQ7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyOiAwO1xuICAgIGJvcmRlci1yYWRpdXM6ICgkcGx5ci1yYW5nZS10cmFjay1oZWlnaHQgLyAyKTtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbkBtaXhpbiBwbHlyLXJhbmdlLXRodW1iKCkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6ICRwbHlyLXJhbmdlLXRodW1iLWhlaWdodDtcbiAgICB3aWR0aDogJHBseXItcmFuZ2UtdGh1bWItd2lkdGg7XG4gICAgYmFja2dyb3VuZDogJHBseXItcmFuZ2UtdGh1bWItYmc7XG4gICAgYm9yZGVyOiAkcGx5ci1yYW5nZS10aHVtYi1ib3JkZXI7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIC4ycyBlYXNlLCBib3JkZXIgLjJzIGVhc2UsIHRyYW5zZm9ybSAuMnMgZWFzZTtcbiAgICBib3gtc2hhZG93OiAkcGx5ci1yYW5nZS10aHVtYi1zaGFkb3c7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cbkBtaXhpbiBwbHlyLXJhbmdlLXRodW1iLWFjdGl2ZSgpIHtcbiAgICBiYWNrZ3JvdW5kOiAkcGx5ci1yYW5nZS10aHVtYi1hY3RpdmUtYmc7XG4gICAgYm9yZGVyLWNvbG9yOiAkcGx5ci1yYW5nZS10aHVtYi1hY3RpdmUtYm9yZGVyLWNvbG9yO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoJHBseXItcmFuZ2UtdGh1bWItYWN0aXZlLXNjYWxlKTtcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9wbHlyL3NyYy9zY3NzL21peGlucy5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFRvb2xzL0ZvbnRzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AbWl4aW4gZm9udC13ZWlnaHQoJGZvbnQtd2VpZ2h0KSB7XG4gIEBpZiAoJGZvbnQtd2VpZ2h0ID09IFwidGhpblwiKSAgICAgICAgICB7IGZvbnQtd2VpZ2h0OiAxMDA7IH1cbiAgQGlmICgkZm9udC13ZWlnaHQgPT0gXCJ1bHRyYS1saWdodFwiKSAgIHsgZm9udC13ZWlnaHQ6IDIwMDsgfVxuICBAaWYgKCRmb250LXdlaWdodCA9PSBcImxpZ2h0XCIpICAgICAgICAgeyBmb250LXdlaWdodDogMzAwOyB9XG4gIEBpZiAoJGZvbnQtd2VpZ2h0ID09IFwibm9ybWFsXCIpICAgICAgICB7IGZvbnQtd2VpZ2h0OiA0MDA7IH1cbiAgQGlmICgkZm9udC13ZWlnaHQgPT0gXCJtZWRpdW1cIikgICAgICAgIHsgZm9udC13ZWlnaHQ6IDUwMDsgfVxuICBAaWYgKCRmb250LXdlaWdodCA9PSBcInNlbWktYm9sZFwiKSAgICAgeyBmb250LXdlaWdodDogNjAwOyB9XG4gIEBpZiAoJGZvbnQtd2VpZ2h0ID09IFwiYm9sZFwiKSAgICAgICAgICB7IGZvbnQtd2VpZ2h0OiA3MDA7IH1cbiAgQGlmICgkZm9udC13ZWlnaHQgPT0gXCJ1bHRyYS1ib2xkXCIpICAgIHsgZm9udC13ZWlnaHQ6IDgwMDsgfVxuICBAaWYgKCRmb250LXdlaWdodCA9PSBcImhlYXZ5XCIpICAgICAgICAgeyBmb250LXdlaWdodDogOTAwOyB9XG59XG5cbkBtaXhpbiBmb250LWZhbWlseSgkZm9udC1mYW1pbHkpIHtcbn1cblxuQG1peGluIGZvbnQtc2l6ZSgkYXJncy4uLikge1xuICBAaW5jbHVkZSBpbnVpdC1mb250LXNpemUoJGFyZ3MuLi4pO1xufVxuXG5AbWl4aW4gaWNvbi1zdHlsZXMge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQ6IG5vcm1hbCBub3JtYWwgbm9ybWFsIDE0cHgvMSBcIkJsYWNrIFRpZVwiO1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiAtMTQuMjg1NzE0MjklO1xuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsMCk7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3Rvb2xzLmZvbnRzLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgVG9vbHMvQWxpYXNlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuJHVuaXQ6ICAgICAgICAgICAgICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0O1xuJHVuaXQtdGlueTogICAgICAgICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXRpbnk7XG4kdW5pdC1zbWFsbDogICAgICAgJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtc21hbGw7XG4kdW5pdC1sYXJnZTogICAgICAgJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtbGFyZ2U7XG4kdW5pdC1odWdlOiAgICAgICAgJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtaHVnZTtcbiR1bml0LWdpZ2FudGljOiAgICAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1odWdlICogMjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fdG9vbHMuYWxpYXNlcy5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFRvb2xzL01peGluc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuQG1peGluIGhpZGVfbGFzdF9tYXJnaW4ge1xuICBwOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206MFxuICB9XG59XG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fdG9vbHMubWl4aW5zLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgVG9vbHMvQ29sb3JcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBmdW5jdGlvbiBjb2xvcigka2V5KSB7XG4gIEBpZiBtYXAtaGFzLWtleSgkY29sb3JzLCAka2V5KSB7XG4gICAgQHJldHVybiBtYXAtZ2V0KCRjb2xvcnMsICRrZXkpO1xuICB9XG5cbiAgQHdhcm4gXCJVbmtub3duIGAjeyRrZXl9YCBpbiAkY29sb3JzLlwiO1xuICBAcmV0dXJuIG51bGw7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3Rvb2xzLmNvbG9yLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgVG9vbHMvQnV0dG9uXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AbWl4aW4gYnV0dG9uLWNvbG9yLWxpZ2h0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgJGJhc2UtdGV4dC1jb2xvci1saWdodDtcbiAgY29sb3I6ICRiYXNlLXRleHQtY29sb3ItbGlnaHQ7XG5cbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtdGV4dC1jb2xvci1saWdodDtcbiAgICBjb2xvcjogJGJhc2UtdGV4dC1jb2xvci1kYXJrO1xuICB9XG59XG5cbkBtaXhpbiBidXR0b24tY29sb3ItZGFyayB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICRiYXNlLXRleHQtY29sb3ItZGFyaztcbiAgY29sb3I6ICRiYXNlLXRleHQtY29sb3ItZGFyaztcblxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiRiYXNlLXRleHQtY29sb3ItZGFyaztcbiAgICBjb2xvcjogJGJhc2UtdGV4dC1jb2xvci1saWdodDtcbiAgfVxufVxuXG5AbWl4aW4gYnV0dG9uLWNvbG9yLXdoaXRlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgY29sb3Iod2hpdGUpO1xuICBjb2xvcjogY29sb3Iod2hpdGUpO1xuXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKHdoaXRlKTtcbiAgICBjb2xvcjogJGJhc2UtdGV4dC1jb2xvci1kYXJrO1xuICB9XG59XG5cbkBtaXhpbiBidXR0b24tY29sb3ItcmVkLWZ1bGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcihyZWQtcGFsZSk7XG4gIGNvbG9yOiBjb2xvcih3aGl0ZSk7XG5cbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKGNvbG9yKHJlZC1wYWxlKSwgMjAlKTtcbiAgICBjb2xvcjogY29sb3Iod2hpdGUpO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3Rvb2xzLmJ1dHRvbi5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNCT1gtU0laSU5HXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIE1vcmUgc2Vuc2libGUgZGVmYXVsdCBib3gtc2l6aW5nOlxuICogY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlXG4gKi9cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbioge1xuXG4gICYsXG4gICY6YmVmb3JlLFxuICAmOmFmdGVyIHtcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICB9XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL2dlbmVyaWMvX2dlbmVyaWMuYm94LXNpemluZy5zY3NzIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjcuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmZvb3RlcixcbmhlYWRlcixcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5maWdjYXB0aW9uLFxuZmlndXJlLFxubWFpbiB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMsIC8qIDEgKi9cbm1lbnUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBTY3JpcHRpbmdcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuY2FudmFzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogSGlkZGVuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy9nZW5lcmljL19nZW5lcmljLm5vcm1hbGl6ZS5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNSRVNFVFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBIHZlcnkgc2ltcGxlIHJlc2V0IHRoYXQgc2l0cyBvbiB0b3Agb2YgTm9ybWFsaXplLmNzcy5cbiAqL1xuXG5ib2R5LFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbmJsb2NrcXVvdGUsIHAsIHByZSxcbmRsLCBkZCwgb2wsIHVsLFxuZmlndXJlLFxuaHIsXG5maWVsZHNldCwgbGVnZW5kIHtcbiAgbWFyZ2luOiAgMDtcbiAgcGFkZGluZzogMDtcbn1cblxuXG4vKipcbiAqIFJlbW92ZSB0cmFpbGluZyBtYXJnaW5zIGZyb20gbmVzdGVkIGxpc3RzLlxuICovXG5cbmxpID4ge1xuXG4gIG9sLFxuICB1bCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG59XG5cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB0YWJsZSBzcGFjaW5nLlxuICovXG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cblxuLyoqXG4gKiAxLiBSZXNldCBDaHJvbWUgYW5kIEZpcmVmb3ggYmVoYXZpb3VyIHdoaWNoIHNldHMgYSBgbWluLXdpZHRoOiBtaW4tY29udGVudDtgXG4gKiAgICBvbiBmaWVsZHNldHMuXG4gKi9cblxuZmllbGRzZXQge1xuICBtaW4td2lkdGg6IDA7IC8qIFsxXSAqL1xuICBib3JkZXI6IDA7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy9nZW5lcmljL19nZW5lcmljLnJlc2V0LnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI1NIQVJFRFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBTaGFyZWQgZGVjbGFyYXRpb25zIGZvciBjZXJ0YWluIGVsZW1lbnRzLlxuICovXG5cbi8qKlxuICogQWx3YXlzIGRlY2xhcmUgbWFyZ2lucyBpbiB0aGUgc2FtZSBkaXJlY3Rpb246XG4gKiBjc3N3aXphcmRyeS5jb20vMjAxMi8wNi9zaW5nbGUtZGlyZWN0aW9uLW1hcmdpbi1kZWNsYXJhdGlvbnNcbiAqL1xuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBzZWxlY3Rvci1saXN0LWNvbW1hLW5ld2xpbmUtYWZ0ZXIgKi9cblxuYWRkcmVzcyxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG5ibG9ja3F1b3RlLCBwLCBwcmUsXG5kbCwgb2wsIHVsLFxuZmlndXJlLFxuaHIsXG50YWJsZSxcbmZpZWxkc2V0IHtcbiAgbWFyZ2luLWJvdHRvbTogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQ7XG59XG5cblxuLyoqXG4gKiBDb25zaXN0ZW50IGluZGVudGF0aW9uIGZvciBsaXN0cy5cbiAqL1xuXG5kZCwgb2wsIHVsIHtcbiAgbWFyZ2luLWxlZnQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0O1xufVxuXG4vKiBzdHlsZWxpbnQtZW5hYmxlIHNlbGVjdG9yLWxpc3QtY29tbWEtbmV3bGluZS1hZnRlciAqL1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3MvZ2VuZXJpYy9fZ2VuZXJpYy5zaGFyZWQuc2NzcyIsIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjUEFHRVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBTaW1wbGUgcGFnZS1sZXZlbCBzZXR1cC5cbiAqXG4gKiAxLiBTZXQgdGhlIGRlZmF1bHQgYGZvbnQtc2l6ZWAgYW5kIGBsaW5lLWhlaWdodGAgZm9yIHRoZSBlbnRpcmUgcHJvamVjdCxcbiAqICAgIHNvdXJjZWQgZnJvbSBvdXIgZGVmYXVsdCB2YXJpYWJsZXMuIFRoZSBgZm9udC1zaXplYCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0XG4gKiAgICBpbiBlbXMsIHRoZSBgbGluZS1oZWlnaHRgIGlzIGNhbGN1bGF0ZWQgdG8gZXhpc3QgdW5pdGxlc3NseS5cbiAqIDIuIEZvcmNlIHNjcm9sbGJhcnMgdG8gYWx3YXlzIGJlIHZpc2libGUgdG8gcHJldmVudCBhd2t3YXJkIMOiwoDCmGp1bXBzw6LCgMKZIHdoZW5cbiAqICAgIG5hdmlnYXRpbmcgYmV0d2VlbiBwYWdlcyB0aGF0IGRvL2RvIG5vdCBoYXZlIGVub3VnaCBjb250ZW50IHRvIHByb2R1Y2VcbiAqICAgIHNjcm9sbGJhcnMgbmF0dXJhbGx5LlxuICogMy4gRW5zdXJlIHRoZSBwYWdlIGFsd2F5cyBmaWxscyBhdCBsZWFzdCB0aGUgZW50aXJlIGhlaWdodCBvZiB0aGUgdmlld3BvcnQuXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogKCRpbnVpdC1nbG9iYWwtZm9udC1zaXplIC8gMTZweCkgKiAxZW07IC8qIFsxXSAqL1xuICBsaW5lLWhlaWdodDogJGludWl0LWdsb2JhbC1saW5lLWhlaWdodCAvICRpbnVpdC1nbG9iYWwtZm9udC1zaXplOyAvKiBbMV0gKi9cbiAgb3ZlcmZsb3cteTogc2Nyb2xsOyAvKiBbMl0gKi9cbiAgbWluLWhlaWdodDogMTAwJTsgLyogWzNdICovXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy9lbGVtZW50cy9fZWxlbWVudHMucGFnZS5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIEVsZW1lbnRzL1BhZ2VcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbmh0bWwsIGJvZHkge1xuICBmb250LWZhbWlseTogJ0hlbHZldGljYScsIHNhbnMtc2VyaWY7XG59XG5cbmh0bWwge1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuYm9keSB7XG5cbn1cblxuYm9keSB7XG4gICY6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgY29udGVudDogJ21vYmlsZSc7XG4gIH1cblxuICBAaW5jbHVkZSBtcSgkZnJvbTogdGFibGV0KSB7XG4gICAgJjphZnRlciB7XG4gICAgICBjb250ZW50OiAndGFibGV0JztcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBtcSgkZnJvbTogZGVza3RvcCkge1xuICAgICY6YWZ0ZXIge1xuICAgICAgY29udGVudDogJ2Rlc2t0b3AnO1xuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIG1xKCRmcm9tOiB3aWRlKSB7XG4gICAgJjphZnRlciB7XG4gICAgICBjb250ZW50OiAnZGVza3RvcCc7XG4gICAgfVxuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX2VsZW1lbnRzLnBhZ2Uuc2NzcyIsIkBjaGFyc2V0IFwiVVRGLThcIjsgLy8gRml4ZXMgYW4gaXNzdWUgd2hlcmUgUnVieSBsb2NhbGUgaXMgbm90IHNldCBwcm9wZXJseVxuICAgICAgICAgICAgICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zYXNzLW1xL3Nhc3MtbXEvcHVsbC8xMFxuXG4vLy8gQmFzZSBmb250IHNpemUgb24gdGhlIGA8Ym9keT5gIGVsZW1lbnRcbi8vLyBAdHlwZSBOdW1iZXIgKHVuaXQpXG4kbXEtYmFzZS1mb250LXNpemU6IDE2cHggIWRlZmF1bHQ7XG5cbi8vLyBSZXNwb25zaXZlIG1vZGVcbi8vL1xuLy8vIFNldCB0byBgZmFsc2VgIHRvIGVuYWJsZSBzdXBwb3J0IGZvciBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEBtZWRpYSBxdWVyaWVzLFxuLy8vIChJRSA8PSA4LCBGaXJlZm94IDw9IDMsIE9wZXJhIDw9IDkpXG4vLy9cbi8vLyBZb3UgY291bGQgY3JlYXRlIGEgc3R5bGVzaGVldCBzZXJ2ZWQgZXhjbHVzaXZlbHkgdG8gb2xkZXIgYnJvd3NlcnMsXG4vLy8gd2hlcmUgQG1lZGlhIHF1ZXJpZXMgYXJlIHJhc3Rlcml6ZWRcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgLy8gb2xkLWllLnNjc3Ncbi8vLyAgJG1xLXJlc3BvbnNpdmU6IGZhbHNlO1xuLy8vICBAaW1wb3J0ICdtYWluJzsgLy8gQG1lZGlhIHF1ZXJpZXMgaW4gdGhpcyBmaWxlIHdpbGwgYmUgcmFzdGVyaXplZCB1cCB0byAkbXEtc3RhdGljLWJyZWFrcG9pbnRcbi8vLyAgICAgICAgICAgICAgICAgICAvLyBsYXJnZXIgYnJlYWtwb2ludHMgd2lsbCBiZSBpZ25vcmVkXG4vLy9cbi8vLyBAdHlwZSBCb29sZWFuXG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNyZXNwb25zaXZlLW1vZGUtb2ZmIERpc2FibGVkIHJlc3BvbnNpdmUgbW9kZSBkb2N1bWVudGF0aW9uXG4kbXEtcmVzcG9uc2l2ZTogdHJ1ZSAhZGVmYXVsdDtcblxuLy8vIEJyZWFrcG9pbnQgbGlzdFxuLy8vXG4vLy8gTmFtZSB5b3VyIGJyZWFrcG9pbnRzIGluIGEgd2F5IHRoYXQgY3JlYXRlcyBhIHViaXF1aXRvdXMgbGFuZ3VhZ2Vcbi8vLyBhY3Jvc3MgdGVhbSBtZW1iZXJzLiBJdCB3aWxsIGltcHJvdmUgY29tbXVuaWNhdGlvbiBiZXR3ZWVuXG4vLy8gc3Rha2Vob2xkZXJzLCBkZXNpZ25lcnMsIGRldmVsb3BlcnMsIGFuZCB0ZXN0ZXJzLlxuLy8vXG4vLy8gQHR5cGUgTWFwXG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNzZWVpbmctdGhlLWN1cnJlbnRseS1hY3RpdmUtYnJlYWtwb2ludCBGdWxsIGRvY3VtZW50YXRpb24gYW5kIGV4YW1wbGVzXG4kbXEtYnJlYWtwb2ludHM6IChcbiAgICBtb2JpbGU6ICAzMjBweCxcbiAgICB0YWJsZXQ6ICA3NDBweCxcbiAgICBkZXNrdG9wOiA5ODBweCxcbiAgICB3aWRlOiAgICAxMzAwcHhcbikgIWRlZmF1bHQ7XG5cbi8vLyBTdGF0aWMgYnJlYWtwb2ludCAoZm9yIGZpeGVkLXdpZHRoIGxheW91dHMpXG4vLy9cbi8vLyBEZWZpbmUgdGhlIGJyZWFrcG9pbnQgZnJvbSAkbXEtYnJlYWtwb2ludHMgdGhhdCBzaG91bGRcbi8vLyBiZSB1c2VkIGFzIHRoZSB0YXJnZXQgd2lkdGggZm9yIHRoZSBmaXhlZC13aWR0aCBsYXlvdXRcbi8vLyAoaS5lLiB3aGVuICRtcS1yZXNwb25zaXZlIGlzIHNldCB0byAnZmFsc2UnKSBpbiBhIG9sZC1pZS5zY3NzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gIC8vIHRhYmxldC1vbmx5LnNjc3Ncbi8vLyAgLy9cbi8vLyAgLy8gSWdub3JlIGFsbCBzdHlsZXMgYWJvdmUgdGFibGV0IGJyZWFrcG9pbnQsXG4vLy8gIC8vIGFuZCBmaXggdGhlIHN0eWxlcyAoZS5nLiBsYXlvdXQpIGF0IHRhYmxldCB3aWR0aFxuLy8vICAkbXEtcmVzcG9uc2l2ZTogZmFsc2U7XG4vLy8gICRtcS1zdGF0aWMtYnJlYWtwb2ludDogdGFibGV0O1xuLy8vICBAaW1wb3J0ICdtYWluJzsgLy8gQG1lZGlhIHF1ZXJpZXMgaW4gdGhpcyBmaWxlIHdpbGwgYmUgcmFzdGVyaXplZCB1cCB0byB0YWJsZXRcbi8vLyAgICAgICAgICAgICAgICAgICAvLyBsYXJnZXIgYnJlYWtwb2ludHMgd2lsbCBiZSBpZ25vcmVkXG4vLy9cbi8vLyBAdHlwZSBTdHJpbmdcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI2FkZGluZy1jdXN0b20tYnJlYWtwb2ludHMgRnVsbCBkb2N1bWVudGF0aW9uIGFuZCBleGFtcGxlc1xuJG1xLXN0YXRpYy1icmVha3BvaW50OiBkZXNrdG9wICFkZWZhdWx0O1xuXG4vLy8gU2hvdyBicmVha3BvaW50cyBpbiB0aGUgdG9wIHJpZ2h0IGNvcm5lclxuLy8vXG4vLy8gSWYgeW91IHdhbnQgdG8gZGlzcGxheSB0aGUgY3VycmVudGx5IGFjdGl2ZSBicmVha3BvaW50IGluIHRoZSB0b3Bcbi8vLyByaWdodCBjb3JuZXIgb2YgeW91ciBzaXRlIGR1cmluZyBkZXZlbG9wbWVudCwgYWRkIHRoZSBicmVha3BvaW50c1xuLy8vIHRvIHRoaXMgbGlzdCwgb3JkZXJlZCBieSB3aWR0aCwgZS5nLiAobW9iaWxlLCB0YWJsZXQsIGRlc2t0b3ApLlxuLy8vXG4vLy8gQHR5cGUgbWFwXG4kbXEtc2hvdy1icmVha3BvaW50czogKCkgIWRlZmF1bHQ7XG5cbi8vLyBDdXN0b21pemUgdGhlIG1lZGlhIHR5cGUgKGUuZy4gYEBtZWRpYSBzY3JlZW5gIG9yIGBAbWVkaWEgcHJpbnRgKVxuLy8vIEJ5IGRlZmF1bHQgc2Fzcy1tcSB1c2VzIGFuIFwiYWxsXCIgbWVkaWEgdHlwZSAoYEBtZWRpYSBhbGwgYW5kIMOiwoDCpmApXG4vLy9cbi8vLyBAdHlwZSBTdHJpbmdcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI2NoYW5naW5nLW1lZGlhLXR5cGUgRnVsbCBkb2N1bWVudGF0aW9uIGFuZCBleGFtcGxlc1xuJG1xLW1lZGlhLXR5cGU6IGFsbCAhZGVmYXVsdDtcblxuLy8vIENvbnZlcnQgcGl4ZWxzIHRvIGVtc1xuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRweCAtIHZhbHVlIHRvIGNvbnZlcnRcbi8vLyBAcGFyYW0ge051bWJlcn0gJGJhc2UtZm9udC1zaXplICgkbXEtYmFzZS1mb250LXNpemUpIC0gYDxib2R5PmAgZm9udCBzaXplXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICRmb250LXNpemUtaW4tZW1zOiBtcS1weDJlbSgxNnB4KTtcbi8vLyAgcCB7IGZvbnQtc2l6ZTogbXEtcHgyZW0oMTZweCk7IH1cbi8vL1xuLy8vIEByZXF1aXJlcyAkbXEtYmFzZS1mb250LXNpemVcbi8vLyBAcmV0dXJucyB7TnVtYmVyfVxuQGZ1bmN0aW9uIG1xLXB4MmVtKCRweCwgJGJhc2UtZm9udC1zaXplOiAkbXEtYmFzZS1mb250LXNpemUpIHtcbiAgICBAaWYgdW5pdGxlc3MoJHB4KSB7XG4gICAgICAgIEB3YXJuIFwiQXNzdW1pbmcgI3skcHh9IHRvIGJlIGluIHBpeGVscywgYXR0ZW1wdGluZyB0byBjb252ZXJ0IGl0IGludG8gcGl4ZWxzLlwiO1xuICAgICAgICBAcmV0dXJuIG1xLXB4MmVtKCRweCAqIDFweCwgJGJhc2UtZm9udC1zaXplKTtcbiAgICB9IEBlbHNlIGlmIHVuaXQoJHB4KSA9PSBlbSB7XG4gICAgICAgIEByZXR1cm4gJHB4O1xuICAgIH1cbiAgICBAcmV0dXJuICgkcHggLyAkYmFzZS1mb250LXNpemUpICogMWVtO1xufVxuXG4vLy8gR2V0IGEgYnJlYWtwb2ludCdzIHdpZHRoXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG5hbWUgLSBOYW1lIG9mIHRoZSBicmVha3BvaW50LiBPbmUgb2YgJG1xLWJyZWFrcG9pbnRzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICR0YWJsZXQtd2lkdGg6IG1xLWdldC1icmVha3BvaW50LXdpZHRoKHRhYmxldCk7XG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiBtcS1nZXQtYnJlYWtwb2ludC13aWR0aChkZXNrdG9wKSkge31cbi8vL1xuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRtcS1icmVha3BvaW50c1xuLy8vXG4vLy8gQHJldHVybnMge051bWJlcn0gVmFsdWUgaW4gcGl4ZWxzXG5AZnVuY3Rpb24gbXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJG5hbWUsICRicmVha3BvaW50czogJG1xLWJyZWFrcG9pbnRzKSB7XG4gICAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJG5hbWUpIHtcbiAgICAgICAgQHJldHVybiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgICBAd2FybiBcIkJyZWFrcG9pbnQgI3skbmFtZX0gd2Fzbid0IGZvdW5kIGluICRicmVha3BvaW50cy5cIjtcbiAgICB9XG59XG5cbi8vLyBNZWRpYSBRdWVyeSBtaXhpblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBCb29sZWFufSAkZnJvbSAoZmFsc2UpIC0gT25lIG9mICRtcS1icmVha3BvaW50c1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgQm9vbGVhbn0gJHVudGlsIChmYWxzZSkgLSBPbmUgb2YgJG1xLWJyZWFrcG9pbnRzXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBCb29sZWFufSAkYW5kIChmYWxzZSkgLSBBZGRpdGlvbmFsIG1lZGlhIHF1ZXJ5IHBhcmFtZXRlcnNcbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lZGlhLXR5cGUgKCRtcS1tZWRpYS10eXBlKSAtIE1lZGlhIHR5cGU6IHNjcmVlbiwgcHJpbnTDosKAwqZcbi8vL1xuLy8vIEBpZ25vcmUgVW5kb2N1bWVudGVkIEFQSSwgZm9yIGFkdmFuY2VkIHVzZSBvbmx5OlxuLy8vIEBpZ25vcmUgQHBhcmFtIHtNYXB9ICRicmVha3BvaW50cyAoJG1xLWJyZWFrcG9pbnRzKVxuLy8vIEBpZ25vcmUgQHBhcmFtIHtTdHJpbmd9ICRzdGF0aWMtYnJlYWtwb2ludCAoJG1xLXN0YXRpYy1icmVha3BvaW50KVxuLy8vXG4vLy8gQGNvbnRlbnQgc3R5bGluZyBydWxlcywgd3JhcHBlZCBpbnRvIGEgQG1lZGlhIHF1ZXJ5IHdoZW4gJHJlc3BvbnNpdmUgaXMgdHJ1ZVxuLy8vXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJG1xLW1lZGlhLXR5cGVcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbXEtYnJlYWtwb2ludHNcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbXEtc3RhdGljLWJyZWFrcG9pbnRcbi8vLyBAcmVxdWlyZXMge2Z1bmN0aW9ufSBtcS1weDJlbVxuLy8vIEByZXF1aXJlcyB7ZnVuY3Rpb259IG1xLWdldC1icmVha3BvaW50LXdpZHRoXG4vLy9cbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI3Jlc3BvbnNpdmUtbW9kZS1vbi1kZWZhdWx0IEZ1bGwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgLmVsZW1lbnQge1xuLy8vICAgIEBpbmNsdWRlIG1xKCRmcm9tOiBtb2JpbGUpIHtcbi8vLyAgICAgIGNvbG9yOiByZWQ7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKCR1bnRpbDogdGFibGV0KSB7XG4vLy8gICAgICBjb2xvcjogYmx1ZTtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEobW9iaWxlLCB0YWJsZXQpIHtcbi8vLyAgICAgIGNvbG9yOiBncmVlbjtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEoJGZyb206IHRhYmxldCwgJGFuZDogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScpIHtcbi8vLyAgICAgIGNvbG9yOiB0ZWFsO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcSg5NTBweCkge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKHRhYmxldCwgJG1lZGlhLXR5cGU6IHNjcmVlbikge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICAgIC8vIEFkdmFuY2VkIHVzZTpcbi8vLyAgICAkbXktYnJlYWtwb2ludHM6IChMOiA5MDBweCwgWEw6IDEyMDBweCk7XG4vLy8gICAgQGluY2x1ZGUgbXEoTCwgJGJyZWFrcG9pbnRzOiAkbXktYnJlYWtwb2ludHMsICRzdGF0aWMtYnJlYWtwb2ludDogTCkge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICB9XG5AbWl4aW4gbXEoXG4gICAgJGZyb206IGZhbHNlLFxuICAgICR1bnRpbDogZmFsc2UsXG4gICAgJGFuZDogZmFsc2UsXG4gICAgJG1lZGlhLXR5cGU6ICRtcS1tZWRpYS10eXBlLFxuICAgICRicmVha3BvaW50czogJG1xLWJyZWFrcG9pbnRzLFxuICAgICRyZXNwb25zaXZlOiAkbXEtcmVzcG9uc2l2ZSxcbiAgICAkc3RhdGljLWJyZWFrcG9pbnQ6ICRtcS1zdGF0aWMtYnJlYWtwb2ludFxuKSB7XG4gICAgJG1pbi13aWR0aDogMDtcbiAgICAkbWF4LXdpZHRoOiAwO1xuICAgICRtZWRpYS1xdWVyeTogJyc7XG5cbiAgICAvLyBGcm9tOiB0aGlzIGJyZWFrcG9pbnQgKGluY2x1c2l2ZSlcbiAgICBAaWYgJGZyb20ge1xuICAgICAgICBAaWYgdHlwZS1vZigkZnJvbSkgPT0gbnVtYmVyIHtcbiAgICAgICAgICAgICRtaW4td2lkdGg6IG1xLXB4MmVtKCRmcm9tKTtcbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgICAkbWluLXdpZHRoOiBtcS1weDJlbShtcS1nZXQtYnJlYWtwb2ludC13aWR0aCgkZnJvbSwgJGJyZWFrcG9pbnRzKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBVbnRpbDogdGhhdCBicmVha3BvaW50IChleGNsdXNpdmUpXG4gICAgQGlmICR1bnRpbCB7XG4gICAgICAgIEBpZiB0eXBlLW9mKCR1bnRpbCkgPT0gbnVtYmVyIHtcbiAgICAgICAgICAgICRtYXgtd2lkdGg6IG1xLXB4MmVtKCR1bnRpbCk7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJG1heC13aWR0aDogbXEtcHgyZW0obXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJHVudGlsLCAkYnJlYWtwb2ludHMpKSAtIC4wMWVtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVzcG9uc2l2ZSBzdXBwb3J0IGlzIGRpc2FibGVkLCByYXN0ZXJpemUgdGhlIG91dHB1dCBvdXRzaWRlIEBtZWRpYSBibG9ja3NcbiAgICAvLyBUaGUgYnJvd3NlciB3aWxsIHJlbHkgb24gdGhlIGNhc2NhZGUgaXRzZWxmLlxuICAgIEBpZiAkcmVzcG9uc2l2ZSA9PSBmYWxzZSB7XG4gICAgICAgICRzdGF0aWMtYnJlYWtwb2ludC13aWR0aDogbXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJHN0YXRpYy1icmVha3BvaW50LCAkYnJlYWtwb2ludHMpO1xuICAgICAgICAkdGFyZ2V0LXdpZHRoOiBtcS1weDJlbSgkc3RhdGljLWJyZWFrcG9pbnQtd2lkdGgpO1xuXG4gICAgICAgIC8vIE91dHB1dCBvbmx5IHJ1bGVzIHRoYXQgc3RhcnQgYXQgb3Igc3BhbiBvdXIgdGFyZ2V0IHdpZHRoXG4gICAgICAgIEBpZiAoXG4gICAgICAgICAgICAkYW5kID09IGZhbHNlXG4gICAgICAgICAgICBhbmQgJG1pbi13aWR0aCA8PSAkdGFyZ2V0LXdpZHRoXG4gICAgICAgICAgICBhbmQgKFxuICAgICAgICAgICAgICAgICR1bnRpbCA9PSBmYWxzZSBvciAkbWF4LXdpZHRoID49ICR0YXJnZXQtd2lkdGhcbiAgICAgICAgICAgIClcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJlc3BvbnNpdmUgc3VwcG9ydCBpcyBlbmFibGVkLCBvdXRwdXQgcnVsZXMgaW5zaWRlIEBtZWRpYSBxdWVyaWVzXG4gICAgQGVsc2Uge1xuICAgICAgICBAaWYgJG1pbi13aWR0aCAhPSAwIHsgJG1lZGlhLXF1ZXJ5OiAnI3skbWVkaWEtcXVlcnl9IGFuZCAobWluLXdpZHRoOiAjeyRtaW4td2lkdGh9KSc7IH1cbiAgICAgICAgQGlmICRtYXgtd2lkdGggIT0gMCB7ICRtZWRpYS1xdWVyeTogJyN7JG1lZGlhLXF1ZXJ5fSBhbmQgKG1heC13aWR0aDogI3skbWF4LXdpZHRofSknOyB9XG4gICAgICAgIEBpZiAkYW5kICAgICAgICAgICAgeyAkbWVkaWEtcXVlcnk6ICcjeyRtZWRpYS1xdWVyeX0gYW5kICN7JGFuZH0nOyB9XG5cbiAgICAgICAgLy8gUmVtb3ZlIHVubmVjZXNzYXJ5IG1lZGlhIHF1ZXJ5IHByZWZpeCAnYWxsIGFuZCAnXG4gICAgICAgIEBpZiAoJG1lZGlhLXR5cGUgPT0gJ2FsbCcgYW5kICRtZWRpYS1xdWVyeSAhPSAnJykge1xuICAgICAgICAgICAgJG1lZGlhLXR5cGU6ICcnO1xuICAgICAgICAgICAgJG1lZGlhLXF1ZXJ5OiBzdHItc2xpY2UodW5xdW90ZSgkbWVkaWEtcXVlcnkpLCA2KTtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAjeyRtZWRpYS10eXBlICsgJG1lZGlhLXF1ZXJ5fSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8vIEFkZCBhIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbmFtZSAtIE5hbWUgb2YgdGhlIGJyZWFrcG9pbnRcbi8vLyBAcGFyYW0ge051bWJlcn0gJHdpZHRoIC0gV2lkdGggb2YgdGhlIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRtcS1icmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICBAaW5jbHVkZSBtcS1hZGQtYnJlYWtwb2ludCh0dnNjcmVlbiwgMTkyMHB4KTtcbi8vLyAgQGluY2x1ZGUgbXEodHZzY3JlZW4pIHt9XG5AbWl4aW4gbXEtYWRkLWJyZWFrcG9pbnQoJG5hbWUsICR3aWR0aCkge1xuICAgICRuZXctYnJlYWtwb2ludDogKCRuYW1lOiAkd2lkdGgpO1xuICAgICRtcS1icmVha3BvaW50czogbWFwLW1lcmdlKCRtcS1icmVha3BvaW50cywgJG5ldy1icmVha3BvaW50KSAhZ2xvYmFsO1xufVxuXG4vLy8gU2hvdyB0aGUgYWN0aXZlIGJyZWFrcG9pbnQgaW4gdGhlIHRvcCByaWdodCBjb3JuZXIgb2YgdGhlIHZpZXdwb3J0XG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNzZWVpbmctdGhlLWN1cnJlbnRseS1hY3RpdmUtYnJlYWtwb2ludFxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkc2hvdy1icmVha3BvaW50cyAoJG1xLXNob3ctYnJlYWtwb2ludHMpIC0gTGlzdCBvZiBicmVha3BvaW50cyB0byBzaG93IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyXG4vLy8gQHBhcmFtIHtNYXB9ICRicmVha3BvaW50cyAoJG1xLWJyZWFrcG9pbnRzKSAtIEJyZWFrcG9pbnQgbmFtZXMgYW5kIHNpemVzXG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbXEtYnJlYWtwb2ludHNcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbXEtc2hvdy1icmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAvLyBTaG93IGJyZWFrcG9pbnRzIHVzaW5nIGdsb2JhbCBzZXR0aW5nc1xuLy8vICBAaW5jbHVkZSBtcS1zaG93LWJyZWFrcG9pbnRzO1xuLy8vXG4vLy8gIC8vIFNob3cgYnJlYWtwb2ludHMgdXNpbmcgY3VzdG9tIHNldHRpbmdzXG4vLy8gIEBpbmNsdWRlIG1xLXNob3ctYnJlYWtwb2ludHMoKEwsIFhMKSwgKFM6IDMwMHB4LCBMOiA4MDBweCwgWEw6IDEyMDBweCkpO1xuQG1peGluIG1xLXNob3ctYnJlYWtwb2ludHMoJHNob3ctYnJlYWtwb2ludHM6ICRtcS1zaG93LWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludHM6ICRtcS1icmVha3BvaW50cykge1xuICAgIGJvZHk6YmVmb3JlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZDRjhFMztcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNGQkVFRDU7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI0ZCRUVENTtcbiAgICAgICAgY29sb3I6ICNDMDk4NTM7XG4gICAgICAgIGZvbnQ6IHNtYWxsLWNhcHRpb247XG4gICAgICAgIHBhZGRpbmc6IDNweCA2cHg7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHotaW5kZXg6IDEwMDtcblxuICAgICAgICAvLyBMb29wIHRocm91Z2ggdGhlIGJyZWFrcG9pbnRzIHRoYXQgc2hvdWxkIGJlIHNob3duXG4gICAgICAgIEBlYWNoICRzaG93LWJyZWFrcG9pbnQgaW4gJHNob3ctYnJlYWtwb2ludHMge1xuICAgICAgICAgICAgJHdpZHRoOiBtcS1nZXQtYnJlYWtwb2ludC13aWR0aCgkc2hvdy1icmVha3BvaW50LCAkYnJlYWtwb2ludHMpO1xuICAgICAgICAgICAgQGluY2x1ZGUgbXEoJHNob3ctYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHMpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIiN7JHNob3ctYnJlYWtwb2ludH0gw6LCicKlICN7JHdpZHRofSAoI3ttcS1weDJlbSgkd2lkdGgpfSlcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQGlmIGxlbmd0aCgkbXEtc2hvdy1icmVha3BvaW50cykgPiAwIHtcbiAgICBAaW5jbHVkZSBtcS1zaG93LWJyZWFrcG9pbnRzO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvc2Fzcy1tcS9fbXEuc2NzcyIsIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjSU1BR0VTXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEZsdWlkIGltYWdlcyBmb3IgcmVzcG9uc2l2ZSBwdXJwb3Nlcy5cbiAqIDIuIE9mZnNldCBgYWx0YCB0ZXh0IGZyb20gc3Vycm91bmRpbmcgY29weS5cbiAqIDMuIFNldHRpbmcgYHZlcnRpY2FsLWFsaWduYCByZW1vdmVzIHRoZSB3aGl0ZXNwYWNlIHRoYXQgYXBwZWFycyB1bmRlciBgaW1nYFxuICogICAgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBkcm9wcGVkIGludG8gYSBwYWdlIGFzLWlzLiBTYWZlciBhbHRlcm5hdGl2ZSB0b1xuICogICAgdXNpbmcgYGRpc3BsYXk6IGJsb2NrO2AuXG4gKi9cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiBbMV0gKi9cbiAgZm9udC1zdHlsZTogaXRhbGljOyAvKiBbMl0gKi9cbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLyogWzNdICovXG59XG5cblxuLyoqXG4gKiAxLiBJZiBhIGB3aWR0aGAgYW5kL29yIGBoZWlnaHRgIGF0dHJpYnV0ZSBoYXZlIGJlZW4gZXhwbGljaXRseSBkZWZpbmVkLCBsZXTDosKAwplzXG4gKiAgICBub3QgbWFrZSB0aGUgaW1hZ2UgZmx1aWQuXG4gKi9cblxuaW1nW3dpZHRoXSwgLyogWzFdICovXG5pbWdbaGVpZ2h0XSB7ICAvKiBbMV0gKi9cbiAgbWF4LXdpZHRoOiBub25lO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3MvZWxlbWVudHMvX2VsZW1lbnRzLmltYWdlcy5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNUQUJMRVNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gRW5zdXJlIHRhYmxlcyBmaWxsIHVwIGFzIG11Y2ggc3BhY2UgYXMgcG9zc2libGUuXG4gKi9cblxudGFibGUge1xuICB3aWR0aDogMTAwJTsgLyogWzFdICovXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy9lbGVtZW50cy9fZWxlbWVudHMudGFibGVzLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgRWxlbWVudHMvTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cbiAgJjpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX2VsZW1lbnRzLmxpbmtzLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI1dSQVBQRVJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUGFnZS1sZXZlbCBjb25zdHJhaW5pbmcgYW5kIHdyYXBwaW5nIGVsZW1lbnRzLlxuICovXG5cbiRpbnVpdC13cmFwcGVyLXdpZHRoOiAxMjAwcHggIWRlZmF1bHQ7XG5cbi8qIHN0eWxlbGludC1kaXNhYmxlICovXG5AaWYgKHR5cGUtb2YoJGludWl0LXdyYXBwZXItd2lkdGgpICE9IG51bWJlcikge1xuICBAZXJyb3IgXCJgI3skaW51aXQtd3JhcHBlci13aWR0aH1gIG5lZWRzIHRvIGJlIGEgbnVtYmVyLlwiXG59XG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG5cbi5vLXdyYXBwZXIge1xuICBAaW5jbHVkZSBpbnVpdC1jbGVhcmZpeCgpO1xuICBwYWRkaW5nLXJpZ2h0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdDtcbiAgcGFkZGluZy1sZWZ0OiAgJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQ7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6ICBhdXRvO1xuICBtYXgtd2lkdGg6ICRpbnVpdC13cmFwcGVyLXdpZHRoO1xufVxuXG5cblxuXG5cbi8qIFNpemUgdmFyaWFudHMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby13cmFwcGVyLS10aW55IHtcbiAgcGFkZGluZy1yaWdodDogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtdGlueTtcbiAgcGFkZGluZy1sZWZ0OiAgJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtdGlueTtcbn1cblxuLm8td3JhcHBlci0tc21hbGwge1xuICBwYWRkaW5nLXJpZ2h0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1zbWFsbDtcbiAgcGFkZGluZy1sZWZ0OiAgJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtc21hbGw7XG59XG5cbi5vLXdyYXBwZXItLWxhcmdlIHtcbiAgcGFkZGluZy1yaWdodDogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtbGFyZ2U7XG4gIHBhZGRpbmctbGVmdDogICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LWxhcmdlO1xufVxuXG4uby13cmFwcGVyLS1odWdlIHtcbiAgcGFkZGluZy1yaWdodDogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtaHVnZTtcbiAgcGFkZGluZy1sZWZ0OiAgJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtaHVnZTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL29iamVjdHMvX29iamVjdHMud3JhcHBlci5zY3NzIiwiLy8vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICAgI0NMRUFSRklYXG4vLyAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vLyBNaXhpbiB0byBkcm9wIG1pY3JvIGNsZWFyZml4IGludG8gYSBzZWxlY3Rvci4gRnVydGhlciByZWFkaW5nOlxuLy8gaHR0cDovL3d3dy5jc3Ntb2pvLmNvbS90aGUtdmVyeS1sYXRlc3QtY2xlYXJmaXgtcmVsb2FkZWQvXG4vL1xuLy8gLnVzYWdlIHtcbi8vICAgQGluY2x1ZGUgaW51aXQtY2xlYXJmaXgoKTtcbi8vIH1cbkBtaXhpbiBpbnVpdC1jbGVhcmZpeCgpIHtcblxuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICBjbGVhcjogYm90aCAhaW1wb3J0YW50O1xuICB9XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL3Rvb2xzL190b29scy5jbGVhcmZpeC5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIE9iamVjdHMvV3JhcHBlclxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLm8td3JhcHBlciB7XG4gIG1heC13aWR0aDpub25lO1xuICBwYWRkaW5nLWxlZnQ6ICR1bml0O1xuICBwYWRkaW5nLXJpZ2h0OiAkdW5pdDtcbn1cblxuLm8td3JhcHBlci0tbGFyZ2Uge1xuICBAaW5jbHVkZSBtcSgkZnJvbTp0YWJsZXQpIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAkdW5pdC1sYXJnZTtcbiAgICBwYWRkaW5nLWxlZnQ6ICAkdW5pdC1sYXJnZTtcbiAgfVxufVxuXG4uby13cmFwcGVyLS1odWdlIHtcbiAgQGluY2x1ZGUgbXEoJGZyb206dGFibGV0KSB7XG4gICAgcGFkZGluZy1yaWdodDogJHVuaXQtbGFyZ2U7XG4gICAgcGFkZGluZy1sZWZ0OiAgJHVuaXQtbGFyZ2U7XG4gIH1cblxuICBAaW5jbHVkZSBtcSgkZnJvbTpkZXNrdG9wKSB7XG4gICAgcGFkZGluZy1yaWdodDogJHVuaXQtaHVnZTtcbiAgICBwYWRkaW5nLWxlZnQ6ICAkdW5pdC1odWdlO1xuICB9XG59XG5cbi5vLXdyYXBwZXItLWZsdXNoLW1vYmlsZSB7XG4gIEBpbmNsdWRlIG1xKCR1bnRpbDp0YWJsZXQpIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL19vYmplY3RzLndyYXBwZXIuc2NzcyIsIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjTEFZT1VUXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEdyaWQtbGlrZSBsYXlvdXQgc3lzdGVtLlxuICpcbiAqIFRoZSBsYXlvdXQgb2JqZWN0IHByb3ZpZGVzIHVzIHdpdGggYSBjb2x1bW4tc3R5bGUgbGF5b3V0IHN5c3RlbS4gVGhpcyBmaWxlXG4gKiBjb250YWlucyB0aGUgYmFzaWMgc3RydWN0dXJhbCBlbGVtZW50cywgYnV0IGNsYXNzZXMgc2hvdWxkIGJlIGNvbXBsZW1lbnRlZFxuICogd2l0aCB3aWR0aCB1dGlsaXRpZXMsIGZvciBleGFtcGxlOlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0XCI+XG4gKiAgICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTEvMlwiPlxuICogICAgIDwvZGl2PlxuICogICAgIDxkaXYgY2xhc3M9XCJvLWxheW91dF9faXRlbSAgdS0xLzJcIj5cbiAqICAgICA8L2Rpdj5cbiAqICAgPC9kaXY+XG4gKlxuICogVGhlIGFib3ZlIHdpbGwgY3JlYXRlIGEgdHdvLWNvbHVtbiBzdHJ1Y3R1cmUgaW4gd2hpY2ggZWFjaCBjb2x1bW4gd2lsbFxuICogZmx1aWRseSBmaWxsIGhhbGYgb2YgdGhlIHdpZHRoIG9mIHRoZSBwYXJlbnQuIFdlIGNhbiBoYXZlIG1vcmUgY29tcGxleFxuICogc3lzdGVtczpcbiAqXG4gKiAgIDxkaXYgY2xhc3M9XCJvLWxheW91dFwiPlxuICogICAgIDxkaXYgY2xhc3M9XCJvLWxheW91dF9faXRlbSAgdS0xLzEgIHUtMS8zQG1lZGl1bVwiPlxuICogICAgIDwvZGl2PlxuICogICAgIDxkaXYgY2xhc3M9XCJvLWxheW91dF9faXRlbSAgdS0xLzIgIHUtMS8zQG1lZGl1bVwiPlxuICogICAgIDwvZGl2PlxuICogICAgIDxkaXYgY2xhc3M9XCJvLWxheW91dF9faXRlbSAgdS0xLzIgIHUtMS8zQG1lZGl1bVwiPlxuICogICAgIDwvZGl2PlxuICogICA8L2Rpdj5cbiAqXG4gKiBUaGUgYWJvdmUgd2lsbCBjcmVhdGUgYSBzeXN0ZW0gaW4gd2hpY2ggdGhlIGZpcnN0IGl0ZW0gd2lsbCBiZSAxMDAlIHdpZHRoXG4gKiB1bnRpbCB3ZSBlbnRlciBvdXIgbWVkaXVtIGJyZWFrcG9pbnQsIHdoZW4gaXQgd2lsbCBiZWNvbWUgMzMuMzMzJSB3aWR0aC4gVGhlXG4gKiBzZWNvbmQgYW5kIHRoaXJkIGl0ZW1zIHdpbGwgYmUgNTAlIG9mIHRoZWlyIHBhcmVudCwgdW50aWwgdGhleSBhbHNvIGJlY29tZVxuICogMzMuMzMzJSB3aWR0aCBhdCB0aGUgbWVkaXVtIGJyZWFrcG9pbnQuXG4gKlxuICogV2UgY2FuIGFsc28gbWFuaXB1bGF0ZSBlbnRpcmUgbGF5b3V0IHN5c3RlbXMgYnkgYWRkaW5nIGEgc2VyaWVzIG9mIG1vZGlmaWVyc1xuICogdG8gdGhlIGAuby1sYXlvdXRgIGJsb2NrLiBGb3IgZXhhbXBsZTpcbiAqXG4gKiAgIDxkaXYgY2xhc3M9XCJvLWxheW91dCAgby1sYXlvdXQtLXJldmVyc2VcIj5cbiAqXG4gKiBUaGlzIHdpbGwgcmV2ZXJzZSB0aGUgZGlzcGxheWVkIG9yZGVyIG9mIHRoZSBzeXN0ZW0gc28gdGhhdCBpdCBydW5zIGluIHRoZVxuICogb3Bwb3NpdGUgb3JkZXIgdG8gb3VyIHNvdXJjZSwgZWZmZWN0aXZlbHkgZmxpcHBpbmcgdGhlIHN5c3RlbSBvdmVyLlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0ICBvLWxheW91dC0tW3JpZ2h0fGNlbnRlcl1cIj5cbiAqXG4gKiBUaGlzIHdpbGwgY2F1c2UgdGhlIHN5c3RlbSB0byBmaWxsIHVwIGZyb20gZWl0aGVyIHRoZSBjZW50cmUgb3IgdGhlIHJpZ2h0XG4gKiBoYW5kIHNpZGUuIERlZmF1bHQgYmVoYXZpb3VyIGlzIHRvIGZpbGwgdXAgdGhlIGxheW91dCBzeXN0ZW0gZnJvbSB0aGUgbGVmdC5cbiAqXG4gKiBUaGVyZSBhcmUgcGxlbnR5IG1vcmUgb3B0aW9ucyBhdmFpbGFibGUgdG8gdXM6IGV4cGxvcmUgdGhlbSBiZWxvdy5cbiAqL1xuXG4vLyBCeSBkZWZhdWx0IHdlIHVzZSB0aGUgYGZvbnQtc2l6ZTogMDtgIHRyaWNrIHRvIHJlbW92ZSB3aGl0ZXNwYWNlIGJldHdlZW5cbi8vIGl0ZW1zLiBTZXQgdGhpcyB0byB0cnVlIGluIG9yZGVyIHRvIHVzZSBhIG1hcmt1cC1iYXNlZCBzdHJhdGVneSBsaWtlXG4vLyBjb21tZW50aW5nIG91dCB3aGl0ZXNwYWNlIG9yIG1pbmlmeWluZyBIVE1MLlxuJGludWl0LXVzZS1tYXJrdXAtZml4OiBmYWxzZSAhZGVmYXVsdDtcblxuXG5cblxuXG4vKiBEZWZhdWx0L21hbmRhdG9yeSBjbGFzc2VzLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBbGxvd3MgdXMgdG8gdXNlIHRoZSBsYXlvdXQgb2JqZWN0IG9uIGFueSB0eXBlIG9mIGVsZW1lbnQuXG4gKiAyLiBXZSBuZWVkIHRvIGRlZmVuc2l2ZWx5IHJlc2V0IGFueSBib3gtbW9kZWwgcHJvcGVydGllcy5cbiAqIDMuIFVzZSB0aGUgbmVnYXRpdmUgbWFyZ2luIHRyaWNrIGZvciBtdWx0aS1yb3cgZ3JpZHM6XG4gKiAgICBodHRwOi8vY3Nzd2l6YXJkcnkuY29tLzIwMTEvMDgvYnVpbGRpbmctYmV0dGVyLWdyaWQtc3lzdGVtcy9cbiAqL1xuXG4uby1sYXlvdXQge1xuICBkaXNwbGF5OiBibG9jazsgLyogWzFdICovXG4gIG1hcmdpbjogIDA7IC8qIFsyXSAqL1xuICBwYWRkaW5nOiAwOyAvKiBbMl0gKi9cbiAgbGlzdC1zdHlsZTogbm9uZTsgLyogWzFdICovXG4gIG1hcmdpbi1sZWZ0OiAtJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQ7IC8qIFszXSAqL1xuXG4gIEBpZiAoJGludWl0LXVzZS1tYXJrdXAtZml4ID09IGZhbHNlKSB7XG4gICAgZm9udC1zaXplOiAwO1xuICB9XG5cbn1cblxuXG4gIC8qKlxuICAgKiAxLiBSZXF1aXJlZCBpbiBvcmRlciB0byBjb21iaW5lIGZsdWlkIHdpZHRocyB3aXRoIGZpeGVkIGd1dHRlcnMuXG4gICAqIDIuIEFsbG93cyB1cyB0byBtYW5pcHVsYXRlIGdyaWRzIHZlcnRpY2FsbHksIHdpdGggdGV4dC1sZXZlbCBwcm9wZXJ0aWVzLFxuICAgKiAgICBldGMuXG4gICAqIDMuIERlZmF1bHQgaXRlbSBhbGlnbm1lbnQgaXMgd2l0aCB0aGUgdG9wcyBvZiBlYWNoIG90aGVyLCBsaWtlIG1vc3RcbiAgICogICAgdHJhZGl0aW9uYWwgZ3JpZC9sYXlvdXQgc3lzdGVtcy5cbiAgICogNC4gQnkgZGVmYXVsdCwgYWxsIGxheW91dCBpdGVtcyBhcmUgZnVsbC13aWR0aCAobW9iaWxlIGZpcnN0KS5cbiAgICogNS4gR3V0dGVycyBwcm92aWRlZCBieSBsZWZ0IHBhZGRpbmc6XG4gICAqICAgIGh0dHA6Ly9jc3N3aXphcmRyeS5jb20vMjAxMS8wOC9idWlsZGluZy1iZXR0ZXItZ3JpZC1zeXN0ZW1zL1xuICAgKiA2LiBGYWxsYmFjayBmb3Igb2xkIElFcyBub3Qgc3VwcG9ydGluZyBgcmVtYCB2YWx1ZXMuXG4gICAqL1xuXG4gIC5vLWxheW91dF9faXRlbSB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogWzFdICovXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiBbMl0gKi9cbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAvKiBbM10gKi9cbiAgICB3aWR0aDogMTAwJTsgLyogWzRdICovXG4gICAgcGFkZGluZy1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdDsgLyogWzVdICovXG5cbiAgICBAaWYgKCRpbnVpdC11c2UtbWFya3VwLWZpeCA9PSBmYWxzZSkge1xuICAgICAgZm9udC1zaXplOiAkaW51aXQtZ2xvYmFsLWZvbnQtc2l6ZTsgLyogWzZdICovXG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgfVxuXG4gIH1cblxuXG5cblxuXG4vKiBHdXR0ZXIgc2l6ZSBtb2RpZmllcnMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby1sYXlvdXQtLWZsdXNoIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG5cbiAgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxuXG59XG5cblxuLm8tbGF5b3V0LS10aW55IHtcbiAgbWFyZ2luLWxlZnQ6IC0kaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC10aW55O1xuXG4gID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgICBwYWRkaW5nLWxlZnQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXRpbnk7XG4gIH1cblxufVxuXG5cbi5vLWxheW91dC0tc21hbGwge1xuICBtYXJnaW4tbGVmdDogLSRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXNtYWxsO1xuXG4gID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgICBwYWRkaW5nLWxlZnQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXNtYWxsO1xuICB9XG5cbn1cblxuXG4uby1sYXlvdXQtLWxhcmdlIHtcbiAgbWFyZ2luLWxlZnQ6IC0kaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1sYXJnZTtcblxuICA+IC5vLWxheW91dF9faXRlbSB7XG4gICAgcGFkZGluZy1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1sYXJnZTtcbiAgfVxuXG59XG5cblxuLm8tbGF5b3V0LS1odWdlIHtcbiAgbWFyZ2luLWxlZnQ6IC0kaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1odWdlO1xuXG4gID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgICBwYWRkaW5nLWxlZnQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LWh1Z2U7XG4gIH1cblxufVxuXG5cblxuXG4vKiBWZXJ0aWNhbCBhbGlnbm1lbnQgbW9kaWZpZXJzLlxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBbGlnbiBhbGwgZ3JpZCBpdGVtcyB0byB0aGUgbWlkZGxlcyBvZiBlYWNoIG90aGVyLlxuICovXG5cbi5vLWxheW91dC0tbWlkZGxlIHtcblxuICA+IC5vLWxheW91dF9faXRlbSB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgfVxuXG59XG5cblxuLyoqXG4gKiBBbGlnbiBhbGwgZ3JpZCBpdGVtcyB0byB0aGUgYm90dG9tcyBvZiBlYWNoIG90aGVyLlxuICovXG5cbi5vLWxheW91dC0tYm90dG9tIHtcblxuICA+IC5vLWxheW91dF9faXRlbSB7XG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgfVxuXG59XG5cblxuLyoqXG4gKiBTdHJldGNoIGFsbCBncmlkIGl0ZW1zIG9mIGVhY2ggcm93IHRvIGhhdmUgYW4gZXF1YWwtaGVpZ2h0LlxuICogUGxlYXNlIGJlIGF3YXJlIHRoYXQgdGhpcyBtb2RpZmllciBjbGFzcyBkb2Vzbid0IHRha2UgYW55IGVmZmVjdCBpbiBJRTkgYW5kXG4gKiBiZWxvdyBhbmQgb3RoZXIgb2xkZXIgYnJvd3NlcnMgZHVlIHRvIHRoZSBsYWNrIG9mIGBkaXNwbGF5OiBmbGV4YCBzdXBwb3J0LlxuICovXG5cbi5vLWxheW91dC0tc3RyZXRjaCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcblxuICA+IC5vLWxheW91dF9faXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG59XG5cblxuXG5cblxuLyogRmlsbCBvcmRlciBtb2RpZmllcnMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEZpbGwgdXAgdGhlIGxheW91dCBzeXN0ZW0gZnJvbSB0aGUgY2VudHJlLlxuICovXG5cbi5vLWxheW91dC0tY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gID4gLm8tbGF5b3V0X19pdGVtIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG5cbn1cblxuXG4vKipcbiAqIEZpbGwgdXAgdGhlIGxheW91dCBzeXN0ZW0gZnJvbSB0aGUgcmlnaHQtaGFuZCBzaWRlLlxuICovXG5cbi5vLWxheW91dC0tcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcblxuICA+IC5vLWxheW91dF9faXRlbSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuXG59XG5cblxuLyoqXG4gKiBGaWxsIHVwIHRoZSBsYXlvdXQgc3lzdGVtIGZyb20gdGhlIGxlZnQtaGFuZCBzaWRlLiBUaGlzIHdpbGwgbGlrZWx5IG9ubHkgYmVcbiAqIG5lZWRlZCB3aGVuIHVzaW5nIGluIGNvbmp1bmN0aW9uIHdpdGggYC5vLWxheW91dC0tcmV2ZXJzZWAuXG4gKi9cblxuLm8tbGF5b3V0LS1sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcblxuICA+IC5vLWxheW91dF9faXRlbSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuXG59XG5cblxuLyoqXG4gKiBSZXZlcnNlIHRoZSByZW5kZXJlZCBvcmRlciBvZiB0aGUgZ3JpZCBzeXN0ZW0uXG4gKi9cblxuLm8tbGF5b3V0LS1yZXZlcnNlIHtcbiAgZGlyZWN0aW9uOiBydGw7XG5cbiAgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICAgIGRpcmVjdGlvbjogbHRyO1xuICB9XG5cbn1cblxuXG5cblxuXG4vKiBBdXRvLXdpZHRocyBtb2RpZmllci5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ2F1c2UgbGF5b3V0IGl0ZW1zIHRvIHRha2UgdXAgYSBub24tZXhwbGljaXQgYW1vdW50IG9mIHdpZHRoLlxuICovXG5cbi5vLWxheW91dC0tYXV0byB7XG5cbiAgPiAuby1sYXlvdXRfX2l0ZW0ge1xuICAgIHdpZHRoOiBhdXRvO1xuICB9XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL29iamVjdHMvX29iamVjdHMubGF5b3V0LnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgT2JqZWN0cy9XcmFwcGVyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby1sYXlvdXQtLWVxdWFsLWhlaWdodCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG5cbi5vLWxheW91dF9faXRlbSB7XG4gIC5vLWxheW91dC0tZXF1YWwtaGVpZ2h0ICYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cbn1cblxuLm8tbGF5b3V0LS1taWRkbGUge1xuICAuby1sYXlvdXQtLWVxdWFsLWhlaWdodCB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuXG4uby1sYXlvdXQtLWJvdHRvbSB7XG4gIC5vLWxheW91dC0tZXF1YWwtaGVpZ2h0IHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIH1cbn1cblxuLm8tbGF5b3V0LS1yaWdodCB7XG4gIC5vLWxheW91dC0tZXF1YWwtaGVpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICB9XG59XG5cbi5vLWxheW91dC0tY2VudGVyIHtcbiAgLm8tbGF5b3V0LS1lcXVhbC1oZWlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX29iamVjdHMubGF5b3V0LnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI01FRElBXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFBsYWNlIGFueSBpbWFnZS0gYW5kIHRleHQtbGlrZSBjb250ZW50IHNpZGUtYnktc2lkZSwgYXMgcGVyOlxuICogaHR0cDovL3d3dy5zdHViYm9ybmVsbGEub3JnL2NvbnRlbnQvMjAxMC8wNi8yNS90aGUtbWVkaWEtb2JqZWN0LXNhdmVzLWh1bmRyZWRzLW9mLWxpbmVzLW9mLWNvZGVcbiAqL1xuXG4uby1tZWRpYSB7XG4gIEBpbmNsdWRlIGludWl0LWNsZWFyZml4KCk7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5cbiAgLm8tbWVkaWFfX2ltZyB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdDtcblxuICAgID4gaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICB9XG5cblxuICAuby1tZWRpYV9fYm9keSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICYsXG4gICAgPiA6bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cblxuICB9XG5cblxuXG5cblxuLyogU2l6ZSB2YXJpYW50cy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogTW9kaWZ5IHRoZSBhbW91bnQgb2Ygc3BhY2UgYmV0d2VlbiBvdXIgaW1hZ2UgYW5kIG91ciB0ZXh0LiBXZSBhbHNvIGhhdmVcbiAqIHJldmVyc2libGUgb3B0aW9ucyBmb3IgYWxsIGF2YWlsYWJsZSBzaXplcy5cbiAqL1xuXG5cbi8qIEd1dHRlcmxlc3MgbWVkaWEgb2JqZWN0cy5cbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLm8tbWVkaWEtLWZsdXNoIHtcblxuICA+IC5vLW1lZGlhX19pbWcge1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiB9XG5cbn1cblxuXG4uby1tZWRpYS0tdGlueSB7XG5cbiAgPiAuby1tZWRpYV9faW1nIHtcbiAgICBtYXJnaW4tcmlnaHQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXRpbnk7XG4gIH1cblxuICAmLm8tbWVkaWEtLXJldmVyc2Uge1xuXG4gICAgPiAuby1tZWRpYV9faW1nIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC10aW55O1xuICAgIH1cblxuICB9XG5cbn1cblxuXG4uby1tZWRpYS0tc21hbGwge1xuXG4gID4gLm8tbWVkaWFfX2ltZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1zbWFsbDtcbiAgfVxuXG4gICYuby1tZWRpYS0tcmV2ZXJzZSB7XG5cbiAgICA+IC5vLW1lZGlhX19pbWcge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgbWFyZ2luLWxlZnQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXNtYWxsO1xuICAgIH1cblxuICB9XG5cbn1cblxuXG4uby1tZWRpYS0tbGFyZ2Uge1xuXG4gID4gLm8tbWVkaWFfX2ltZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1sYXJnZTtcbiAgfVxuXG4gICYuby1tZWRpYS0tcmV2ZXJzZSB7XG5cbiAgICA+IC5vLW1lZGlhX19pbWcge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgbWFyZ2luLWxlZnQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LWxhcmdlO1xuICAgIH1cblxuICB9XG5cbn1cblxuXG4uby1tZWRpYS0taHVnZSB7XG5cbiAgPiAuby1tZWRpYV9faW1nIHtcbiAgICBtYXJnaW4tcmlnaHQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LWh1Z2U7XG4gIH1cblxuICAmLm8tbWVkaWEtLXJldmVyc2Uge1xuXG4gICAgPiAuby1tZWRpYV9faW1nIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1odWdlO1xuICAgIH1cblxuICB9XG5cbn1cblxuXG5cbi8qIFJldmVyc2VkIG1lZGlhIG9iamVjdHMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby1tZWRpYS0tcmV2ZXJzZSB7XG5cbiAgPiAuby1tZWRpYV9faW1nIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdDtcbiAgfVxuXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy9vYmplY3RzL19vYmplY3RzLm1lZGlhLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI0ZMQUdcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogVGhlIGZsYWcgb2JqZWN0IGlzIGEgZGVzaWduIHBhdHRlcm4gc2ltaWxhciB0byB0aGUgbWVkaWEgb2JqZWN0LCBob3dldmVyIGl0XG4gKiB1dGlsaXNlcyBgZGlzcGxheTogdGFibGVbLWNlbGxdO2AgdG8gZ2l2ZSB1cyBjb250cm9sIG92ZXIgdGhlIHZlcnRpY2FsXG4gKiBhbGlnbm1lbnRzIG9mIHRoZSB0ZXh0IGFuZCBpbWFnZS5cbiAqXG4gKiBodHRwOi8vY3Nzd2l6YXJkcnkuY29tLzIwMTMvMDUvdGhlLWZsYWctb2JqZWN0L1xuICpcbiAqIDEuIEFsbG93cyB1cyB0byBjb250cm9sIHZlcnRpY2FsIGFsaWdubWVudHMuXG4gKiAyLiBGb3JjZSB0aGUgb2JqZWN0IHRvIGJlIHRoZSBmdWxsIHdpZHRoIG9mIGl0cyBwYXJlbnQuIENvbWJpbmVkIHdpdGggWzFdLFxuICogICAgdGhpcyBtYWtlcyB0aGUgb2JqZWN0IGJlaGF2ZSBpbiBhIHF1YXNpLWBkaXNwbGF5OiBibG9jaztgIG1hbm5lci5cbiAqIDMuIFJlc2V0IGluaGVyaXRlZCBgYm9yZGVyLXNwYWNpbmdgIGRlY2xhcmF0aW9ucy5cbiAqL1xuXG4uby1mbGFnIHtcbiAgZGlzcGxheTogdGFibGU7IC8qIFsxXSAqL1xuICB3aWR0aDogMTAwJTsgLyogWzJdICovXG4gIGJvcmRlci1zcGFjaW5nOiAwOyAvKiBbM10gKi9cbn1cblxuXG4gIC8qKlxuICAgKiBJdGVtcyB3aXRoaW4gYSBmbGFnIG9iamVjdC4gVGhlcmUgc2hvdWxkIG9ubHkgZXZlciBiZSBvbmUgb2YgZWFjaC5cbiAgICpcbiAgICogMS4gRGVmYXVsdCB0byBhbGlnbmluZyBjb250ZW50IHRvIHRoZWlyIG1pZGRsZXMuXG4gICAqL1xuXG4gIC5vLWZsYWdfX2ltZyxcbiAgLm8tZmxhZ19fYm9keSB7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvKiBbMV0gKi9cbiAgfVxuXG5cbiAgLyoqXG4gICAqIEZsYWcgaW1hZ2VzIGhhdmUgYSBzcGFjZSBiZXR3ZWVuIHRoZW0gYW5kIHRoZSBib2R5IG9mIHRoZSBvYmplY3QuXG4gICAqXG4gICAqIDEuIEZvcmNlIGAuZmxhZ19faW1nYCB0byB0YWtlIHVwIGFzIGxpdHRsZSBzcGFjZSBhcyBwb3NzaWJsZTpcbiAgICogICAgaHR0cHM6Ly9waXhlbHN2c2J5dGVzLmNvbS8yMDEyLzAyL3RoaXMtY3NzLWxheW91dC1ncmlkLWlzLW5vLWhvbHktZ3JhaWwvXG4gICAqL1xuXG4gIC5vLWZsYWdfX2ltZyB7XG4gICAgd2lkdGg6IDFweDsgLyogWzFdICovXG4gICAgcGFkZGluZy1yaWdodDogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQ7XG5cblxuICAgIC8qKlxuICAgICAqIDEuIEZpeGVzIHByb2JsZW0gd2l0aCBpbWFnZXMgZGlzYXBwZWFyaW5nLlxuICAgICAqL1xuXG4gICAgPiBpbWcge1xuICAgICAgbWF4LXdpZHRoOiBub25lOyAvKiBbMV0gKi9cbiAgICB9XG5cbiAgfVxuXG5cbiAgLyoqXG4gICAqIFRoZSBjb250YWluZXIgZm9yIHRoZSBtYWluIGNvbnRlbnQgb2YgdGhlIGZsYWcgb2JqZWN0LlxuICAgKlxuICAgKiAxLiBGb3JjZXMgdGhlIGAuZmxhZ19fYm9keWAgdG8gdGFrZSB1cCBhbGwgcmVtYWluaW5nIHNwYWNlLlxuICAgKi9cblxuICAuby1mbGFnX19ib2R5IHtcbiAgICB3aWR0aDogYXV0bzsgLyogWzFdICovXG5cbiAgICAmLFxuICAgID4gOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgfVxuXG5cblxuXG5cbi8qIFNpemUgdmFyaWFudHMuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby1mbGFnLS1mbHVzaCB7XG5cbiAgPiAuby1mbGFnX19pbWcge1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAgMDtcbiAgfVxuXG59XG5cblxuLm8tZmxhZy0tdGlueSB7XG5cbiAgPiAuby1mbGFnX19pbWcge1xuICAgIHBhZGRpbmctcmlnaHQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXRpbnk7XG4gIH1cblxuICAmLm8tZmxhZy0tcmV2ZXJzZSB7XG5cbiAgICA+IC5vLWZsYWdfX2ltZyB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgcGFkZGluZy1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC10aW55O1xuICAgIH1cblxuICB9XG5cbn1cblxuXG4uby1mbGFnLS1zbWFsbCB7XG5cbiAgPiAuby1mbGFnX19pbWcge1xuICAgIHBhZGRpbmctcmlnaHQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXNtYWxsO1xuICB9XG5cbiAgJi5vLWZsYWctLXJldmVyc2Uge1xuXG4gICAgPiAuby1mbGFnX19pbWcge1xuICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICAgIHBhZGRpbmctbGVmdDogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtc21hbGw7XG4gICAgfVxuXG4gIH1cblxufVxuXG5cbi5vLWZsYWctLWxhcmdlIHtcblxuICA+IC5vLWZsYWdfX2ltZyB7XG4gICAgcGFkZGluZy1yaWdodDogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtbGFyZ2U7XG4gIH1cblxuICAmLm8tZmxhZy0tcmV2ZXJzZSB7XG5cbiAgICA+IC5vLWZsYWdfX2ltZyB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgcGFkZGluZy1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1sYXJnZTtcbiAgICB9XG5cbiAgfVxuXG59XG5cblxuLm8tZmxhZy0taHVnZSB7XG5cbiAgPiAuby1mbGFnX19pbWcge1xuICAgIHBhZGRpbmctcmlnaHQ6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LWh1Z2U7XG4gIH1cblxuICAmLm8tZmxhZy0tcmV2ZXJzZSB7XG5cbiAgICA+IC5vLWZsYWdfX2ltZyB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgcGFkZGluZy1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1odWdlO1xuICAgIH1cblxuICB9XG5cbn1cblxuXG5cblxuLyogUmV2ZXJzZWQgZmxhZy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gU3dhcCB0aGUgcmVuZGVyZWQgZGlyZWN0aW9uIG9mIHRoZSBvYmplY3TDosKAwqZcbiAqIDIuIMOiwoDCpmFuZCByZXNldCBpdC5cbiAqIDMuIFJlYXNzaWduIG1hcmdpbnMgdG8gdGhlIGNvcnJlY3Qgc2lkZXMuXG4gKi9cblxuLm8tZmxhZy0tcmV2ZXJzZSB7XG4gIGRpcmVjdGlvbjogcnRsOyAvKiBbMV0gKi9cblxuICA+IC5vLWZsYWdfX2ltZyxcbiAgPiAuby1mbGFnX19ib2R5IHtcbiAgICBkaXJlY3Rpb246IGx0cjsgLyogWzJdICovXG4gIH1cblxuICA+IC5vLWZsYWdfX2ltZyB7XG4gICAgcGFkZGluZy1yaWdodDogMDsgLyogWzNdICovXG4gICAgcGFkZGluZy1sZWZ0OiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdDsgLyogWzNdICovXG4gIH1cblxufVxuXG5cblxuXG5cbi8qIEFsaWdubWVudCB2YXJpYW50cy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogVmVydGljYWxseSBhbGlnbiB0aGUgaW1hZ2UtIGFuZCBib2R5LWNvbnRlbnQgZGlmZmVyZW50bHkuIERlZmF1bHRzIHRvIG1pZGRsZS5cbiAqL1xuXG4uby1mbGFnLS10b3Age1xuXG4gID4gLm8tZmxhZ19faW1nLFxuICA+IC5vLWZsYWdfX2JvZHkge1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIH1cblxufVxuXG5cbi5vLWZsYWctLWJvdHRvbSB7XG5cbiAgPiAuby1mbGFnX19pbWcsXG4gID4gLm8tZmxhZ19fYm9keSB7XG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgfVxuXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy9vYmplY3RzL19vYmplY3RzLmZsYWcuc2NzcyIsIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjTElTVC1CQVJFXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFN0cmlwIGxpc3QtbGlrZSBhcHBlYXJhbmNlIGZyb20gbGlzdHMgYnkgcmVtb3ZpbmcgdGhlaXIgYnVsbGV0cywgYW5kIGFueVxuICogaW5kZW50YXRpb24uXG4gKlxuICogTm90ZTogRGVjbGFyaW5nIHRoZSBpdGVtLWNsYXNzIG1pZ2h0IG5vdCBiZSBuZWNlc3NhcnkgZXZlcnl3aGVyZSBidXRcbiAqIGlzIGZvciBleGFtcGxlIGluIDxkbD4gbGlzdHMgZm9yIHRoZSA8ZGQ+IGNoaWxkcy5cbiAqL1xuXG4uby1saXN0LWJhcmUge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuXG4gIC5vLWxpc3QtYmFyZV9faXRlbSB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL29iamVjdHMvX29iamVjdHMubGlzdC1iYXJlLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI0xJU1QtSU5MSU5FXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFRoZSBsaXN0LWlubGluZSBvYmplY3Qgc2ltcGx5IGRpc3BsYXlzIGEgbGlzdCBvZiBpdGVtcyBpbiBvbmUgbGluZS5cbiAqL1xuXG4uby1saXN0LWlubGluZSB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5cbiAgLm8tbGlzdC1pbmxpbmVfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3Mvb2JqZWN0cy9fb2JqZWN0cy5saXN0LWlubGluZS5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNCTE9DS1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBTdGFja2VkIGltYWdlLXdpdGgtdGV4dCBvYmplY3QuIEEgc2ltcGxlIGFic3RyYWN0aW9uIHRvIGNvdmVyIGEgdmVyeSBjb21tb25seVxuICogb2NjdXJyaW5nIGRlc2lnbiBwYXR0ZXJuLlxuICovXG5cbi5vLWJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuXG4gIC5vLWJsb2NrX19pbWcge1xuICAgIG1hcmdpbi1ib3R0b206ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0O1xuXG5cbiAgICAvKiBTaXplIHZhcmlhbnRzLlxuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC5vLWJsb2NrLS1mbHVzaCA+ICYge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICAuby1ibG9jay0tdGlueSA+ICYge1xuICAgICAgbWFyZ2luLWJvdHRvbTogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtdGlueTtcbiAgICB9XG5cbiAgICAuby1ibG9jay0tc21hbGwgPiAmIHtcbiAgICAgIG1hcmdpbi1ib3R0b206ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LXNtYWxsO1xuICAgIH1cblxuICAgIC5vLWJsb2NrLS1sYXJnZSA+ICYge1xuICAgICAgbWFyZ2luLWJvdHRvbTogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtbGFyZ2U7XG4gICAgfVxuXG4gICAgLm8tYmxvY2stLWh1Z2UgPiAmIHtcbiAgICAgIG1hcmdpbi1ib3R0b206ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LWh1Z2U7XG4gICAgfVxuXG4gIH1cblxuXG4gIC5vLWJsb2NrX19ib2R5IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG5cblxuXG5cbi8qIEFsaWdubWVudCB2YXJpYW50cy5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5vLWJsb2NrLS1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uby1ibG9jay0tbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy9vYmplY3RzL19vYmplY3RzLmJsb2NrLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgT2JqZWN0cy9IZWFkaW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uby1oZWFkaW5nIHtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fb2JqZWN0cy5oZWFkaW5nLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgQ29tcG9uZW50cy9CdXR0b25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLmMtYnV0dG9uIHtcbn1cblxuICAuYy1idXR0b25fX2J1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IoYmxhY2spO1xuICAgIGJvcmRlcjogM3B4IHNvbGlkIGNvbG9yKGJsYWNrKTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgcGFkZGluZzogJHVuaXQtc21hbGwgJHVuaXQtbGFyZ2U7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4ycztcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQpIHtcbiAgICAgIG1heC13aWR0aDogNDgwcHg7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbXEoJGZyb206IGRlc2t0b3ApIHtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIHdpZHRoOiBpbmhlcml0O1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3Iod2hpdGUpO1xuICAgIH1cblxuICAgICY6aG92ZXIgLmMtYnV0dG9uX190ZXh0LFxuICAgICY6aG92ZXIgLmMtYnV0dG9uX19hbmdsZS1yaWdodCB7XG4gICAgICBjb2xvcjogY29sb3IoYmxhY2spXG4gICAgfVxuICB9XG5cbiAgICAuYy1idXR0b25fX3RleHQsXG4gICAgLmMtYnV0dG9uX19hbmdsZS1yaWdodCB7XG4gICAgICBjb2xvcjogY29sb3Iod2hpdGUpO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIC4ycztcbiAgICB9XG5cbiAgICAuYy1idXR0b25fX3RleHQge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIEBpbmNsdWRlIGZvbnQtc2l6ZSgxNHB4KTtcbiAgICB9XG5cbiAgICAuYy1idXR0b25fX2FuZ2xlLXJpZ2h0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAkdW5pdC1zbWFsbDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAkdW5pdC1zbWFsbCAqIDEuNTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgQGluY2x1ZGUgZm9udC1zaXplKDE0cHgpO1xuICAgIH1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fY29tcG9uZW50cy5idXR0b24uc2NzcyIsIi8vLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAgICNGT05ULVNJWkVcbi8vICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8vIEdlbmVyYXRlIGEgZm9udC1zaXplIGFuZCBiYXNlbGluZS1jb21wYXRpYmxlIGxpbmUtaGVpZ2h0LlxuQG1peGluIGludWl0LWZvbnQtc2l6ZSgkZm9udC1zaXplLCAkbGluZS1oZWlnaHQ6IGF1dG8sICRpbXBvcnRhbnQ6IGZhbHNlKSB7XG5cbiAgQGlmICh0eXBlLW9mKCRmb250LXNpemUpID09IG51bWJlcikge1xuICAgIEBpZiAodW5pdCgkZm9udC1zaXplKSAhPSBcInB4XCIpIHtcbiAgICAgIEBlcnJvciBcImAjeyRmb250LXNpemV9YCBuZWVkcyB0byBiZSBhIHBpeGVsIHZhbHVlLlwiO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGVycm9yIFwiYCN7JGZvbnQtc2l6ZX1gIG5lZWRzIHRvIGJlIGEgbnVtYmVyLlwiO1xuICB9XG5cbiAgQGlmICgkaW1wb3J0YW50ID09IHRydWUpIHtcbiAgICAkaW1wb3J0YW50OiAhaW1wb3J0YW50O1xuICB9IEBlbHNlaWYgKCRpbXBvcnRhbnQgPT0gZmFsc2UpIHtcbiAgICAkaW1wb3J0YW50OiBudWxsO1xuICB9IEBlbHNlIHtcbiAgICBAZXJyb3IgXCJgI3skaW1wb3J0YW50fWAgbmVlZHMgdG8gYmUgYHRydWVgIG9yIGBmYWxzZWAuXCJcbiAgfVxuXG4gIC8vIFdlIHByb3ZpZGUgYSBgcHhgIGZhbGxiYWNrIGZvciBvbGQgSUVzIG5vdCBzdXBwb3J0aW5nIGByZW1gIHZhbHVlcy5cbiAgZm9udC1zaXplOiAkZm9udC1zaXplICRpbXBvcnRhbnQ7XG4gIGZvbnQtc2l6ZTogKCRmb250LXNpemUgLyAkaW51aXQtZ2xvYmFsLWZvbnQtc2l6ZSkgKiAxcmVtICRpbXBvcnRhbnQ7XG5cbiAgQGlmICgkbGluZS1oZWlnaHQgPT0gJ2F1dG8nKSB7XG4gICAgbGluZS1oZWlnaHQ6IGNlaWwoJGZvbnQtc2l6ZSAvICRpbnVpdC1nbG9iYWwtbGluZS1oZWlnaHQpICogKCRpbnVpdC1nbG9iYWwtbGluZS1oZWlnaHQgLyAkZm9udC1zaXplKSAkaW1wb3J0YW50O1xuICB9XG5cbiAgQGVsc2Uge1xuXG4gICAgQGlmICh0eXBlLW9mKCRsaW5lLWhlaWdodCkgPT0gbnVtYmVyIG9yICRsaW5lLWhlaWdodCA9PSAnaW5oZXJpdCcgb3IgJGxpbmUtaGVpZ2h0ID09ICdub3JtYWwnKSB7XG4gICAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0ICRpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgQGVsc2VpZiAoJGxpbmUtaGVpZ2h0ICE9ICdub25lJyBhbmQgJGxpbmUtaGVpZ2h0ICE9IGZhbHNlKSB7XG4gICAgICBAZXJyb3IgXCJEw6LCgMKZb2ghIGAjeyRsaW5lLWhlaWdodH1gIGlzIG5vdCBhIHZhbGlkIHZhbHVlIGZvciBgJGxpbmUtaGVpZ2h0YC5cIlxuICAgIH1cblxuICB9XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL3Rvb2xzL190b29scy5mb250LXNpemUuc2NzcyIsIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjQ0xFQVJGSVhcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQXR0YWNoIG91ciBjbGVhcmZpeCBtaXhpbiB0byBhIHV0aWxpdHkgY2xhc3MuXG4gKi9cblxuLnUtY2xlYXJmaXgge1xuICBAaW5jbHVkZSBpbnVpdC1jbGVhcmZpeCgpO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3MvdXRpbGl0aWVzL191dGlsaXRpZXMuY2xlYXJmaXguc2NzcyIsIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjV0lEVEhTXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIGludWl0Y3NzIGdlbmVyYXRlcyBhIHNlcmllcyBvZiB1dGlsaXR5IGNsYXNzZXMgdGhhdCBnaXZlIGEgZmx1aWQgd2lkdGggdG9cbiAqIHdoaWNoZXZlciBlbGVtZW50IHRoZXnDosKAwplyZSBhcHBsaWVkLCBlLmcuOlxuICpcbiAqICAgPGltZyBzcmM9XCJcIiBhbHQ9XCJcIiBjbGFzcz1cInUtMS8yXCIgLz5cbiAqXG4gKiBUaGVzZSBjbGFzc2VzIGFyZSBtb3N0IGNvbW1vbmx5IHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBvdXIgbGF5b3V0IHN5c3RlbSxcbiAqIGUuZy46XG4gKlxuICogICA8ZGl2IGNsYXNzPVwiby1sYXlvdXRfX2l0ZW0gIHUtMS8yXCI+XG4gKlxuICogQnkgZGVmYXVsdCwgaW51aXRjc3Mgd2lsbCBhbHNvIGdlbmVyYXRlIHJlc3BvbnNpdmUgdmFyaWFudHMgb2YgZWFjaCBvZiB0aGVzZVxuICogY2xhc3NlcyBieSB1c2luZyB5b3VyIFNhc3MgTVEgY29uZmlndXJhdGlvbiwgZS5nLjpcbiAqXG4gKiAgIDxkaXYgY2xhc3M9XCJvLWxheW91dF9faXRlbSAgdS0xLzEgIHUtMS8yQHRhYmxldCAgdS0xLzNAZGVza3RvcFwiPlxuICpcbiAqIE9wdGlvbmFsbHksIGludWl0Y3NzIGNhbiBnZW5lcmF0ZSBvZmZzZXQgY2xhc3NlcyB3aGljaCBjYW4gcHVzaCBhbmQgcHVsbFxuICogZWxlbWVudHMgbGVmdCBhbmQgcmlnaHQgYnkgYSBzcGVjaWZpZWQgYW1vdW50LCBlLmcuOlxuICpcbiAqICAgPGRpdiBjbGFzcz1cIm8tbGF5b3V0X19pdGVtICB1LTIvMyAgdS1wdWxsLTEvM1wiPlxuICpcbiAqIFRoaXMgaXMgdXNlZnVsIGZvciBtYWtpbmcgdmVyeSBncmFudWxhciBjaGFuZ2VzIHRvIHRoZSByZW5kZXJlZCBvcmRlciBvZlxuICogaXRlbXMgaW4gYSBsYXlvdXQuXG4gKlxuICogTi5CLiBUaGlzIG9wdGlvbiBpcyB0dXJuZWQgb2ZmIGJ5IGRlZmF1bHQuXG4gKi9cblxuXG5cblxuXG4vLyBXaGljaCBmcmFjdGlvbnMgd291bGQgeW91IGxpa2UgaW4geW91ciBncmlkIHN5c3RlbShzKT8gQnkgZGVmYXVsdCwgaW51aXRjc3Ncbi8vIHByb3ZpZGVzIHlvdSBmcmFjdGlvbnMgb2Ygb25lIHdob2xlLCBoYWx2ZXMsIHRoaXJkcywgcXVhcnRlcnMgYW5kIGZpZnRocyxcbi8vIGUuZy46XG4vL1xuLy8gICAudS0xLzJcbi8vICAgLnUtMi81XG4vLyAgIC51LTMvNFxuLy8gICAudS0yLzNcblxuJGludWl0LWZyYWN0aW9uczogMSAyIDMgNCA1ICFkZWZhdWx0O1xuXG5cblxuXG5cbi8vIE9wdGlvbmFsbHksIGludWl0Y3NzIGNhbiBnZW5lcmF0ZSBjbGFzc2VzIHRvIG9mZnNldCBpdGVtcyBieSBhIGNlcnRhaW4gd2lkdGguXG4vLyBXb3VsZCB5b3UgbGlrZSB0byBnZW5lcmF0ZSB0aGVzZSB0eXBlcyBvZiBjbGFzcyBhcyB3ZWxsPyBFLmcuOlxuLy9cbi8vICAgLnUtcHVzaC0xLzNcbi8vICAgLnUtcHVsbC0yLzRcbi8vICAgLnUtcHVsbC0xLzVcbi8vICAgLnUtcHVzaC0yLzNcblxuJGludWl0LW9mZnNldHM6IGZhbHNlICFkZWZhdWx0O1xuXG5cblxuXG5cbi8vIEJ5IGRlZmF1bHQsIGludWl0Y3NzIHVzZXMgZnJhY3Rpb25zLWxpa2UgY2xhc3NlcyBsaWtlIGA8ZGl2IGNsYXNzPVwidS0xLzRcIj5gLlxuLy8gWW91IGNhbiBjaGFuZ2UgdGhlIGAvYCB0byB3aGF0ZXZlciB5b3UgZmFuY3kgd2l0aCB0aGlzIHZhcmlhYmxlLlxuJGludWl0LXdpZHRocy1kZWxpbWl0ZXI6IFxcLyAhZGVmYXVsdDtcblxuXG5cblxuXG4vLyBXaGVuIHVzaW5nIFNhc3MtTVEsIHRoaXMgZGVmaW5lcyB0aGUgc2VwYXJhdG9yIGZvciB0aGUgYnJlYWtwb2ludHMgc3VmZml4XG4vLyBpbiB0aGUgY2xhc3MgbmFtZS4gQnkgZGVmYXVsdCwgd2UgYXJlIGdlbmVyYXRpbmcgdGhlIHJlc3BvbnNpdmUgc3VmZml4ZXNcbi8vIGZvciB0aGUgY2xhc3NlcyB3aXRoIGEgYEBgIHN5bWJvbCBzbyB5b3UgZ2V0IGNsYXNzZXMgbGlrZTpcbi8vIDxkaXYgY2xhc3M9XCJ1LTMvMTJAbW9iaWxlXCI+XG4kaW51aXQtd2lkdGhzLWJyZWFrcG9pbnQtc2VwYXJhdG9yOiBcXEAgIWRlZmF1bHQ7XG5cblxuXG5cblxuLy8gQSBtaXhpbiB0byBzcGl0IG91dCBvdXIgd2lkdGggY2xhc3Nlcy4gUGFzcyBpbiB0aGUgY29sdW1ucyB3ZSB3YW50IHRoZSB3aWR0aHNcbi8vIHRvIGhhdmUsIGFuZCBhbiBvcHRpb25hbCBzdWZmaXggZm9yIHJlc3BvbnNpdmUgd2lkdGhzLiBFLmcuIHRvIGNyZWF0ZSB0aGlyZHNcbi8vIGFuZCBxdWFydGVycyBmb3IgYSBzbWFsbCBicmVha3BvaW50OlxuLy9cbi8vIEBpbmNsdWRlIHdpZHRocygzIDQsIC1zbSk7XG5cbkBtaXhpbiBpbnVpdC13aWR0aHMoJGNvbHVtbnMsICRicmVha3BvaW50OiBudWxsKSB7XG5cbiAgLy8gTG9vcCB0aHJvdWdoIHRoZSBudW1iZXIgb2YgY29sdW1ucyBmb3IgZWFjaCBkZW5vbWluYXRvciBvZiBvdXIgZnJhY3Rpb25zLlxuICBAZWFjaCAkZGVub21pbmF0b3IgaW4gJGNvbHVtbnMge1xuXG4gICAgLy8gQmVnaW4gY3JlYXRpbmcgYSBudW1lcmF0b3IgZm9yIG91ciBmcmFjdGlvbiB1cCB1bnRpbCB3ZSBoaXQgdGhlXG4gICAgLy8gZGVub21pbmF0b3IuXG4gICAgQGZvciAkbnVtZXJhdG9yIGZyb20gMSB0aHJvdWdoICRkZW5vbWluYXRvciB7XG5cbiAgICAgIC8vIEJ1aWxkIGEgY2xhc3MgaW4gdGhlIGZvcm1hdCBgLnUtMy80W0A8YnJlYWtwb2ludD5dYC5cbiAgICAgIC51LSN7JG51bWVyYXRvcn0jeyRpbnVpdC13aWR0aHMtZGVsaW1pdGVyfSN7JGRlbm9taW5hdG9yfSN7JGJyZWFrcG9pbnR9IHtcbiAgICAgICAgd2lkdGg6ICgkbnVtZXJhdG9yIC8gJGRlbm9taW5hdG9yKSAqIDEwMCUgIWltcG9ydGFudDtcbiAgICAgIH1cblxuICAgICAgQGlmICgkaW51aXQtb2Zmc2V0cyA9PSB0cnVlKSB7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIDEuIFJlc2V0IGFueSBsZWZ0b3ZlciBvciBjb25mbGljdGluZyBgbGVmdGAvYHJpZ2h0YCB2YWx1ZXMuXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8vIEJ1aWxkIGEgY2xhc3MgaW4gdGhlIGZvcm1hdCBgLnUtcHVzaC0xLzJbQDxicmVha3BvaW50Pl1gLlxuICAgICAgICAudS1wdXNoLSN7JG51bWVyYXRvcn0jeyRpbnVpdC13aWR0aHMtZGVsaW1pdGVyfSN7JGRlbm9taW5hdG9yfSN7JGJyZWFrcG9pbnR9IHtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcbiAgICAgICAgICByaWdodDogYXV0byAhaW1wb3J0YW50OyAvKiBbMV0gKi9cbiAgICAgICAgICBsZWZ0OiAoJG51bWVyYXRvciAvICRkZW5vbWluYXRvcikgKiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCdWlsZCBhIGNsYXNzIGluIHRoZSBmb3JtYXQgYC51LXB1bGwtNS82W0A8YnJlYWtwb2ludD5dYC5cbiAgICAgICAgLnUtcHVsbC0jeyRudW1lcmF0b3J9I3skaW51aXQtd2lkdGhzLWRlbGltaXRlcn0jeyRkZW5vbWluYXRvcn0jeyRicmVha3BvaW50fSB7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgcmlnaHQ6ICgkbnVtZXJhdG9yIC8gJGRlbm9taW5hdG9yKSAqIDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgICBsZWZ0OiBhdXRvICFpbXBvcnRhbnQ7IC8qIFsxXSAqL1xuICAgICAgICB9XG5cbiAgICAgIH1cblxuICAgIH1cblxuICB9XG5cbn1cblxuXG5cblxuLyoqXG4gKiBBIHNlcmllcyBvZiB3aWR0aCBoZWxwZXIgY2xhc3NlcyB0aGF0IHlvdSBjYW4gdXNlIHRvIHNpemUgdGhpbmdzIGxpa2UgZ3JpZFxuICogc3lzdGVtcy4gQ2xhc3NlcyB0YWtlIGEgZnJhY3Rpb24tbGlrZSBmb3JtYXQgKGUuZy4gYC51LTIvM2ApLiBVc2UgdGhlc2UgaW5cbiAqIHlvdXIgbWFya3VwOlxuICpcbiAqIDxkaXYgY2xhc3M9XCJ1LTcvMTJcIj5cbiAqXG4gKiBUaGUgZm9sbG93aW5nIHdpbGwgZ2VuZXJhdGUgd2lkdGhzIGhlbHBlciBjbGFzc2VzIGJhc2VkIG9uIHRoZSBmcmFjdGlvbnNcbiAqIGRlZmluZWQgaW4gdGhlIGAkaW51aXQtZnJhY3Rpb25zYCBsaXN0LlxuICovXG5cbkBpbmNsdWRlIGludWl0LXdpZHRocygkaW51aXQtZnJhY3Rpb25zKTtcblxuXG5cblxuLyoqXG4gKiBJZiB3ZcOiwoDCmXJlIHVzaW5nIFNhc3MtTVEsIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGUgZ3JpZCBzeXN0ZW0ocykgZm9yIGVhY2ggb2Ygb3VyXG4gKiBkZWZpbmVkIGJyZWFrcG9pbnRzLCBhbmQgZ2l2ZSB0aGVtIGEgUmVzcG9uc2l2ZSBTdWZmaXgsIGUuZy46XG4gKlxuICogPGRpdiBjbGFzcz1cInUtMy8xMkBtb2JpbGVcIj5cbiAqL1xuXG5AaWYgKHZhcmlhYmxlLWV4aXN0cyhtcS1icmVha3BvaW50cykpIHtcblxuICBAZWFjaCAkaW51aXQtYnAtbmFtZSwgJGludWl0LWJwLXZhbHVlIGluICRtcS1icmVha3BvaW50cyB7XG5cbiAgICBAaW5jbHVkZSBtcSgkZnJvbTogJGludWl0LWJwLW5hbWUpIHtcbiAgICAgIEBpbmNsdWRlIGludWl0LXdpZHRocygkaW51aXQtZnJhY3Rpb25zLCAjeyRpbnVpdC13aWR0aHMtYnJlYWtwb2ludC1zZXBhcmF0b3J9I3skaW51aXQtYnAtbmFtZX0pO1xuICAgIH1cblxuICB9XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL3V0aWxpdGllcy9fdXRpbGl0aWVzLndpZHRocy5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNTUEFDSU5HU1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBVdGlsaXR5IGNsYXNzZXMgdG8gcHV0IHNwZWNpZmljIHNwYWNpbmcgdmFsdWVzIG9udG8gZWxlbWVudHMuIFRoZSBiZWxvdyBsb29wXG4gKiB3aWxsIGdlbmVyYXRlIHVzIGEgc3VpdGUgb2YgY2xhc3NlcyBsaWtlOlxuICpcbiAqICAgLnUtbWFyZ2luLXRvcCB7fVxuICogICAudS1wYWRkaW5nLWxlZnQtbGFyZ2Uge31cbiAqICAgLnUtbWFyZ2luLXJpZ2h0LXNtYWxsIHt9XG4gKiAgIC51LXBhZGRpbmcge31cbiAqICAgLnUtcGFkZGluZy1yaWdodC1ub25lIHt9XG4gKiAgIC51LXBhZGRpbmctaG9yaXpvbnRhbCB7fVxuICogICAudS1wYWRkaW5nLXZlcnRpY2FsLXNtYWxsIHt9XG4gKi9cblxuLyogc3R5bGVsaW50LWRpc2FibGUgc3RyaW5nLXF1b3RlcyAqL1xuXG4kaW51aXQtc3BhY2luZy1kaXJlY3Rpb25zOiAoXG4gIG51bGw6IG51bGwsXG4gICctdG9wJzogJy10b3AnLFxuICAnLXJpZ2h0JzogJy1yaWdodCcsXG4gICctYm90dG9tJzogJy1ib3R0b20nLFxuICAnLWxlZnQnOiAnLWxlZnQnLFxuICAnLWhvcml6b250YWwnOiAnLWxlZnQnICctcmlnaHQnLFxuICAnLXZlcnRpY2FsJzogJy10b3AnICctYm90dG9tJyxcbikgIWRlZmF1bHQ7XG5cbiRpbnVpdC1zcGFjaW5nLXByb3BlcnRpZXM6IChcbiAgJ3BhZGRpbmcnOiAncGFkZGluZycsXG4gICdtYXJnaW4nOiAnbWFyZ2luJyxcbikgIWRlZmF1bHQ7XG5cbiRpbnVpdC1zcGFjaW5nLXNpemVzOiAoXG4gIG51bGw6ICRpbnVpdC1nbG9iYWwtc3BhY2luZy11bml0LFxuICAnLXRpbnknOiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC10aW55LFxuICAnLXNtYWxsJzogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtc21hbGwsXG4gICctbGFyZ2UnOiAkaW51aXQtZ2xvYmFsLXNwYWNpbmctdW5pdC1sYXJnZSxcbiAgJy1odWdlJzogJGludWl0LWdsb2JhbC1zcGFjaW5nLXVuaXQtaHVnZSxcbiAgJy1ub25lJzogMFxuKSAhZGVmYXVsdDtcblxuQGVhY2ggJHByb3BlcnR5LW5hbWVzcGFjZSwgJHByb3BlcnR5IGluICRpbnVpdC1zcGFjaW5nLXByb3BlcnRpZXMge1xuXG4gIEBlYWNoICRkaXJlY3Rpb24tbmFtZXNwYWNlLCAkZGlyZWN0aW9uLXJ1bGVzIGluICRpbnVpdC1zcGFjaW5nLWRpcmVjdGlvbnMge1xuXG4gICAgQGVhY2ggJHNpemUtbmFtZXNwYWNlLCAkc2l6ZSBpbiAkaW51aXQtc3BhY2luZy1zaXplcyB7XG5cbiAgICAgIC51LSN7JHByb3BlcnR5LW5hbWVzcGFjZX0jeyRkaXJlY3Rpb24tbmFtZXNwYWNlfSN7JHNpemUtbmFtZXNwYWNlfSB7XG5cbiAgICAgICAgQGVhY2ggJGRpcmVjdGlvbiBpbiAkZGlyZWN0aW9uLXJ1bGVzIHtcbiAgICAgICAgICAjeyRwcm9wZXJ0eX0jeyRkaXJlY3Rpb259OiAkc2l6ZSAhaW1wb3J0YW50O1xuICAgICAgICB9XG5cbiAgICAgIH1cblxuICAgIH1cblxuICB9XG5cbn1cblxuLyogc3R5bGVsaW50LWVuYWJsZSBzdHJpbmctcXVvdGVzICovXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy91dGlsaXRpZXMvX3V0aWxpdGllcy5zcGFjaW5ncy5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICNSRVNQT05TSVZFLVNQQUNJTkdTXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFV0aWxpdHkgY2xhc3NlcyBlbmhhbmNpbmcgdGhlIG5vcm1hbCBzcGFjaW5nIGNsYXNzZXMgYnkgYWRkaW5nIHJlc3BvbnNpdmVuZXNzXG4gKiB0byB0aGVtLiBCeSBkZWZhdWx0IHRoaXMgYnJpbmdzIHVzIHRoZSBmb2xsb3dpbmcgY2xhc3NlczpcbiAqXG4gKiAgIC51LW1hcmdpbi1ib3R0b20tbm9uZUBtb2JpbGUge31cbiAqICAgLnUtbWFyZ2luLWJvdHRvbS1ub25lQHRhYmxldCB7fVxuICogICAudS1tYXJnaW4tYm90dG9tLW5vbmVAZGVza3RvcCB7fVxuICogICAudS1tYXJnaW4tYm90dG9tLW5vbmVAd2lkZSB7fVxuICpcbiAqIEJ1dCB3ZSBjYW4gYWZmZWN0IHRoZSBjbGFzc2VzIHRoYXQgZ2V0IGdlbmVyYXRlZCBieSBhbHRlcmluZyB0aGUgYXBwcm9wcmlhdGVcbiAqIFNhc3MgbWFwcyBiZWxvdy5cbiAqL1xuXG5cblxuLy8gV2hlbiB1c2luZyBTYXNzLU1RLCB0aGlzIGRlZmluZXMgdGhlIHNlcGFyYXRvciBmb3IgdGhlIGJyZWFrcG9pbnRzIHN1ZmZpeFxuLy8gaW4gdGhlIGNsYXNzIG5hbWUuIEJ5IGRlZmF1bHQsIHdlIGFyZSBnZW5lcmF0aW5nIHRoZSByZXNwb25zaXZlIHN1ZmZpeGVzXG4vLyBmb3IgdGhlIGNsYXNzZXMgd2l0aCBhIGBAYCBzeW1ib2wgc28geW91IGdldCBjbGFzc2VzIGxpa2U6XG4vL1xuLy8gICA8ZGl2IGNsYXNzPVwidS1tYXJnaW4tYm90dG9tQG1vYmlsZVwiPlxuLy9cbi8vIEJlIGF3YXJlIHRoYXQgc2luY2UgdGhlIGBAYCBzeW1ib2wgaXMgYSByZXNlcnZlZCBzeW1ib2wgaW4gQ1NTLCBpdCBoYXMgdG8gYmVcbi8vIGVzY2FwZWQgd2l0aCBhIGBcXGAuIEluIHRoZSBtYXJrdXAgdGhvdWdoLCB5b3Ugd3JpdGUgeW91ciBjbGFzc2VzIHdpdGhvdXQgdGhlXG4vLyBiYWNrc2xhc2ggKGUuZy4gYHUtbWFyZ2luLWJvdHRvbUBtb2JpbGVgKS5cbiRpbnVpdC13aWR0aHMtYnJlYWtwb2ludC1zZXBhcmF0b3I6IFxcQCAhZGVmYXVsdDtcblxuXG5cbiRpbnVpdC1yZXNwb25zaXZlLXNwYWNpbmctZGlyZWN0aW9uczogKFxuICBcIi1ib3R0b21cIjogXCItYm90dG9tXCIsXG4pICFkZWZhdWx0O1xuXG4kaW51aXQtcmVzcG9uc2l2ZS1zcGFjaW5nLXByb3BlcnRpZXM6IChcbiAgXCJtYXJnaW5cIjogXCJtYXJnaW5cIixcbikgIWRlZmF1bHQ7XG5cbiRpbnVpdC1yZXNwb25zaXZlLXNwYWNpbmctc2l6ZXM6IChcbiAgXCItbm9uZVwiOiAwXG4pICFkZWZhdWx0O1xuXG5cblxuLyogc3R5bGVsaW50LWRpc2FibGUgbWF4LW5lc3RpbmctZGVwdGggKi9cblxuQGVhY2ggJHByb3BlcnR5LW5hbWVzcGFjZSwgJHByb3BlcnR5IGluICRpbnVpdC1yZXNwb25zaXZlLXNwYWNpbmctcHJvcGVydGllcyB7XG5cbiAgQGVhY2ggJGRpcmVjdGlvbi1uYW1lc3BhY2UsICRkaXJlY3Rpb24tcnVsZXMgaW4gJGludWl0LXJlc3BvbnNpdmUtc3BhY2luZy1kaXJlY3Rpb25zIHtcblxuICAgIEBlYWNoICRzaXplLW5hbWVzcGFjZSwgJHNpemUgaW4gJGludWl0LXJlc3BvbnNpdmUtc3BhY2luZy1zaXplcyB7XG5cbiAgICAgIEBlYWNoICRpbnVpdC1icC1uYW1lLCAkaW51aXQtYnAtdmFsdWUgaW4gJG1xLWJyZWFrcG9pbnRzIHtcblxuICAgICAgICBAaW5jbHVkZSBtcSgkZnJvbTogJGludWl0LWJwLW5hbWUpIHtcblxuICAgICAgICAgIC51LSN7JHByb3BlcnR5LW5hbWVzcGFjZX0jeyRkaXJlY3Rpb24tbmFtZXNwYWNlfSN7JHNpemUtbmFtZXNwYWNlfSN7JGludWl0LXdpZHRocy1icmVha3BvaW50LXNlcGFyYXRvcn0jeyRpbnVpdC1icC1uYW1lfSB7XG5cbiAgICAgICAgICAgIEBlYWNoICRkaXJlY3Rpb24gaW4gJGRpcmVjdGlvbi1ydWxlcyB7XG4gICAgICAgICAgICAgICN7JHByb3BlcnR5fSN7JGRpcmVjdGlvbn06ICRzaXplICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICB9XG5cbiAgICB9XG5cbiAgfVxuXG59XG5cbi8qIHN0eWxlbGludC1lbmFibGUgbWF4LW5lc3RpbmctZGVwdGggKi9cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL3V0aWxpdGllcy9fdXRpbGl0aWVzLnJlc3BvbnNpdmUtc3BhY2luZ3Muc2NzcyIsIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAjUFJJTlRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogVmVyeSBjcnVkZSwgcmVzZXQtbGlrZSBzdHlsZXMgdGFrZW4gZnJvbSB0aGUgSFRNTDUgQm9pbGVycGxhdGU6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vaDVicC9odG1sNS1ib2lsZXJwbGF0ZS9ibG9iLzUuMy4wL2Rpc3QvZG9jL2Nzcy5tZCNwcmludC1zdHlsZXNcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9oNWJwL2h0bWw1LWJvaWxlcnBsYXRlL2Jsb2IvbWFzdGVyL2Rpc3QvY3NzL21haW4uY3NzI0wyMDUtTDI4MlxuICovXG5cbkBtZWRpYSBwcmludCB7XG5cbiAgLyoqXG4gICAqIDEuIEJsYWNrIHByaW50cyBmYXN0ZXI6IGh0dHA6Ly93d3cuc2FuYmVpamkuY29tL2FyY2hpdmVzLzk1M1xuICAgKi9cblxuICAqLFxuICAqOmJlZm9yZSxcbiAgKjphZnRlcixcbiAgKjpmaXJzdC1sZXR0ZXIsXG4gICo6Zmlyc3QtbGluZSB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50OyAvKiBbMV0gKi9cbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuXG5cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuXG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICB9XG5cbiAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgfVxuXG5cbiAgLyoqXG4gICAqIERvbid0IHNob3cgbGlua3MgdGhhdCBhcmUgZnJhZ21lbnQgaWRlbnRpZmllcnMsIG9yIHVzZSB0aGUgYGphdmFzY3JpcHQ6YFxuICAgKiBwc2V1ZG8gcHJvdG9jb2wuXG4gICAqL1xuXG4gIGFbaHJlZl49XCIjXCJdOmFmdGVyLFxuICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cblxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG5cblxuICAvKipcbiAgICogUHJpbnRpbmcgVGFibGVzOiBodHRwOi8vY3NzLWRpc2N1c3MuaW5jdXRpby5jb20vd2lraS9QcmludGluZ19UYWJsZXNcbiAgICovXG5cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgfVxuXG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuXG5cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7XG4gIH1cblxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvbm9kZV9tb2R1bGVzL2ludWl0Y3NzL3V0aWxpdGllcy9fdXRpbGl0aWVzLnByaW50LnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgI0hJREVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogSGlkZSBvbmx5IHZpc3VhbGx5LCBidXQgaGF2ZSBpdCBhdmFpbGFibGUgZm9yIHNjcmVlbiByZWFkZXJzOlxuICogaHR0cDovL3Nub29rLmNhL2FyY2hpdmVzL2h0bWxfYW5kX2Nzcy9oaWRpbmctY29udGVudC1mb3ItYWNjZXNzaWJpbGl0eVxuICovXG5cbi51LWhpZGRlbi12aXN1YWxseSB7XG4gIEBpbmNsdWRlIGludWl0LWhpZGRlbi12aXN1YWxseSgpO1xufVxuXG5cbi8qKlxuICogSGlkZSB2aXN1YWxseSBhbmQgZnJvbSBzY3JlZW4gcmVhZGVycy5cbiAqL1xuXG4udS1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL25vZGVfbW9kdWxlcy9pbnVpdGNzcy91dGlsaXRpZXMvX3V0aWxpdGllcy5oaWRlLnNjc3MiLCIvLy8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gICAjSElEREVOLVZJU1VBTExZXG4vLyAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vLyBNaXhpbiB0byBxdWlja2x5IGFwcGx5IGFjY2Vzc2libGUgaGlkaW5nIHRvIGVsZW1lbnRzLlxuQG1peGluIGludWl0LWhpZGRlbi12aXN1YWxseSgpIHtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCkgIWltcG9ydGFudDtcbiAgY2xpcC1wYXRoOiBpbnNldCg1MCUpICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMXB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbjogLTFweCAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDtcbiAgd2lkdGg6IDFweCAhaW1wb3J0YW50O1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9ub2RlX21vZHVsZXMvaW51aXRjc3MvdG9vbHMvX3Rvb2xzLmhpZGRlbi5zY3NzIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFV0aWxpdGllcy9IaWRlIFJlc3BvbnNpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBpZiAodmFyaWFibGUtZXhpc3RzKG1xLWJyZWFrcG9pbnRzKSkge1xuICBAZWFjaCAkaW51aXQtYnAtbmFtZSwgJGludWl0LWJwLXZhbHVlIGluICRtcS1icmVha3BvaW50cyB7XG4gICAgQGluY2x1ZGUgbXEoJGZyb206ICRpbnVpdC1icC1uYW1lKSB7XG4gICAgICAudS1oaWRkZW5cXEAjeyRpbnVpdC1icC1uYW1lfSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICAgIC51LXNob3duXFxAI3skaW51aXQtYnAtbmFtZX0ge1xuICAgICAgICBkaXNwbGF5OiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gICAgICB9XG5cbiAgICAgIC51LWRpc3BsYXktYmxvY2sudS1zaG93blxcQCN7JGludWl0LWJwLW5hbWV9IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICAgIH1cblxuICAgICAgLnUtZGlzcGxheS1pbmxpbmUtYmxvY2sudS1zaG93blxcQCN7JGludWl0LWJwLW5hbWV9IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7XG4gICAgICB9XG5cbiAgICAgIC51LWRpc3BsYXktaW5saW5lLnUtc2hvd25cXEAjeyRpbnVpdC1icC1uYW1lfSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL191dGlsaXRpZXMuaGlkZS1yZXNwb25zaXZlLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgVXRpbGl0aWVzL0NvbnN0cmFpblxuICAgPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLnUtY29uc3RyYWluLS1odWdlIHtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG59XG5cbi51LWNvbnN0cmFpbi0tbGFyZ2Uge1xuICBtYXgtd2lkdGg6IDEyODBweDtcbn1cblxuLnUtY29uc3RyYWluIHtcbiAgbWF4LXdpZHRoOiAxMDI0cHg7XG59XG5cbi51LWNvbnN0cmFpbi0tc21hbGwge1xuICBtYXgtd2lkdGg6IDc2OHB4O1xufVxuXG4udS1jb25zdHJhaW4tLXRpbnkge1xuICBtYXgtd2lkdGg6IDYwMHB4O1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL3N0eWxlcy9yZXNvdXJjZXMvc3R5bGVzL191dGlsaXRpZXMuY29uc3RyYWluLnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgVXRpbGl0aWVzL0ZsZXhcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG4udS1mbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnUtZmxleC0tY2VudGVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi51LWZsZXgtLXJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLnUtZmxleC0tY2VudGVyLW1pZGRsZSB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4udS1mbGV4LS1ib3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvc3R5bGVzL3Jlc291cmNlcy9zdHlsZXMvX3V0aWxpdGllcy5mbGV4LnNjc3MiLCIvKiA9PT09PT09PT09PT09PT09PT09PT09PVxuICAgU2hhbWVcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9zdHlsZXMvcmVzb3VyY2VzL3N0eWxlcy9fc2hhbWUuc2NzcyJdLCJzb3VyY2VSb290IjoiIn0=*/