function generateHandle(e){var t=e.replace("/<(.*?)>/g","");t=t.replace(/['"‘’“”\[\]\(\)\{\}:]/g,""),t=t.toLowerCase(),t=Craft.asciiString(t),t=t.replace(/^[^a-z]+/,"");var a=Craft.filterArray(t.split(/[^a-z0-9]+/));t="";for(var r=0;r<a.length;r++)t+=0==r?a[r]:a[r].charAt(0).toUpperCase()+a[r].substr(1);return t}$(function(){var e=$("select#class");e.on({change:function(){var e=$(this).val().split("\\").join("");$("div#settings-"+e).show().siblings().hide()}}),e.trigger("change"),$("#name").val().length||$("#name").on({keyup:function(){$("#handle").val(generateHandle($(this).val())).trigger("change")}});var t=$("input.setting-return_uri"),a=$("#integration-type").data("type");$("#handle").on({change:function(){var e=$(this).val(),r=Craft.getCpUrl("freeform/settings/"+a+"/"+e);t.val(r)},keyup:function(){$(this).trigger("change")}});var r=$("#auth-checker"),n=$(".pending-status-check",r),i=n.data("id"),s=n.data("type");if(i){var o={id:i};o[Craft.csrfTokenName]=Craft.csrfTokenValue,$.ajax({url:Craft.getCpUrl("freeform/"+s+"/check"),data:o,type:"post",dataType:"json",success:function(e){n.hide(),e.success?$(".authorized",r).show():($(".not-authorized",r).show(),e.errors&&$(".not-authorized .errors",r).empty().text(e.errors.join(". ")))}})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVncmF0aW9ucy5qcyJdLCJuYW1lcyI6WyJnZW5lcmF0ZUhhbmRsZSIsInZhbHVlIiwiaGFuZGxlIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwiQ3JhZnQiLCJhc2NpaVN0cmluZyIsIndvcmRzIiwiZmlsdGVyQXJyYXkiLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInN1YnN0ciIsIiQiLCIkY2xhc3NTZWxlY3RvciIsIm9uIiwiY2hhbmdlIiwidmFsIiwidGhpcyIsImpvaW4iLCJzaG93Iiwic2libGluZ3MiLCJoaWRlIiwidHJpZ2dlciIsImtleXVwIiwiJHJldHVyblVyaSIsInVybFR5cGUiLCJkYXRhIiwidXBkYXRlZFVybCIsImdldENwVXJsIiwiJGF1dGhDaGVja2VyIiwicGVuZGluZ1N0YXR1c0NoZWNrIiwiaW50ZWdyYXRpb25JZCIsInR5cGUiLCJpZCIsImNzcmZUb2tlbk5hbWUiLCJjc3JmVG9rZW5WYWx1ZSIsImFqYXgiLCJ1cmwiLCJkYXRhVHlwZSIsInN1Y2Nlc3MiLCJqc29uIiwiZXJyb3JzIiwiZW1wdHkiLCJ0ZXh0Il0sIm1hcHBpbmdzIjoiQUFtRkEsUUFBU0EsZ0JBQWVDLEdBRXRCLEdBQUlDLEdBQVNELEVBQU1FLFFBQVEsYUFBYyxHQUd6Q0QsR0FBU0EsRUFBT0MsUUFBUSx5QkFBMEIsSUFHbERELEVBQVNBLEVBQU9FLGNBR2hCRixFQUFTRyxNQUFNQyxZQUFZSixHQUczQkEsRUFBU0EsRUFBT0MsUUFBUSxXQUFZLEdBR3BDLElBQUlJLEdBQVFGLE1BQU1HLFlBQVlOLEVBQU9PLE1BQU0sY0FFM0NQLEdBQVMsRUFHVCxLQUFLLEdBQUlRLEdBQUksRUFBR0EsRUFBSUgsRUFBTUksT0FBUUQsSUFFOUJSLEdBRE8sR0FBTFEsRUFDUUgsRUFBTUcsR0FHTkgsRUFBTUcsR0FBR0UsT0FBTyxHQUFHQyxjQUFnQk4sRUFBTUcsR0FBR0ksT0FBTyxFQUlqRSxPQUFPWixHQXhHVGEsRUFBRSxXQUNBLEdBQUlDLEdBQWlCRCxFQUFFLGVBQ3ZCQyxHQUFlQyxJQUNiQyxPQUFRLFdBQ04sR0FBSUMsR0FBTUosRUFBRUssTUFBTUQsTUFBTVYsTUFBTSxNQUFNWSxLQUFLLEdBRXpDTixHQUFFLGdCQUFrQkksR0FDakJHLE9BQ0FDLFdBQ0FDLFVBSVBSLEVBQWVTLFFBQVEsVUFFbEJWLEVBQUUsU0FBU0ksTUFBTVIsUUFDcEJJLEVBQUUsU0FBU0UsSUFDVFMsTUFBTyxXQUNMWCxFQUFFLFdBQVdJLElBQUluQixlQUFlZSxFQUFFSyxNQUFNRCxRQUFRTSxRQUFRLFlBSzlELElBQUlFLEdBQWFaLEVBQUUsNEJBQ2ZhLEVBQVViLEVBQUUscUJBQXFCYyxLQUFLLE9BRTFDZCxHQUFFLFdBQVdFLElBQ1hDLE9BQVEsV0FDTixHQUFJQyxHQUFhSixFQUFFSyxNQUFNRCxNQUNyQlcsRUFBYXpCLE1BQU0wQixTQUFTLHFCQUF1QkgsRUFBVSxJQUFNVCxFQUV2RVEsR0FBV1IsSUFBSVcsSUFFakJKLE1BQU8sV0FDTFgsRUFBRUssTUFBTUssUUFBUSxZQUlwQixJQUFJTyxHQUFxQmpCLEVBQUUsaUJBQ3ZCa0IsRUFBcUJsQixFQUFFLHdCQUF5QmlCLEdBQ2hERSxFQUFxQkQsRUFBbUJKLEtBQUssTUFDN0NNLEVBQXFCRixFQUFtQkosS0FBSyxPQUVqRCxJQUFJSyxFQUFlLENBQ2pCLEdBQUlMLElBQ0ZPLEdBQUlGLEVBR05MLEdBQUt4QixNQUFNZ0MsZUFBaUJoQyxNQUFNaUMsZUFFbEN2QixFQUFFd0IsTUFDQUMsSUFBS25DLE1BQU0wQixTQUFTLFlBQWNJLEVBQU8sVUFDekNOLEtBQU1BLEVBQ05NLEtBQU0sT0FDTk0sU0FBVSxPQUNWQyxRQUFTLFNBQVVDLEdBQ2pCVixFQUFtQlQsT0FFZm1CLEVBQUtELFFBQ1AzQixFQUFFLGNBQWVpQixHQUFjVixRQUUvQlAsRUFBRSxrQkFBbUJpQixHQUFjVixPQUUvQnFCLEVBQUtDLFFBQ1A3QixFQUFFLDBCQUEyQmlCLEdBQWNhLFFBQVFDLEtBQUtILEVBQUtDLE9BQU92QixLQUFLIiwiZmlsZSI6ImludGVncmF0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBGcmVlZm9ybSBmb3IgQ3JhZnRcbiAqXG4gKiBAcGFja2FnZSAgICAgICBTb2xzcGFjZTpGcmVlZm9ybVxuICogQGF1dGhvciAgICAgICAgU29sc3BhY2UsIEluYy5cbiAqIEBjb3B5cmlnaHQgICAgIENvcHlyaWdodCAoYykgMjAwOC0yMDE2LCBTb2xzcGFjZSwgSW5jLlxuICogQGxpbmsgICAgICAgICAgaHR0cHM6Ly9zb2xzcGFjZS5jb20vY3JhZnQvZnJlZWZvcm1cbiAqIEBsaWNlbnNlICAgICAgIGh0dHBzOi8vc29sc3BhY2UuY29tL3NvZnR3YXJlL2xpY2Vuc2UtYWdyZWVtZW50XG4gKi9cblxuJChmdW5jdGlvbiAoKSB7XG4gIHZhciAkY2xhc3NTZWxlY3RvciA9ICQoXCJzZWxlY3QjY2xhc3NcIik7XG4gICRjbGFzc1NlbGVjdG9yLm9uKHtcbiAgICBjaGFuZ2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB2YWwgPSAkKHRoaXMpLnZhbCgpLnNwbGl0KFwiXFxcXFwiKS5qb2luKFwiXCIpO1xuXG4gICAgICAkKFwiZGl2I3NldHRpbmdzLVwiICsgdmFsKVxuICAgICAgICAuc2hvdygpXG4gICAgICAgIC5zaWJsaW5ncygpXG4gICAgICAgIC5oaWRlKCk7XG4gICAgfVxuICB9KTtcblxuICAkY2xhc3NTZWxlY3Rvci50cmlnZ2VyKFwiY2hhbmdlXCIpO1xuXG4gIGlmICghJChcIiNuYW1lXCIpLnZhbCgpLmxlbmd0aCkge1xuICAgICQoXCIjbmFtZVwiKS5vbih7XG4gICAgICBrZXl1cDogZnVuY3Rpb24gKCkge1xuICAgICAgICAkKFwiI2hhbmRsZVwiKS52YWwoZ2VuZXJhdGVIYW5kbGUoJCh0aGlzKS52YWwoKSkpLnRyaWdnZXIoXCJjaGFuZ2VcIik7XG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHZhciAkcmV0dXJuVXJpID0gJChcImlucHV0LnNldHRpbmctcmV0dXJuX3VyaVwiKTtcbiAgdmFyIHVybFR5cGUgPSAkKFwiI2ludGVncmF0aW9uLXR5cGVcIikuZGF0YShcInR5cGVcIik7XG5cbiAgJChcIiNoYW5kbGVcIikub24oe1xuICAgIGNoYW5nZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHZhbCAgICAgICAgPSAkKHRoaXMpLnZhbCgpO1xuICAgICAgdmFyIHVwZGF0ZWRVcmwgPSBDcmFmdC5nZXRDcFVybChcImZyZWVmb3JtL3NldHRpbmdzL1wiICsgdXJsVHlwZSArIFwiL1wiICsgdmFsKTtcblxuICAgICAgJHJldHVyblVyaS52YWwodXBkYXRlZFVybCk7XG4gICAgfSxcbiAgICBrZXl1cDogZnVuY3Rpb24gKCkge1xuICAgICAgJCh0aGlzKS50cmlnZ2VyKFwiY2hhbmdlXCIpO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyICRhdXRoQ2hlY2tlciAgICAgICA9ICQoXCIjYXV0aC1jaGVja2VyXCIpO1xuICB2YXIgcGVuZGluZ1N0YXR1c0NoZWNrID0gJChcIi5wZW5kaW5nLXN0YXR1cy1jaGVja1wiLCAkYXV0aENoZWNrZXIpO1xuICB2YXIgaW50ZWdyYXRpb25JZCAgICAgID0gcGVuZGluZ1N0YXR1c0NoZWNrLmRhdGEoXCJpZFwiKTtcbiAgdmFyIHR5cGUgICAgICAgICAgICAgICA9IHBlbmRpbmdTdGF0dXNDaGVjay5kYXRhKFwidHlwZVwiKTtcblxuICBpZiAoaW50ZWdyYXRpb25JZCkge1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgaWQ6IGludGVncmF0aW9uSWQsXG4gICAgfTtcblxuICAgIGRhdGFbQ3JhZnQuY3NyZlRva2VuTmFtZV0gPSBDcmFmdC5jc3JmVG9rZW5WYWx1ZTtcblxuICAgICQuYWpheCh7XG4gICAgICB1cmw6IENyYWZ0LmdldENwVXJsKFwiZnJlZWZvcm0vXCIgKyB0eXBlICsgXCIvY2hlY2tcIiksXG4gICAgICBkYXRhOiBkYXRhLFxuICAgICAgdHlwZTogXCJwb3N0XCIsXG4gICAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoanNvbikge1xuICAgICAgICBwZW5kaW5nU3RhdHVzQ2hlY2suaGlkZSgpO1xuXG4gICAgICAgIGlmIChqc29uLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAkKFwiLmF1dGhvcml6ZWRcIiwgJGF1dGhDaGVja2VyKS5zaG93KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJChcIi5ub3QtYXV0aG9yaXplZFwiLCAkYXV0aENoZWNrZXIpLnNob3coKTtcblxuICAgICAgICAgIGlmIChqc29uLmVycm9ycykge1xuICAgICAgICAgICAgJChcIi5ub3QtYXV0aG9yaXplZCAuZXJyb3JzXCIsICRhdXRoQ2hlY2tlcikuZW1wdHkoKS50ZXh0KGpzb24uZXJyb3JzLmpvaW4oXCIuIFwiKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pO1xuICB9XG59KTtcblxuXG5mdW5jdGlvbiBnZW5lcmF0ZUhhbmRsZSh2YWx1ZSkge1xuICAvLyBSZW1vdmUgSFRNTCB0YWdzXG4gIHZhciBoYW5kbGUgPSB2YWx1ZS5yZXBsYWNlKFwiLzwoLio/KT4vZ1wiLCAnJyk7XG5cbiAgLy8gUmVtb3ZlIGlubmVyLXdvcmQgcHVuY3R1YXRpb25cbiAgaGFuZGxlID0gaGFuZGxlLnJlcGxhY2UoL1snXCLigJjigJnigJzigJ1cXFtcXF1cXChcXClcXHtcXH06XS9nLCAnJyk7XG5cbiAgLy8gTWFrZSBpdCBsb3dlcmNhc2VcbiAgaGFuZGxlID0gaGFuZGxlLnRvTG93ZXJDYXNlKCk7XG5cbiAgLy8gQ29udmVydCBleHRlbmRlZCBBU0NJSSBjaGFyYWN0ZXJzIHRvIGJhc2ljIEFTQ0lJXG4gIGhhbmRsZSA9IENyYWZ0LmFzY2lpU3RyaW5nKGhhbmRsZSk7XG5cbiAgLy8gSGFuZGxlIG11c3Qgc3RhcnQgd2l0aCBhIGxldHRlclxuICBoYW5kbGUgPSBoYW5kbGUucmVwbGFjZSgvXlteYS16XSsvLCAnJyk7XG5cbiAgLy8gR2V0IHRoZSBcIndvcmRzXCJcbiAgdmFyIHdvcmRzID0gQ3JhZnQuZmlsdGVyQXJyYXkoaGFuZGxlLnNwbGl0KC9bXmEtejAtOV0rLykpO1xuXG4gIGhhbmRsZSA9ICcnO1xuXG4gIC8vIE1ha2UgaXQgY2FtZWxDYXNlXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgd29yZHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoaSA9PSAwKSB7XG4gICAgICBoYW5kbGUgKz0gd29yZHNbaV07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgaGFuZGxlICs9IHdvcmRzW2ldLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgd29yZHNbaV0uc3Vic3RyKDEpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBoYW5kbGU7XG59XG4iXX0=
